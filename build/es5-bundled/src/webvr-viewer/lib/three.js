(function(o,_){'object'===('undefined'===typeof exports?'undefined':babelHelpers.typeof(exports))&&'undefined'!==typeof module?_(exports):'function'===typeof define&&define.amd?define(['exports'],_):_(o.THREE=o.THREE||{})})(this,function(o){'use strict';function _(Co,Do,Uo,No){this._x=Co||0,this._y=Do||0,this._z=Uo||0,this._w=No===void 0?1:No}function E(Co,Do,Uo){this.x=Co||0,this.y=Do||0,this.z=Uo||0}function S(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.')}function M(){}function T(Co,Do){this.x=Co||0,this.y=Do||0}function L(Co,Do,Uo,No,Io,zo,Fo,Bo,Oo,Go){Object.defineProperty(this,'id',{value:ui++}),this.uuid=pi.generateUUID(),this.name='',this.image=Co===void 0?L.DEFAULT_IMAGE:Co,this.mipmaps=[],this.mapping=Do===void 0?L.DEFAULT_MAPPING:Do,this.wrapS=Uo===void 0?na:Uo,this.wrapT=No===void 0?na:No,this.magFilter=Io===void 0?ca:Io,this.minFilter=zo===void 0?ua:zo,this.anisotropy=Oo===void 0?1:Oo,this.format=Fo===void 0?Aa:Fo,this.type=Bo===void 0?ma:Bo,this.offset=new T(0,0),this.repeat=new T(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=Go===void 0?ti:Go,this.version=0,this.onUpdate=null}function A(Co,Do,Uo,No,Io,zo,Fo,Bo,Oo,Go){Co=Co===void 0?[]:Co,Do=Do===void 0?Jr:Do,L.call(this,Co,Do,Uo,No,Io,zo,Fo,Bo,Oo,Go),this.flipY=!1}function R(){this.seq=[],this.map={}}function P(Co,Do,Uo){var No=Co[0];if(0>=No||0<No)return Co;var Io=Do*Uo,zo=gi[Io];if(void 0===zo&&(zo=new Float32Array(Io),gi[Io]=zo),0!==Do){No.toArray(zo,0);for(var Fo=1,Bo=0;Fo!==Do;++Fo)Bo+=Uo,Co[Fo].toArray(zo,Bo)}return zo}function C(Co,Do){var Uo=hi[Do];Uo===void 0&&(Uo=new Int32Array(Do),hi[Do]=Uo);for(var No=0;No!==Do;++No)Uo[No]=Co.allocTextureUnit();return Uo}function D(Co,Do){Co.uniform1f(this.addr,Do)}function U(Co,Do){Co.uniform1i(this.addr,Do)}function N(Co,Do){Do.x===void 0?Co.uniform2fv(this.addr,Do):Co.uniform2f(this.addr,Do.x,Do.y)}function I(Co,Do){Do.x===void 0?Do.r===void 0?Co.uniform3fv(this.addr,Do):Co.uniform3f(this.addr,Do.r,Do.g,Do.b):Co.uniform3f(this.addr,Do.x,Do.y,Do.z)}function F(Co,Do){Do.x===void 0?Co.uniform4fv(this.addr,Do):Co.uniform4f(this.addr,Do.x,Do.y,Do.z,Do.w)}function B(Co,Do){Co.uniformMatrix2fv(this.addr,!1,Do.elements||Do)}function O(Co,Do){Co.uniformMatrix3fv(this.addr,!1,Do.elements||Do)}function G(Co,Do){Co.uniformMatrix4fv(this.addr,!1,Do.elements||Do)}function V(Co,Do,Uo){var No=Uo.allocTextureUnit();Co.uniform1i(this.addr,No),Uo.setTexture2D(Do||mi,No)}function H(Co,Do,Uo){var No=Uo.allocTextureUnit();Co.uniform1i(this.addr,No),Uo.setTextureCube(Do||fi,No)}function W(Co,Do){Co.uniform2iv(this.addr,Do)}function X(Co,Do){Co.uniform3iv(this.addr,Do)}function Y(Co,Do){Co.uniform4iv(this.addr,Do)}function Z(Co){return 5126===Co?D:35664===Co?N:35665===Co?I:35666===Co?F:35674===Co?B:35675===Co?O:35676===Co?G:35678===Co?V:35680===Co?H:5124===Co||35670===Co?U:35667===Co||35671===Co?W:35668===Co||35672===Co?X:35669===Co||35673===Co?Y:void 0}function Q(Co,Do){Co.uniform1fv(this.addr,Do)}function J(Co,Do){Co.uniform1iv(this.addr,Do)}function K(Co,Do){Co.uniform2fv(this.addr,P(Do,this.size,2))}function $(Co,Do){Co.uniform3fv(this.addr,P(Do,this.size,3))}function ee(Co,Do){Co.uniform4fv(this.addr,P(Do,this.size,4))}function re(Co,Do){Co.uniformMatrix2fv(this.addr,!1,P(Do,this.size,4))}function ie(Co,Do){Co.uniformMatrix3fv(this.addr,!1,P(Do,this.size,9))}function ne(Co,Do){Co.uniformMatrix4fv(this.addr,!1,P(Do,this.size,16))}function oe(Co,Do,Uo){var No=Do.length,Io=C(Uo,No);Co.uniform1iv(this.addr,Io);for(var zo=0;zo!==No;++zo)Uo.setTexture2D(Do[zo]||mi,Io[zo])}function se(Co,Do,Uo){var No=Do.length,Io=C(Uo,No);Co.uniform1iv(this.addr,Io);for(var zo=0;zo!==No;++zo)Uo.setTextureCube(Do[zo]||fi,Io[zo])}function le(Co){return 5126===Co?Q:35664===Co?K:35665===Co?$:35666===Co?ee:35674===Co?re:35675===Co?ie:35676===Co?ne:35678===Co?oe:35680===Co?se:5124===Co||35670===Co?J:35667===Co||35671===Co?W:35668===Co||35672===Co?X:35669===Co||35673===Co?Y:void 0}function pe(Co,Do,Uo){this.id=Co,this.addr=Uo,this.setValue=Z(Do.type)}function ue(Co,Do,Uo){this.id=Co,this.addr=Uo,this.size=Do.size,this.setValue=le(Do.type)}function fe(Co){this.id=Co,R.call(this)}function ge(Co,Do){Co.seq.push(Do),Co.map[Do.id]=Do}function he(Co,Do,Uo){var No=Co.name,Io=No.length;for(xi.lastIndex=0;;){var zo=xi.exec(No),Fo=xi.lastIndex,Bo=zo[1],Oo=']'===zo[2],Go=zo[3];if(Oo&&(Bo|=0),void 0===Go||'['===Go&&Fo+2===Io){ge(Uo,void 0===Go?new pe(Bo,Co,Do):new ue(Bo,Co,Do));break}else{var Vo=Uo.map,Ho=Vo[Bo];void 0===Ho&&(Ho=new fe(Bo),ge(Uo,Ho)),Uo=Ho}}}function xe(Co,Do,Uo){R.call(this),this.renderer=Uo;for(var No=Co.getProgramParameter(Do,Co.ACTIVE_UNIFORMS),Io=0;Io<No;++Io){var zo=Co.getActiveUniform(Do,Io),Fo=zo.name,Bo=Co.getUniformLocation(Do,Fo);he(zo,Bo,this)}}function _e(Co,Do,Uo,No){this.x=Co||0,this.y=Do||0,this.z=Uo||0,this.w=No===void 0?1:No}function ve(Co,Do,Uo){return void 0===Do&&void 0===Uo?this.set(Co):this.setRGB(Co,Do,Uo)}function ye(Co,Do){this.min=Co===void 0?new T(+Infinity,+Infinity):Co,this.max=Do===void 0?new T(-Infinity,-Infinity):Do}function Ee(Co,Do){function Uo(){var Xo=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),Yo=new Uint16Array([0,1,2,0,2,3]);Fo=Io.createBuffer(),Bo=Io.createBuffer(),Io.bindBuffer(Io.ARRAY_BUFFER,Fo),Io.bufferData(Io.ARRAY_BUFFER,Xo,Io.STATIC_DRAW),Io.bindBuffer(Io.ELEMENT_ARRAY_BUFFER,Bo),Io.bufferData(Io.ELEMENT_ARRAY_BUFFER,Yo,Io.STATIC_DRAW),ko=Io.createTexture(),Wo=Io.createTexture(),zo.bindTexture(Io.TEXTURE_2D,ko),Io.texImage2D(Io.TEXTURE_2D,0,Io.RGB,16,16,0,Io.RGB,Io.UNSIGNED_BYTE,null),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_WRAP_S,Io.CLAMP_TO_EDGE),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_WRAP_T,Io.CLAMP_TO_EDGE),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_MAG_FILTER,Io.NEAREST),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_MIN_FILTER,Io.NEAREST),zo.bindTexture(Io.TEXTURE_2D,Wo),Io.texImage2D(Io.TEXTURE_2D,0,Io.RGBA,16,16,0,Io.RGBA,Io.UNSIGNED_BYTE,null),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_WRAP_S,Io.CLAMP_TO_EDGE),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_WRAP_T,Io.CLAMP_TO_EDGE),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_MAG_FILTER,Io.NEAREST),Io.texParameteri(Io.TEXTURE_2D,Io.TEXTURE_MIN_FILTER,Io.NEAREST),Oo={vertexShader:['uniform lowp int renderType;','uniform vec3 screenPosition;','uniform vec2 scale;','uniform float rotation;','uniform sampler2D occlusionMap;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','varying float vVisibility;','void main() {','vUV = uv;','vec2 pos = position;','if ( renderType == 2 ) {','vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );','visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );','visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );','visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );','visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );','visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );','visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );','visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );','visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );','vVisibility =        visibility.r / 9.0;','vVisibility *= 1.0 - visibility.g / 9.0;','vVisibility *=       visibility.b / 9.0;','vVisibility *= 1.0 - visibility.a / 9.0;','pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;','pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;','}','gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );','}'].join('\n'),fragmentShader:['uniform lowp int renderType;','uniform sampler2D map;','uniform float opacity;','uniform vec3 color;','varying vec2 vUV;','varying float vVisibility;','void main() {','if ( renderType == 0 ) {','gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );','} else if ( renderType == 1 ) {','gl_FragColor = texture2D( map, vUV );','} else {','vec4 texture = texture2D( map, vUV );','texture.a *= opacity * vVisibility;','gl_FragColor = texture;','gl_FragColor.rgb *= color;','}','}'].join('\n')},Go=No(Oo),Vo={vertex:Io.getAttribLocation(Go,'position'),uv:Io.getAttribLocation(Go,'uv')},Ho={renderType:Io.getUniformLocation(Go,'renderType'),map:Io.getUniformLocation(Go,'map'),occlusionMap:Io.getUniformLocation(Go,'occlusionMap'),opacity:Io.getUniformLocation(Go,'opacity'),color:Io.getUniformLocation(Go,'color'),scale:Io.getUniformLocation(Go,'scale'),rotation:Io.getUniformLocation(Go,'rotation'),screenPosition:Io.getUniformLocation(Go,'screenPosition')}}function No(Xo){var Yo=Io.createProgram(),jo=Io.createShader(Io.FRAGMENT_SHADER),qo=Io.createShader(Io.VERTEX_SHADER),Zo='precision '+Co.getPrecision()+' float;\n';return Io.shaderSource(jo,Zo+Xo.fragmentShader),Io.shaderSource(qo,Zo+Xo.vertexShader),Io.compileShader(jo),Io.compileShader(qo),Io.attachShader(Yo,jo),Io.attachShader(Yo,qo),Io.linkProgram(Yo),Yo}var Io=Co.context,zo=Co.state,Fo,Bo,Oo,Go,Vo,Ho,ko,Wo;this.render=function(Xo,Yo,jo){if(0!==Do.length){var qo=new E,Zo=jo.w/jo.z,Qo=0.5*jo.z,Jo=0.5*jo.w,Ko=16/jo.w,$o=new T(Ko*Zo,Ko),es=new E(1,1,0),ts=new T(1,1),rs=new ye;rs.min.set(jo.x,jo.y),rs.max.set(jo.x+(jo.z-16),jo.y+(jo.w-16)),void 0===Go&&Uo(),Io.useProgram(Go),zo.initAttributes(),zo.enableAttribute(Vo.vertex),zo.enableAttribute(Vo.uv),zo.disableUnusedAttributes(),Io.uniform1i(Ho.occlusionMap,0),Io.uniform1i(Ho.map,1),Io.bindBuffer(Io.ARRAY_BUFFER,Fo),Io.vertexAttribPointer(Vo.vertex,2,Io.FLOAT,!1,16,0),Io.vertexAttribPointer(Vo.uv,2,Io.FLOAT,!1,16,8),Io.bindBuffer(Io.ELEMENT_ARRAY_BUFFER,Bo),zo.disable(Io.CULL_FACE),zo.setDepthWrite(!1);for(var as=0,is=Do.length;as<is;as++){Ko=16/jo.w,$o.set(Ko*Zo,Ko);var ns=Do[as];if(qo.set(ns.matrixWorld.elements[12],ns.matrixWorld.elements[13],ns.matrixWorld.elements[14]),qo.applyMatrix4(Yo.matrixWorldInverse),qo.applyMatrix4(Yo.projectionMatrix),es.copy(qo),ts.x=jo.x+es.x*Qo+Qo-8,ts.y=jo.y+es.y*Jo+Jo-8,!0===rs.containsPoint(ts)){zo.activeTexture(Io.TEXTURE0),zo.bindTexture(Io.TEXTURE_2D,null),zo.activeTexture(Io.TEXTURE1),zo.bindTexture(Io.TEXTURE_2D,ko),Io.copyTexImage2D(Io.TEXTURE_2D,0,Io.RGB,ts.x,ts.y,16,16,0),Io.uniform1i(Ho.renderType,0),Io.uniform2f(Ho.scale,$o.x,$o.y),Io.uniform3f(Ho.screenPosition,es.x,es.y,es.z),zo.disable(Io.BLEND),zo.enable(Io.DEPTH_TEST),Io.drawElements(Io.TRIANGLES,6,Io.UNSIGNED_SHORT,0),zo.activeTexture(Io.TEXTURE0),zo.bindTexture(Io.TEXTURE_2D,Wo),Io.copyTexImage2D(Io.TEXTURE_2D,0,Io.RGBA,ts.x,ts.y,16,16,0),Io.uniform1i(Ho.renderType,1),zo.disable(Io.DEPTH_TEST),zo.activeTexture(Io.TEXTURE1),zo.bindTexture(Io.TEXTURE_2D,ko),Io.drawElements(Io.TRIANGLES,6,Io.UNSIGNED_SHORT,0),ns.positionScreen.copy(es),ns.customUpdateCallback?ns.customUpdateCallback(ns):ns.updateLensFlares(),Io.uniform1i(Ho.renderType,2),zo.enable(Io.BLEND);for(var os=0,ss=ns.lensFlares.length,ls;os<ss;os++)ls=ns.lensFlares[os],1e-3<ls.opacity&&1e-3<ls.scale&&(es.x=ls.x,es.y=ls.y,es.z=ls.z,Ko=ls.size*ls.scale/jo.w,$o.x=Ko*Zo,$o.y=Ko,Io.uniform3f(Ho.screenPosition,es.x,es.y,es.z),Io.uniform2f(Ho.scale,$o.x,$o.y),Io.uniform1f(Ho.rotation,ls.rotation),Io.uniform1f(Ho.opacity,ls.opacity),Io.uniform3f(Ho.color,ls.color.r,ls.color.g,ls.color.b),zo.setBlending(ls.blending,ls.blendEquation,ls.blendSrc,ls.blendDst),Co.setTexture2D(ls.texture,1),Io.drawElements(Io.TRIANGLES,6,Io.UNSIGNED_SHORT,0))}}zo.enable(Io.CULL_FACE),zo.enable(Io.DEPTH_TEST),zo.setDepthWrite(!0),Co.resetGLState()}}}function Se(Co,Do){function Uo(){var jo=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),qo=new Uint16Array([0,1,2,0,2,3]);Bo=zo.createBuffer(),Oo=zo.createBuffer(),zo.bindBuffer(zo.ARRAY_BUFFER,Bo),zo.bufferData(zo.ARRAY_BUFFER,jo,zo.STATIC_DRAW),zo.bindBuffer(zo.ELEMENT_ARRAY_BUFFER,Oo),zo.bufferData(zo.ELEMENT_ARRAY_BUFFER,qo,zo.STATIC_DRAW),Go=No(),Vo={position:zo.getAttribLocation(Go,'position'),uv:zo.getAttribLocation(Go,'uv')},Ho={uvOffset:zo.getUniformLocation(Go,'uvOffset'),uvScale:zo.getUniformLocation(Go,'uvScale'),rotation:zo.getUniformLocation(Go,'rotation'),scale:zo.getUniformLocation(Go,'scale'),color:zo.getUniformLocation(Go,'color'),map:zo.getUniformLocation(Go,'map'),opacity:zo.getUniformLocation(Go,'opacity'),modelViewMatrix:zo.getUniformLocation(Go,'modelViewMatrix'),projectionMatrix:zo.getUniformLocation(Go,'projectionMatrix'),fogType:zo.getUniformLocation(Go,'fogType'),fogDensity:zo.getUniformLocation(Go,'fogDensity'),fogNear:zo.getUniformLocation(Go,'fogNear'),fogFar:zo.getUniformLocation(Go,'fogFar'),fogColor:zo.getUniformLocation(Go,'fogColor'),alphaTest:zo.getUniformLocation(Go,'alphaTest')};var Zo=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');Zo.width=8,Zo.height=8;var Qo=Zo.getContext('2d');Qo.fillStyle='white',Qo.fillRect(0,0,8,8),ko=new L(Zo),ko.needsUpdate=!0}function No(){var jo=zo.createProgram(),qo=zo.createShader(zo.VERTEX_SHADER),Zo=zo.createShader(zo.FRAGMENT_SHADER);return zo.shaderSource(qo,['precision '+Co.getPrecision()+' float;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform float rotation;','uniform vec2 scale;','uniform vec2 uvOffset;','uniform vec2 uvScale;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','void main() {','vUV = uvOffset + uv * uvScale;','vec2 alignedPosition = position * scale;','vec2 rotatedPosition;','rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;','rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;','vec4 finalPosition;','finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );','finalPosition.xy += rotatedPosition;','finalPosition = projectionMatrix * finalPosition;','gl_Position = finalPosition;','}'].join('\n')),zo.shaderSource(Zo,['precision '+Co.getPrecision()+' float;','uniform vec3 color;','uniform sampler2D map;','uniform float opacity;','uniform int fogType;','uniform vec3 fogColor;','uniform float fogDensity;','uniform float fogNear;','uniform float fogFar;','uniform float alphaTest;','varying vec2 vUV;','void main() {','vec4 texture = texture2D( map, vUV );','if ( texture.a < alphaTest ) discard;','gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );','if ( fogType > 0 ) {','float depth = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = 0.0;','if ( fogType == 1 ) {','fogFactor = smoothstep( fogNear, fogFar, depth );','} else {','const float LOG2 = 1.442695;','fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );','fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );','}','gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );','}','}'].join('\n')),zo.compileShader(qo),zo.compileShader(Zo),zo.attachShader(jo,qo),zo.attachShader(jo,Zo),zo.linkProgram(jo),jo}function Io(jo,qo){return jo.renderOrder===qo.renderOrder?jo.z===qo.z?qo.id-jo.id:qo.z-jo.z:jo.renderOrder-qo.renderOrder}var zo=Co.context,Fo=Co.state,Bo,Oo,Go,Vo,Ho,ko,Wo=new E,Xo=new _,Yo=new E;this.render=function(jo,qo){if(0!==Do.length){void 0===Go&&Uo(),zo.useProgram(Go),Fo.initAttributes(),Fo.enableAttribute(Vo.position),Fo.enableAttribute(Vo.uv),Fo.disableUnusedAttributes(),Fo.disable(zo.CULL_FACE),Fo.enable(zo.BLEND),zo.bindBuffer(zo.ARRAY_BUFFER,Bo),zo.vertexAttribPointer(Vo.position,2,zo.FLOAT,!1,16,0),zo.vertexAttribPointer(Vo.uv,2,zo.FLOAT,!1,16,8),zo.bindBuffer(zo.ELEMENT_ARRAY_BUFFER,Oo),zo.uniformMatrix4fv(Ho.projectionMatrix,!1,qo.projectionMatrix.elements),Fo.activeTexture(zo.TEXTURE0),zo.uniform1i(Ho.map,0);var Zo=0,Qo=0,Jo=jo.fog;Jo?(zo.uniform3f(Ho.fogColor,Jo.color.r,Jo.color.g,Jo.color.b),Jo.isFog?(zo.uniform1f(Ho.fogNear,Jo.near),zo.uniform1f(Ho.fogFar,Jo.far),zo.uniform1i(Ho.fogType,1),Zo=1,Qo=1):Jo.isFogExp2&&(zo.uniform1f(Ho.fogDensity,Jo.density),zo.uniform1i(Ho.fogType,2),Zo=2,Qo=2)):(zo.uniform1i(Ho.fogType,0),Zo=0,Qo=0);for(var Ko=0,$o=Do.length,es;Ko<$o;Ko++)es=Do[Ko],es.modelViewMatrix.multiplyMatrices(qo.matrixWorldInverse,es.matrixWorld),es.z=-es.modelViewMatrix.elements[14];Do.sort(Io);for(var ts=[],Ko=0,$o=Do.length;Ko<$o;Ko++){var es=Do[Ko],rs=es.material;if(!1!==rs.visible){zo.uniform1f(Ho.alphaTest,rs.alphaTest),zo.uniformMatrix4fv(Ho.modelViewMatrix,!1,es.modelViewMatrix.elements),es.matrixWorld.decompose(Wo,Xo,Yo),ts[0]=Yo.x,ts[1]=Yo.y;var as=0;jo.fog&&rs.fog&&(as=Qo),Zo!==as&&(zo.uniform1i(Ho.fogType,as),Zo=as),null===rs.map?(zo.uniform2f(Ho.uvOffset,0,0),zo.uniform2f(Ho.uvScale,1,1)):(zo.uniform2f(Ho.uvOffset,rs.map.offset.x,rs.map.offset.y),zo.uniform2f(Ho.uvScale,rs.map.repeat.x,rs.map.repeat.y)),zo.uniform1f(Ho.opacity,rs.opacity),zo.uniform3f(Ho.color,rs.color.r,rs.color.g,rs.color.b),zo.uniform1f(Ho.rotation,rs.rotation),zo.uniform2fv(Ho.scale,ts),Fo.setBlending(rs.blending,rs.blendEquation,rs.blendSrc,rs.blendDst),Fo.setDepthTest(rs.depthTest),Fo.setDepthWrite(rs.depthWrite),rs.map?Co.setTexture2D(rs.map,0):Co.setTexture2D(ko,0),zo.drawElements(zo.TRIANGLES,6,zo.UNSIGNED_SHORT,0)}}Fo.enable(zo.CULL_FACE),Co.resetGLState()}}}function Me(Co,Do,Uo){this.uuid=pi.generateUUID(),this.width=Co,this.height=Do,this.scissor=new _e(0,0,Co,Do),this.scissorTest=!1,this.viewport=new _e(0,0,Co,Do),Uo=Uo||{},Uo.minFilter===void 0&&(Uo.minFilter=ca),this.texture=new L(void 0,void 0,Uo.wrapS,Uo.wrapT,Uo.magFilter,Uo.minFilter,Uo.format,Uo.type,Uo.anisotropy,Uo.encoding),this.depthBuffer=!(Uo.depthBuffer!==void 0)||Uo.depthBuffer,this.stencilBuffer=!(Uo.stencilBuffer!==void 0)||Uo.stencilBuffer,this.depthTexture=Uo.depthTexture===void 0?null:Uo.depthTexture}function Te(){Object.defineProperty(this,'id',{value:To++}),this.uuid=pi.generateUUID(),this.name='',this.type='Material',this.fog=!0,this.lights=!0,this.blending=mr,this.side=ir,this.shading=lr,this.vertexColors=dr,this.opacity=1,this.transparent=!1,this.blendSrc=Ar,this.blendDst=Rr,this.blendEquation=_r,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Fr,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0}function Le(Co){Te.call(this),this.type='ShaderMaterial',this.defines={},this.uniforms={},this.vertexShader='void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',this.fragmentShader='void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}',this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,Co!==void 0&&(Co.attributes!==void 0&&console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.'),this.setValues(Co))}function Ae(Co){Te.call(this),this.type='MeshDepthMaterial',this.depthPacking=di,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(Co)}function Re(Co,Do){this.min=Co===void 0?new E(+Infinity,+Infinity,+Infinity):Co,this.max=Do===void 0?new E(-Infinity,-Infinity,-Infinity):Do}function Pe(Co,Do){this.center=Co===void 0?new E:Co,this.radius=Do===void 0?0:Do}function we(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.')}function Ce(Co,Do){this.normal=Co===void 0?new E(1,0,0):Co,this.constant=Do===void 0?0:Do}function De(Co,Do,Uo,No,Io,zo){this.planes=[Co===void 0?new Ce:Co,Do===void 0?new Ce:Do,Uo===void 0?new Ce:Uo,No===void 0?new Ce:No,Io===void 0?new Ce:Io,zo===void 0?new Ce:zo]}function Ue(Co,Do,Uo,No){function Io(ps,us,ms,fs){var gs=ps.geometry,hs=null,xs=Qo,_s=ps.customDepthMaterial;if(ms&&(xs=Jo,_s=ps.customDistanceMaterial),!_s){var vs=!1;us.morphTargets&&(gs&&gs.isBufferGeometry?vs=gs.morphAttributes&&gs.morphAttributes.position&&0<gs.morphAttributes.position.length:gs&&gs.isGeometry&&(vs=gs.morphTargets&&0<gs.morphTargets.length));var ys=ps.isSkinnedMesh&&us.skinning,Es=0;vs&&(Es|=jo),ys&&(Es|=qo),hs=xs[Es]}else hs=_s;if(Co.localClippingEnabled&&!0===us.clipShadows&&0!==us.clippingPlanes.length){var bs=hs.uuid,Ss=us.uuid,Ms=Ko[bs];void 0===Ms&&(Ms={},Ko[bs]=Ms);var Ts=Ms[Ss];void 0===Ts&&(Ts=hs.clone(),Ms[Ss]=Ts),hs=Ts}hs.visible=us.visible,hs.wireframe=us.wireframe;var Ls=us.side;return cs.renderSingleSided&&Ls==or&&(Ls=ir),cs.renderReverseSided&&(Ls===ir?Ls=nr:Ls===nr&&(Ls=ir)),hs.side=Ls,hs.clipShadows=us.clipShadows,hs.clippingPlanes=us.clippingPlanes,hs.wireframeLinewidth=us.wireframeLinewidth,hs.linewidth=us.linewidth,ms&&void 0!==hs.uniforms.lightPos&&hs.uniforms.lightPos.value.copy(fs),hs}function zo(ps,us,ms){if(!1!==ps.visible){var fs=0!==(ps.layers.mask&us.layers.mask);if(fs&&(ps.isMesh||ps.isLine||ps.isPoints)&&ps.castShadow&&(!1===ps.frustumCulled||!0===Oo.intersectsObject(ps))){var gs=ps.material;!0===gs.visible&&(ps.modelViewMatrix.multiplyMatrices(ms.matrixWorldInverse,ps.matrixWorld),Yo.push(ps))}for(var hs=ps.children,xs=0,_s=hs.length;xs<_s;xs++)zo(hs[xs],us,ms)}}var Fo=Co.context,Bo=Co.state,Oo=new De,Go=new S,Vo=Do.shadows,Ho=new T,ko=new T(No.maxTextureSize,No.maxTextureSize),Wo=new E,Xo=new E,Yo=[],jo=1,qo=2,Qo=[,,,,],Jo=[,,,,],Ko={},$o=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],es=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)],ts=[new _e,new _e,new _e,new _e,new _e,new _e],rs=new Ae;rs.depthPacking=ci,rs.clipping=!0;for(var as=Mo.distanceRGBA,is=_i.clone(as.uniforms),ns=0;ns!==(jo|qo)+1;++ns){var os=0!==(ns&jo),ss=0!==(ns&qo),ls=rs.clone();ls.morphTargets=os,ls.skinning=ss,Qo[ns]=ls;var ds=new Le({defines:{USE_SHADOWMAP:''},uniforms:is,vertexShader:as.vertexShader,fragmentShader:as.fragmentShader,morphTargets:os,skinning:ss,clipping:!0});Jo[ns]=ds}var cs=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=rr,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(ps,us){if(!1!==cs.enabled&&(!1!==cs.autoUpdate||!1!==cs.needsUpdate)&&0!==Vo.length){Bo.buffers.color.setClear(1,1,1,1),Bo.disable(Fo.BLEND),Bo.setDepthTest(!0),Bo.setScissorTest(!1);for(var gs=0,hs=Vo.length,ms,fs;gs<hs;gs++){var xs=Vo[gs],_s=xs.shadow;if(void 0===_s){console.warn('THREE.WebGLShadowMap:',xs,'has no shadow.');continue}var vs=_s.camera;if(Ho.copy(_s.mapSize),Ho.min(ko),xs&&xs.isPointLight){ms=6,fs=!0;var ys=Ho.x,Es=Ho.y;ts[0].set(2*ys,Es,ys,Es),ts[1].set(0,Es,ys,Es),ts[2].set(3*ys,Es,ys,Es),ts[3].set(ys,Es,ys,Es),ts[4].set(3*ys,0,ys,Es),ts[5].set(ys,0,ys,Es),Ho.x*=4,Ho.y*=2}else ms=1,fs=!1;if(null===_s.map){_s.map=new Me(Ho.x,Ho.y,{minFilter:sa,magFilter:sa,format:Aa}),vs.updateProjectionMatrix()}_s.isSpotLightShadow&&_s.update(xs),_s&&_s.isRectAreaLightShadow&&_s.update(xs);var Ss=_s.map,Ms=_s.matrix;Xo.setFromMatrixPosition(xs.matrixWorld),vs.position.copy(Xo),Co.setRenderTarget(Ss),Co.clear();for(var Ts=0;Ts<ms;Ts++){if(fs){Wo.copy(vs.position),Wo.add($o[Ts]),vs.up.copy(es[Ts]),vs.lookAt(Wo);var Ls=ts[Ts];Bo.viewport(Ls)}else Wo.setFromMatrixPosition(xs.target.matrixWorld),vs.lookAt(Wo);vs.updateMatrixWorld(),vs.matrixWorldInverse.getInverse(vs.matrixWorld),Ms.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1),Ms.multiply(vs.projectionMatrix),Ms.multiply(vs.matrixWorldInverse),Go.multiplyMatrices(vs.projectionMatrix,vs.matrixWorldInverse),Oo.setFromMatrix(Go),Yo.length=0,zo(ps,us,vs);for(var As=0,Rs=Yo.length;As<Rs;As++){var Ps=Yo[As],ws=Uo.update(Ps),Cs=Ps.material;if(Cs&&Cs.isMultiMaterial)for(var Ds=ws.groups,Us=Cs.materials,Ns=0,Is=Ds.length;Ns<Is;Ns++){var zs=Ds[Ns],Fs=Us[zs.materialIndex];if(!0===Fs.visible){var Bs=Io(Ps,Fs,fs,Xo);Co.renderBufferDirect(vs,null,ws,Bs,Ps,zs)}}else{var Bs=Io(Ps,Cs,fs,Xo);Co.renderBufferDirect(vs,null,ws,Bs,Ps,null)}}}}var Os=Co.getClearColor(),Gs=Co.getClearAlpha();Co.setClearColor(Os,Gs),cs.needsUpdate=!1}}}function Ne(Co,Do){this.origin=Co===void 0?new E:Co,this.direction=Do===void 0?new E:Do}function Ie(Co,Do,Uo,No){this._x=Co||0,this._y=Do||0,this._z=Uo||0,this._order=No||Ie.DefaultOrder}function ze(){this.mask=1}function Fe(){Object.defineProperty(this,'id',{value:Lo++}),this.uuid=pi.generateUUID(),this.name='',this.type='Object3D',this.parent=null,this.children=[],this.up=Fe.DefaultUp.clone();var Uo=new E,No=new Ie,Io=new _,zo=new E(1,1,1);No.onChange(function(){Io.setFromEuler(No,!1)}),Io.onChange(function(){No.setFromQuaternion(Io,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:Uo},rotation:{enumerable:!0,value:No},quaternion:{enumerable:!0,value:Io},scale:{enumerable:!0,value:zo},modelViewMatrix:{value:new S},normalMatrix:{value:new we}}),this.matrix=new S,this.matrixWorld=new S,this.matrixAutoUpdate=Fe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ze,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={},this.onBeforeRender=function(){},this.onAfterRender=function(){}}function Be(Co,Do){this.start=Co===void 0?new E:Co,this.end=Do===void 0?new E:Do}function Oe(Co,Do,Uo){this.a=Co===void 0?new E:Co,this.b=Do===void 0?new E:Do,this.c=Uo===void 0?new E:Uo}function Ge(Co,Do,Uo,No,Io,zo){this.a=Co,this.b=Do,this.c=Uo,this.normal=No&&No.isVector3?No:new E,this.vertexNormals=Array.isArray(No)?No:[],this.color=Io&&Io.isColor?Io:new ve,this.vertexColors=Array.isArray(Io)?Io:[],this.materialIndex=zo===void 0?0:zo}function Ve(Co){Te.call(this),this.type='MeshBasicMaterial',this.color=new ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Hr,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(Co)}function He(Co,Do,Uo){if(Array.isArray(Co))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.uuid=pi.generateUUID(),this.array=Co,this.itemSize=Do,this.count=Co===void 0?0:Co.length/Do,this.normalized=!0===Uo,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ke(Co,Do){He.call(this,new Uint16Array(Co),Do)}function We(Co,Do){He.call(this,new Uint32Array(Co),Do)}function Xe(Co,Do){He.call(this,new Float32Array(Co),Do)}function Ye(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function je(Co){for(var Do=Co.length,Uo=-Infinity;Do--;)Co[Do]>Uo&&(Uo=Co[Do]);return Uo}function qe(){return Ao++}function Ze(){Object.defineProperty(this,'id',{value:qe()}),this.uuid=pi.generateUUID(),this.name='',this.type='Geometry',this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Qe(){Object.defineProperty(this,'id',{value:qe()}),this.uuid=pi.generateUUID(),this.name='',this.type='BufferGeometry',this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity}}function Je(Co,Do){Fe.call(this),this.type='Mesh',this.geometry=Co===void 0?new Qe:Co,this.material=Do===void 0?new Ve({color:16777215*Math.random()}):Do,this.drawMode=Ka,this.updateMorphTargets()}function Ke(Co,Do,Uo,No,Io,zo){function Fo(Xo,Yo,jo,qo,Zo,Qo,Jo,Ko,$o,es,ts){var ss=$o+1,ds=0,cs=0,ps,us,ms=new E;for(us=0;us<es+1;us++){var fs=us*(Jo/es)-Jo/2;for(ps=0;ps<ss;ps++){var gs=ps*(Qo/$o)-Qo/2;ms[Xo]=gs*qo,ms[Yo]=fs*Zo,ms[jo]=Ko/2,Go.push(ms.x,ms.y,ms.z),ms[Xo]=0,ms[Yo]=0,ms[jo]=0<Ko?1:-1,Vo.push(ms.x,ms.y,ms.z),Ho.push(ps/$o),Ho.push(1-us/es),ds+=1}}for(us=0;us<es;us++)for(ps=0;ps<$o;ps++){var hs=ko+ps+ss*us,xs=ko+ps+ss*(us+1),_s=ko+(ps+1)+ss*(us+1),vs=ko+(ps+1)+ss*us;Oo.push(hs,xs,vs),Oo.push(xs,_s,vs),cs+=6}Bo.addGroup(Wo,cs,ts),Wo+=cs,ko+=ds}Qe.call(this),this.type='BoxBufferGeometry',this.parameters={width:Co,height:Do,depth:Uo,widthSegments:No,heightSegments:Io,depthSegments:zo};var Bo=this;No=Math.floor(No)||1,Io=Math.floor(Io)||1,zo=Math.floor(zo)||1;var Oo=[],Go=[],Vo=[],Ho=[],ko=0,Wo=0;Fo('z','y','x',-1,-1,Uo,Do,Co,zo,Io,0),Fo('z','y','x',1,-1,Uo,Do,-Co,zo,Io,1),Fo('x','z','y',1,1,Co,Uo,Do,No,zo,2),Fo('x','z','y',1,-1,Co,Uo,-Do,No,zo,3),Fo('x','y','z',1,-1,Co,Do,Uo,No,Io,4),Fo('x','y','z',-1,-1,Co,Do,-Uo,No,Io,5),this.setIndex(Oo),this.addAttribute('position',new Xe(Go,3)),this.addAttribute('normal',new Xe(Vo,3)),this.addAttribute('uv',new Xe(Ho,2))}function $e(Co,Do,Uo,No){Qe.call(this),this.type='PlaneBufferGeometry',this.parameters={width:Co,height:Do,widthSegments:Uo,heightSegments:No};var Fo=Math.floor(Uo)||1,Bo=Math.floor(No)||1,Oo=Fo+1,ko,Wo,Xo=[],Yo=[],jo=[],qo=[];for(Wo=0;Wo<Bo+1;Wo++){var Zo=Wo*(Do/Bo)-Do/2;for(ko=0;ko<Oo;ko++){var Qo=ko*(Co/Fo)-Co/2;Yo.push(Qo,-Zo,0),jo.push(0,0,1),qo.push(ko/Fo),qo.push(1-Wo/Bo)}}for(Wo=0;Wo<Bo;Wo++)for(ko=0;ko<Fo;ko++){var Jo=ko+Oo*Wo,Ko=ko+Oo*(Wo+1),$o=ko+1+Oo*(Wo+1),es=ko+1+Oo*Wo;Xo.push(Jo,Ko,es),Xo.push(Ko,$o,es)}this.setIndex(Xo),this.addAttribute('position',new Xe(Yo,3)),this.addAttribute('normal',new Xe(jo,3)),this.addAttribute('uv',new Xe(qo,2))}function et(){Fe.call(this),this.type='Camera',this.matrixWorldInverse=new S,this.projectionMatrix=new S}function tt(Co,Do,Uo,No){et.call(this),this.type='PerspectiveCamera',this.fov=Co===void 0?50:Co,this.zoom=1,this.near=Uo===void 0?0.1:Uo,this.far=No===void 0?2e3:No,this.focus=10,this.aspect=Do===void 0?1:Do,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function rt(Co,Do,Uo,No,Io,zo){et.call(this),this.type='OrthographicCamera',this.zoom=1,this.view=null,this.left=Co,this.right=Do,this.top=Uo,this.bottom=No,this.near=Io===void 0?0.1:Io,this.far=zo===void 0?2e3:zo,this.updateProjectionMatrix()}function it(Co,Do,Uo){var Bo,Oo,Go;return{setMode:function(Vo){Bo=Vo},setIndex:function(Vo){Vo.array instanceof Uint32Array&&Do.get('OES_element_index_uint')?(Oo=Co.UNSIGNED_INT,Go=4):Vo.array instanceof Uint16Array?(Oo=Co.UNSIGNED_SHORT,Go=2):(Oo=Co.UNSIGNED_BYTE,Go=1)},render:function(Vo,Ho){Co.drawElements(Bo,Ho,Oo,Vo*Go),Uo.calls++,Uo.vertices+=Ho,Bo===Co.TRIANGLES&&(Uo.faces+=Ho/3)},renderInstances:function(Vo,Ho,ko){var Wo=Do.get('ANGLE_instanced_arrays');return null===Wo?void console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'):void(Wo.drawElementsInstancedANGLE(Bo,ko,Oo,Ho*Go,Vo.maxInstancedCount),Uo.calls++,Uo.vertices+=ko*Vo.maxInstancedCount,Bo===Co.TRIANGLES&&(Uo.faces+=Vo.maxInstancedCount*ko/3))}}}function nt(Co,Do,Uo){var Fo;return{setMode:function(Bo){Fo=Bo},render:function(Bo,Oo){Co.drawArrays(Fo,Bo,Oo),Uo.calls++,Uo.vertices+=Oo,Fo===Co.TRIANGLES&&(Uo.faces+=Oo/3)},renderInstances:function(Bo){var Oo=Do.get('ANGLE_instanced_arrays');if(null===Oo)return void console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');var Go=Bo.attributes.position,Vo=0;Go.isInterleavedBufferAttribute?(Vo=Go.data.count,Oo.drawArraysInstancedANGLE(Fo,0,Vo,Bo.maxInstancedCount)):(Vo=Go.count,Oo.drawArraysInstancedANGLE(Fo,0,Vo,Bo.maxInstancedCount)),Uo.calls++,Uo.vertices+=Vo*Bo.maxInstancedCount,Fo===Co.TRIANGLES&&(Uo.faces+=Bo.maxInstancedCount*Vo/3)}}}function ot(){var Co={};return{get:function(Uo){if(void 0!==Co[Uo.id])return Co[Uo.id];var No;switch(Uo.type){case'DirectionalLight':No={direction:new E,color:new ve,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new T};break;case'SpotLight':No={position:new E,direction:new E,color:new ve,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new T};break;case'PointLight':No={position:new E,color:new ve,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new T};break;case'HemisphereLight':No={direction:new E,skyColor:new ve,groundColor:new ve};break;case'RectAreaLight':No={color:new ve,position:new E,halfWidth:new E,halfHeight:new E};}return Co[Uo.id]=No,No}}}function st(Co){for(var Do=Co.split('\n'),Uo=0;Uo<Do.length;Uo++)Do[Uo]=Uo+1+': '+Do[Uo];return Do.join('\n')}function lt(Co,Do,Uo){var No=Co.createShader(Do);return Co.shaderSource(No,Uo),Co.compileShader(No),!1===Co.getShaderParameter(No,Co.COMPILE_STATUS)&&console.error('THREE.WebGLShader: Shader couldn\'t compile.'),''!==Co.getShaderInfoLog(No)&&console.warn('THREE.WebGLShader: gl.getShaderInfoLog()',Do===Co.VERTEX_SHADER?'vertex':'fragment',Co.getShaderInfoLog(No),st(Uo)),No}function dt(Co){switch(Co){case ti:return['Linear','( value )'];case ri:return['sRGB','( value )'];case ii:return['RGBE','( value )'];case oi:return['RGBM','( value, 7.0 )'];case si:return['RGBM','( value, 16.0 )'];case li:return['RGBD','( value, 256.0 )'];case ai:return['Gamma','( value, float( GAMMA_FACTOR ) )'];default:throw new Error('unsupported encoding: '+Co);}}function ct(Co,Do){var Uo=dt(Do);return'vec4 '+Co+'( vec4 value ) { return '+Uo[0]+'ToLinear'+Uo[1]+'; }'}function pt(Co,Do){var Uo=dt(Do);return'vec4 '+Co+'( vec4 value ) { return LinearTo'+Uo[0]+Uo[1]+'; }'}function ut(Co,Do){var Uo;switch(Do){case Yr:Uo='Linear';break;case jr:Uo='Reinhard';break;case qr:Uo='Uncharted2';break;case Zr:Uo='OptimizedCineon';break;default:throw new Error('unsupported toneMapping: '+Do);}return'vec3 '+Co+'( vec3 color ) { return '+Uo+'ToneMapping( color ); }'}function mt(Co,Do,Uo){Co=Co||{};var No=[Co.derivatives||Do.envMapCubeUV||Do.bumpMap||Do.normalMap||Do.flatShading?'#extension GL_OES_standard_derivatives : enable':'',(Co.fragDepth||Do.logarithmicDepthBuffer)&&Uo.get('EXT_frag_depth')?'#extension GL_EXT_frag_depth : enable':'',Co.drawBuffers&&Uo.get('WEBGL_draw_buffers')?'#extension GL_EXT_draw_buffers : require':'',(Co.shaderTextureLOD||Do.envMap)&&Uo.get('EXT_shader_texture_lod')?'#extension GL_EXT_shader_texture_lod : enable':''];return No.filter(ht).join('\n')}function ft(Co){var Do=[];for(var Uo in Co){var No=Co[Uo];!1===No||Do.push('#define '+Uo+' '+No)}return Do.join('\n')}function gt(Co,Do){for(var No={},Io=Co.getProgramParameter(Do,Co.ACTIVE_ATTRIBUTES),zo=0;zo<Io;zo++){var Fo=Co.getActiveAttrib(Do,zo),Bo=Fo.name;No[Bo]=Co.getAttribLocation(Do,Bo)}return No}function ht(Co){return''!==Co}function xt(Co,Do){return Co.replace(/NUM_DIR_LIGHTS/g,Do.numDirLights).replace(/NUM_SPOT_LIGHTS/g,Do.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,Do.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,Do.numPointLights).replace(/NUM_HEMI_LIGHTS/g,Do.numHemiLights)}function _t(Co){var Uo=/#include +<([\w\d.]+)>/g;return Co.replace(Uo,function(No,Io){var zo=Eo[Io];if(zo===void 0)throw new Error('Can not resolve #include <'+Io+'>');return _t(zo)})}function vt(Co){var Uo=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return Co.replace(Uo,function(No,Io,zo,Fo){for(var Bo='',Oo=parseInt(Io);Oo<parseInt(zo);Oo++)Bo+=Fo.replace(/\[ i \]/g,'[ '+Oo+' ]');return Bo})}function yt(Co,Do,Uo,No){var Io=Co.context,zo=Uo.extensions,Fo=Uo.defines,Bo=Uo.__webglShader.vertexShader,Oo=Uo.__webglShader.fragmentShader,Go='SHADOWMAP_TYPE_BASIC';No.shadowMapType===rr?Go='SHADOWMAP_TYPE_PCF':No.shadowMapType===ar&&(Go='SHADOWMAP_TYPE_PCF_SOFT');var Vo='ENVMAP_TYPE_CUBE',Ho='ENVMAP_MODE_REFLECTION',ko='ENVMAP_BLENDING_MULTIPLY';if(No.envMap){switch(Uo.envMap.mapping){case Jr:case Kr:Vo='ENVMAP_TYPE_CUBE';break;case ra:case aa:Vo='ENVMAP_TYPE_CUBE_UV';break;case $r:case ea:Vo='ENVMAP_TYPE_EQUIREC';break;case ta:Vo='ENVMAP_TYPE_SPHERE';}switch(Uo.envMap.mapping){case Kr:case ea:Ho='ENVMAP_MODE_REFRACTION';}switch(Uo.combine){case Hr:ko='ENVMAP_BLENDING_MULTIPLY';break;case kr:ko='ENVMAP_BLENDING_MIX';break;case Wr:ko='ENVMAP_BLENDING_ADD';}}var Wo=0<Co.gammaFactor?Co.gammaFactor:1,Xo=mt(zo,No,Co.extensions),Yo=ft(Fo),jo=Io.createProgram(),qo,Zo;Uo.isRawShaderMaterial?(qo=[Yo,'\n'].filter(ht).join('\n'),Zo=[Xo,Yo,'\n'].filter(ht).join('\n')):(qo=['precision '+No.precision+' float;','precision '+No.precision+' int;','#define SHADER_NAME '+Uo.__webglShader.name,Yo,No.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+Wo,'#define MAX_BONES '+No.maxBones,No.useFog&&No.fog?'#define USE_FOG':'',No.useFog&&No.fogExp?'#define FOG_EXP2':'',No.map?'#define USE_MAP':'',No.envMap?'#define USE_ENVMAP':'',No.envMap?'#define '+Ho:'',No.lightMap?'#define USE_LIGHTMAP':'',No.aoMap?'#define USE_AOMAP':'',No.emissiveMap?'#define USE_EMISSIVEMAP':'',No.bumpMap?'#define USE_BUMPMAP':'',No.normalMap?'#define USE_NORMALMAP':'',No.displacementMap&&No.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',No.specularMap?'#define USE_SPECULARMAP':'',No.roughnessMap?'#define USE_ROUGHNESSMAP':'',No.metalnessMap?'#define USE_METALNESSMAP':'',No.alphaMap?'#define USE_ALPHAMAP':'',No.vertexColors?'#define USE_COLOR':'',No.flatShading?'#define FLAT_SHADED':'',No.skinning?'#define USE_SKINNING':'',No.useVertexTexture?'#define BONE_TEXTURE':'',No.morphTargets?'#define USE_MORPHTARGETS':'',No.morphNormals&&!1===No.flatShading?'#define USE_MORPHNORMALS':'',No.doubleSided?'#define DOUBLE_SIDED':'',No.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+No.numClippingPlanes,No.shadowMapEnabled?'#define USE_SHADOWMAP':'',No.shadowMapEnabled?'#define '+Go:'',No.sizeAttenuation?'#define USE_SIZEATTENUATION':'',No.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',No.logarithmicDepthBuffer&&Co.extensions.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\n'].filter(ht).join('\n'),Zo=[Xo,'precision '+No.precision+' float;','precision '+No.precision+' int;','#define SHADER_NAME '+Uo.__webglShader.name,Yo,No.alphaTest?'#define ALPHATEST '+No.alphaTest:'','#define GAMMA_FACTOR '+Wo,No.useFog&&No.fog?'#define USE_FOG':'',No.useFog&&No.fogExp?'#define FOG_EXP2':'',No.map?'#define USE_MAP':'',No.envMap?'#define USE_ENVMAP':'',No.envMap?'#define '+Vo:'',No.envMap?'#define '+Ho:'',No.envMap?'#define '+ko:'',No.lightMap?'#define USE_LIGHTMAP':'',No.aoMap?'#define USE_AOMAP':'',No.emissiveMap?'#define USE_EMISSIVEMAP':'',No.bumpMap?'#define USE_BUMPMAP':'',No.normalMap?'#define USE_NORMALMAP':'',No.specularMap?'#define USE_SPECULARMAP':'',No.roughnessMap?'#define USE_ROUGHNESSMAP':'',No.metalnessMap?'#define USE_METALNESSMAP':'',No.alphaMap?'#define USE_ALPHAMAP':'',No.vertexColors?'#define USE_COLOR':'',No.gradientMap?'#define USE_GRADIENTMAP':'',No.flatShading?'#define FLAT_SHADED':'',No.doubleSided?'#define DOUBLE_SIDED':'',No.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+No.numClippingPlanes,'#define UNION_CLIPPING_PLANES '+(No.numClippingPlanes-No.numClipIntersection),No.shadowMapEnabled?'#define USE_SHADOWMAP':'',No.shadowMapEnabled?'#define '+Go:'',No.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',No.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',No.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',No.logarithmicDepthBuffer&&Co.extensions.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'',No.envMap&&Co.extensions.get('EXT_shader_texture_lod')?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;',No.toneMapping===Xr?'':'#define TONE_MAPPING',No.toneMapping===Xr?'':Eo.tonemapping_pars_fragment,No.toneMapping===Xr?'':ut('toneMapping',No.toneMapping),No.outputEncoding||No.mapEncoding||No.envMapEncoding||No.emissiveMapEncoding?Eo.encodings_pars_fragment:'',No.mapEncoding?ct('mapTexelToLinear',No.mapEncoding):'',No.envMapEncoding?ct('envMapTexelToLinear',No.envMapEncoding):'',No.emissiveMapEncoding?ct('emissiveMapTexelToLinear',No.emissiveMapEncoding):'',No.outputEncoding?pt('linearToOutputTexel',No.outputEncoding):'',No.depthPacking?'#define DEPTH_PACKING '+Uo.depthPacking:'','\n'].filter(ht).join('\n')),Bo=_t(Bo,No),Bo=xt(Bo,No),Oo=_t(Oo,No),Oo=xt(Oo,No),Uo.isShaderMaterial||(Bo=vt(Bo),Oo=vt(Oo));var Qo=qo+Bo,Jo=Zo+Oo,Ko=lt(Io,Io.VERTEX_SHADER,Qo),$o=lt(Io,Io.FRAGMENT_SHADER,Jo);Io.attachShader(jo,Ko),Io.attachShader(jo,$o),void 0===Uo.index0AttributeName?!0===No.morphTargets&&Io.bindAttribLocation(jo,0,'position'):Io.bindAttribLocation(jo,0,Uo.index0AttributeName),Io.linkProgram(jo);var es=Io.getProgramInfoLog(jo),ts=Io.getShaderInfoLog(Ko),rs=Io.getShaderInfoLog($o),as=!0,is=!0;!1===Io.getProgramParameter(jo,Io.LINK_STATUS)?(as=!1,console.error('THREE.WebGLProgram: shader error: ',Io.getError(),'gl.VALIDATE_STATUS',Io.getProgramParameter(jo,Io.VALIDATE_STATUS),'gl.getProgramInfoLog',es,ts,rs)):''===es?(''===ts||''===rs)&&(is=!1):console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',es),is&&(this.diagnostics={runnable:as,material:Uo,programLog:es,vertexShader:{log:ts,prefix:qo},fragmentShader:{log:rs,prefix:Zo}}),Io.deleteShader(Ko),Io.deleteShader($o);var ns;this.getUniforms=function(){return void 0===ns&&(ns=new xe(Io,jo,Co)),ns};var os;return this.getAttributes=function(){return void 0===os&&(os=gt(Io,jo)),os},this.destroy=function(){Io.deleteProgram(jo),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().'),this.getUniforms()}},attributes:{get:function(){return console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().'),this.getAttributes()}}}),this.id=Ro++,this.code=Do,this.usedTimes=1,this.program=jo,this.vertexShader=Ko,this.fragmentShader=$o,this}function Et(Co,Do){function Uo(Bo){if(Do.floatVertexTextures&&Bo&&Bo.skeleton&&Bo.skeleton.useVertexTexture)return 1024;var Oo=Do.maxVertexUniforms,Go=Math.floor((Oo-20)/4),Vo=Go;return void 0!==Bo&&Bo&&Bo.isSkinnedMesh&&(Vo=Math.min(Bo.skeleton.bones.length,Vo),Vo<Bo.skeleton.bones.length&&console.warn('WebGLRenderer: too many bones - '+Bo.skeleton.bones.length+', this GPU supports just '+Vo+' (try OpenGL instead of ANGLE)')),Vo}function No(Bo,Oo){var Go;return Bo?Bo.isTexture?Go=Bo.encoding:Bo.isWebGLRenderTarget&&(console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead.'),Go=Bo.texture.encoding):Go=ti,Go===ti&&Oo&&(Go=ai),Go}var Io=[],zo={MeshDepthMaterial:'depth',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'phong',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points'},Fo=['precision','supportsVertexTextures','map','mapEncoding','envMap','envMapMode','envMapEncoding','lightMap','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','fog','useFog','fogExp','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','maxMorphTargets','maxMorphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking'];this.getParameters=function(Bo,Oo,Go,Vo,Ho,ko){var Wo=zo[Bo.type],Xo=Uo(ko),Yo=Co.getPrecision();null!==Bo.precision&&(Yo=Do.getMaxPrecision(Bo.precision),Yo!==Bo.precision&&console.warn('THREE.WebGLProgram.getParameters:',Bo.precision,'not supported, using',Yo,'instead.'));var jo=Co.getCurrentRenderTarget(),qo={shaderID:Wo,precision:Yo,supportsVertexTextures:Do.vertexTextures,outputEncoding:No(jo?jo.texture:null,Co.gammaOutput),map:!!Bo.map,mapEncoding:No(Bo.map,Co.gammaInput),envMap:!!Bo.envMap,envMapMode:Bo.envMap&&Bo.envMap.mapping,envMapEncoding:No(Bo.envMap,Co.gammaInput),envMapCubeUV:!!Bo.envMap&&(Bo.envMap.mapping===ra||Bo.envMap.mapping===aa),lightMap:!!Bo.lightMap,aoMap:!!Bo.aoMap,emissiveMap:!!Bo.emissiveMap,emissiveMapEncoding:No(Bo.emissiveMap,Co.gammaInput),bumpMap:!!Bo.bumpMap,normalMap:!!Bo.normalMap,displacementMap:!!Bo.displacementMap,roughnessMap:!!Bo.roughnessMap,metalnessMap:!!Bo.metalnessMap,specularMap:!!Bo.specularMap,alphaMap:!!Bo.alphaMap,gradientMap:!!Bo.gradientMap,combine:Bo.combine,vertexColors:Bo.vertexColors,fog:!!Go,useFog:Bo.fog,fogExp:Go&&Go.isFogExp2,flatShading:Bo.shading===sr,sizeAttenuation:Bo.sizeAttenuation,logarithmicDepthBuffer:Do.logarithmicDepthBuffer,skinning:Bo.skinning,maxBones:Xo,useVertexTexture:Do.floatVertexTextures&&ko&&ko.skeleton&&ko.skeleton.useVertexTexture,morphTargets:Bo.morphTargets,morphNormals:Bo.morphNormals,maxMorphTargets:Co.maxMorphTargets,maxMorphNormals:Co.maxMorphNormals,numDirLights:Oo.directional.length,numPointLights:Oo.point.length,numSpotLights:Oo.spot.length,numRectAreaLights:Oo.rectArea.length,numHemiLights:Oo.hemi.length,numClippingPlanes:Vo,numClipIntersection:Ho,shadowMapEnabled:Co.shadowMap.enabled&&ko.receiveShadow&&0<Oo.shadows.length,shadowMapType:Co.shadowMap.type,toneMapping:Co.toneMapping,physicallyCorrectLights:Co.physicallyCorrectLights,premultipliedAlpha:Bo.premultipliedAlpha,alphaTest:Bo.alphaTest,doubleSided:Bo.side===or,flipSided:Bo.side===nr,depthPacking:Bo.depthPacking!==void 0&&Bo.depthPacking};return qo},this.getProgramCode=function(Bo,Oo){var Go=[];if(Oo.shaderID?Go.push(Oo.shaderID):(Go.push(Bo.fragmentShader),Go.push(Bo.vertexShader)),void 0!==Bo.defines)for(var Vo in Bo.defines)Go.push(Vo),Go.push(Bo.defines[Vo]);for(var Ho=0;Ho<Fo.length;Ho++)Go.push(Oo[Fo[Ho]]);return Go.join()},this.acquireProgram=function(Bo,Oo,Go){for(var Ho=0,ko=Io.length,Vo,Wo;Ho<ko;Ho++)if(Wo=Io[Ho],Wo.code===Go){Vo=Wo,++Vo.usedTimes;break}return void 0===Vo&&(Vo=new yt(Co,Go,Bo,Oo),Io.push(Vo)),Vo},this.releaseProgram=function(Bo){if(0===--Bo.usedTimes){var Oo=Io.indexOf(Bo);Io[Oo]=Io[Io.length-1],Io.pop(),Bo.destroy()}},this.programs=Io}function bt(Co,Do,Uo){function No(Go){var Vo=Go.target,Ho=Oo[Vo.id];null!==Ho.index&&zo(Ho.index),Fo(Ho.attributes),Vo.removeEventListener('dispose',No),delete Oo[Vo.id];var ko=Do.get(Vo);ko.wireframe&&zo(ko.wireframe),Do.delete(Vo);var Wo=Do.get(Ho);Wo.wireframe&&zo(Wo.wireframe),Do.delete(Ho),Uo.memory.geometries--}function Io(Go){return Go.isInterleavedBufferAttribute?Do.get(Go.data).__webglBuffer:Do.get(Go).__webglBuffer}function zo(Go){var Vo=Io(Go);Vo!==void 0&&(Co.deleteBuffer(Vo),Bo(Go))}function Fo(Go){for(var Vo in Go)zo(Go[Vo])}function Bo(Go){Go.isInterleavedBufferAttribute?Do.delete(Go.data):Do.delete(Go)}var Oo={};return{get:function(Vo){var Ho=Vo.geometry;if(void 0!==Oo[Ho.id])return Oo[Ho.id];Ho.addEventListener('dispose',No);var ko;return Ho.isBufferGeometry?ko=Ho:Ho.isGeometry&&(void 0===Ho._bufferGeometry&&(Ho._bufferGeometry=new Qe().setFromObject(Vo)),ko=Ho._bufferGeometry),Oo[Ho.id]=ko,Uo.memory.geometries++,ko}}}function St(Co,Do,Uo){function Io(Ho,ko){var Wo=Ho.isInterleavedBufferAttribute?Ho.data:Ho,Xo=Do.get(Wo);Xo.__webglBuffer===void 0?zo(Xo,Wo,ko):Xo.version!==Wo.version&&Fo(Xo,Wo,ko)}function zo(Ho,ko,Wo){Ho.__webglBuffer=Co.createBuffer(),Co.bindBuffer(Wo,Ho.__webglBuffer);var Xo=ko.dynamic?Co.DYNAMIC_DRAW:Co.STATIC_DRAW;Co.bufferData(Wo,ko.array,Xo);var Yo=Co.FLOAT,jo=ko.array;jo instanceof Float32Array?Yo=Co.FLOAT:jo instanceof Float64Array?console.warn('Unsupported data buffer format: Float64Array'):jo instanceof Uint16Array?Yo=Co.UNSIGNED_SHORT:jo instanceof Int16Array?Yo=Co.SHORT:jo instanceof Uint32Array?Yo=Co.UNSIGNED_INT:jo instanceof Int32Array?Yo=Co.INT:jo instanceof Int8Array?Yo=Co.BYTE:jo instanceof Uint8Array&&(Yo=Co.UNSIGNED_BYTE),Ho.bytesPerElement=jo.BYTES_PER_ELEMENT,Ho.type=Yo,Ho.version=ko.version,ko.onUploadCallback()}function Fo(Ho,ko,Wo){Co.bindBuffer(Wo,Ho.__webglBuffer),!1===ko.dynamic?Co.bufferData(Wo,ko.array,Co.STATIC_DRAW):-1===ko.updateRange.count?Co.bufferSubData(Wo,0,ko.array):0===ko.updateRange.count?console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.'):(Co.bufferSubData(Wo,ko.updateRange.offset*ko.array.BYTES_PER_ELEMENT,ko.array.subarray(ko.updateRange.offset,ko.updateRange.offset+ko.updateRange.count)),ko.updateRange.count=0),Ho.version=ko.version}var Vo=new bt(Co,Do,Uo);return{getAttributeBuffer:function(Ho){return Ho.isInterleavedBufferAttribute?Do.get(Ho.data).__webglBuffer:Do.get(Ho).__webglBuffer},getAttributeProperties:function(Ho){return Ho.isInterleavedBufferAttribute?Do.get(Ho.data):Do.get(Ho)},getWireframeAttribute:function(Ho){var ko=Do.get(Ho);if(void 0!==ko.wireframe)return ko.wireframe;var Wo=[],Xo=Ho.index,Yo=Ho.attributes;if(null!==Xo)for(var jo=Xo.array,qo=0,Zo=jo.length;qo<Zo;qo+=3){var Qo=jo[qo+0],Jo=jo[qo+1],Ko=jo[qo+2];Wo.push(Qo,Jo,Jo,Ko,Ko,Qo)}else for(var jo=Yo.position.array,qo=0,Zo=jo.length/3-1;qo<Zo;qo+=3){var Qo=qo+0,Jo=qo+1,Ko=qo+2;Wo.push(Qo,Jo,Jo,Ko,Ko,Qo)}var $o=new(65535<je(Wo)?We:ke)(Wo,1);return Io($o,Co.ELEMENT_ARRAY_BUFFER),ko.wireframe=$o,$o},update:function(Ho){var ko=Vo.get(Ho);Ho.geometry.isGeometry&&ko.updateFromObject(Ho);var Wo=ko.index,Xo=ko.attributes;for(var Yo in null!==Wo&&Io(Wo,Co.ELEMENT_ARRAY_BUFFER),Xo)Io(Xo[Yo],Co.ARRAY_BUFFER);var jo=ko.morphAttributes;for(var Yo in jo)for(var qo=jo[Yo],Zo=0,Qo=qo.length;Zo<Qo;Zo++)Io(qo[Zo],Co.ARRAY_BUFFER);return ko}}}function Mt(Co,Do,Uo,No,Io,zo,Fo){function Bo(os,ss){if(os.width>ss||os.height>ss){var ls=ss/Math.max(os.width,os.height),ds=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');ds.width=Math.floor(os.width*ls),ds.height=Math.floor(os.height*ls);var cs=ds.getContext('2d');return cs.drawImage(os,0,0,os.width,os.height,0,0,ds.width,ds.height),console.warn('THREE.WebGLRenderer: image is too big ('+os.width+'x'+os.height+'). Resized to '+ds.width+'x'+ds.height,os),ds}return os}function Oo(os){return pi.isPowerOfTwo(os.width)&&pi.isPowerOfTwo(os.height)}function Go(os){if(os instanceof HTMLImageElement||os instanceof HTMLCanvasElement){var ss=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');ss.width=pi.nearestPowerOfTwo(os.width),ss.height=pi.nearestPowerOfTwo(os.height);var ls=ss.getContext('2d');return ls.drawImage(os,0,0,ss.width,ss.height),console.warn('THREE.WebGLRenderer: image is not power of two ('+os.width+'x'+os.height+'). Resized to '+ss.width+'x'+ss.height,os),ss}return os}function Vo(os){return os.wrapS!==na||os.wrapT!==na||os.minFilter!==sa&&os.minFilter!==ca}function Ho(os){return os===sa||os===la||os===da?Co.NEAREST:Co.LINEAR}function ko(os){var ss=os.target;ss.removeEventListener('dispose',ko),Xo(ss),is.textures--}function Wo(os){var ss=os.target;ss.removeEventListener('dispose',Wo),Yo(ss),is.textures--}function Xo(os){var ss=No.get(os);if(os.image&&ss.__image__webglTextureCube)Co.deleteTexture(ss.__image__webglTextureCube);else{if(ss.__webglInit===void 0)return;Co.deleteTexture(ss.__webglTexture)}No.delete(os)}function Yo(os){var ss=No.get(os),ls=No.get(os.texture);if(os){if(void 0!==ls.__webglTexture&&Co.deleteTexture(ls.__webglTexture),os.depthTexture&&os.depthTexture.dispose(),os.isWebGLRenderTargetCube)for(var ds=0;6>ds;ds++)Co.deleteFramebuffer(ss.__webglFramebuffer[ds]),ss.__webglDepthbuffer&&Co.deleteRenderbuffer(ss.__webglDepthbuffer[ds]);else Co.deleteFramebuffer(ss.__webglFramebuffer),ss.__webglDepthbuffer&&Co.deleteRenderbuffer(ss.__webglDepthbuffer);No.delete(os.texture),No.delete(os)}}function jo(os,ss){var ls=No.get(os);if(0<os.version&&ls.__version!==os.version){var ds=os.image;if(ds===void 0)console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined',os);else if(!1===ds.complete)console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete',os);else return void Jo(ls,os,ss)}Uo.activeTexture(Co.TEXTURE0+ss),Uo.bindTexture(Co.TEXTURE_2D,ls.__webglTexture)}function Qo(os,ss,ls){var ds;if(ls?(Co.texParameteri(os,Co.TEXTURE_WRAP_S,zo(ss.wrapS)),Co.texParameteri(os,Co.TEXTURE_WRAP_T,zo(ss.wrapT)),Co.texParameteri(os,Co.TEXTURE_MAG_FILTER,zo(ss.magFilter)),Co.texParameteri(os,Co.TEXTURE_MIN_FILTER,zo(ss.minFilter))):(Co.texParameteri(os,Co.TEXTURE_WRAP_S,Co.CLAMP_TO_EDGE),Co.texParameteri(os,Co.TEXTURE_WRAP_T,Co.CLAMP_TO_EDGE),(ss.wrapS!==na||ss.wrapT!==na)&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.',ss),Co.texParameteri(os,Co.TEXTURE_MAG_FILTER,Ho(ss.magFilter)),Co.texParameteri(os,Co.TEXTURE_MIN_FILTER,Ho(ss.minFilter)),ss.minFilter!==sa&&ss.minFilter!==ca&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.',ss)),ds=Do.get('EXT_texture_filter_anisotropic'),ds){if(ss.type===va&&null===Do.get('OES_texture_float_linear'))return;if(ss.type===ya&&null===Do.get('OES_texture_half_float_linear'))return;(1<ss.anisotropy||No.get(ss).__currentAnisotropy)&&(Co.texParameterf(os,ds.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(ss.anisotropy,Io.getMaxAnisotropy())),No.get(ss).__currentAnisotropy=ss.anisotropy)}}function Jo(os,ss,ls){os.__webglInit===void 0&&(os.__webglInit=!0,ss.addEventListener('dispose',ko),os.__webglTexture=Co.createTexture(),is.textures++),Uo.activeTexture(Co.TEXTURE0+ls),Uo.bindTexture(Co.TEXTURE_2D,os.__webglTexture),Co.pixelStorei(Co.UNPACK_FLIP_Y_WEBGL,ss.flipY),Co.pixelStorei(Co.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ss.premultiplyAlpha),Co.pixelStorei(Co.UNPACK_ALIGNMENT,ss.unpackAlignment);var ds=Bo(ss.image,Io.maxTextureSize);Vo(ss)&&!1===Oo(ds)&&(ds=Go(ds));var cs=Oo(ds),ps=zo(ss.format),us=zo(ss.type);Qo(Co.TEXTURE_2D,ss,cs);var fs=ss.mipmaps,ms;if(ss.isDepthTexture){var gs=Co.DEPTH_COMPONENT;if(ss.type===va){if(!ns)throw new Error('Float Depth Texture only supported in WebGL2.0');gs=Co.DEPTH_COMPONENT32F}else ns&&(gs=Co.DEPTH_COMPONENT16);ss.format===Ca&&gs===Co.DEPTH_COMPONENT&&ss.type!==ha&&ss.type!==_a&&(console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.'),ss.type=ha,us=zo(ss.type)),ss.format===Da&&(gs=Co.DEPTH_STENCIL,ss.type!==Ma&&(console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.'),ss.type=Ma,us=zo(ss.type))),Uo.texImage2D(Co.TEXTURE_2D,0,gs,ds.width,ds.height,0,ps,us,null)}else if(ss.isDataTexture){if(0<fs.length&&cs){for(var hs=0,xs=fs.length;hs<xs;hs++)ms=fs[hs],Uo.texImage2D(Co.TEXTURE_2D,hs,ps,ms.width,ms.height,0,ps,us,ms.data);ss.generateMipmaps=!1}else Uo.texImage2D(Co.TEXTURE_2D,0,ps,ds.width,ds.height,0,ps,us,ds.data);}else if(ss.isCompressedTexture)for(var hs=0,xs=fs.length;hs<xs;hs++)ms=fs[hs],ss.format!==Aa&&ss.format!==La?-1<Uo.getCompressedTextureFormats().indexOf(ps)?Uo.compressedTexImage2D(Co.TEXTURE_2D,hs,ps,ms.width,ms.height,0,ms.data):console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'):Uo.texImage2D(Co.TEXTURE_2D,hs,ps,ms.width,ms.height,0,ps,us,ms.data);else if(0<fs.length&&cs){for(var hs=0,xs=fs.length;hs<xs;hs++)ms=fs[hs],Uo.texImage2D(Co.TEXTURE_2D,hs,ps,ps,us,ms);ss.generateMipmaps=!1}else Uo.texImage2D(Co.TEXTURE_2D,0,ps,ps,us,ds);ss.generateMipmaps&&cs&&Co.generateMipmap(Co.TEXTURE_2D),os.__version=ss.version,ss.onUpdate&&ss.onUpdate(ss)}function Ko(os,ss,ls,ds){var cs=zo(ss.texture.format),ps=zo(ss.texture.type);Uo.texImage2D(ds,0,cs,ss.width,ss.height,0,cs,ps,null),Co.bindFramebuffer(Co.FRAMEBUFFER,os),Co.framebufferTexture2D(Co.FRAMEBUFFER,ls,ds,No.get(ss.texture).__webglTexture,0),Co.bindFramebuffer(Co.FRAMEBUFFER,null)}function $o(os,ss){Co.bindRenderbuffer(Co.RENDERBUFFER,os),ss.depthBuffer&&!ss.stencilBuffer?(Co.renderbufferStorage(Co.RENDERBUFFER,Co.DEPTH_COMPONENT16,ss.width,ss.height),Co.framebufferRenderbuffer(Co.FRAMEBUFFER,Co.DEPTH_ATTACHMENT,Co.RENDERBUFFER,os)):ss.depthBuffer&&ss.stencilBuffer?(Co.renderbufferStorage(Co.RENDERBUFFER,Co.DEPTH_STENCIL,ss.width,ss.height),Co.framebufferRenderbuffer(Co.FRAMEBUFFER,Co.DEPTH_STENCIL_ATTACHMENT,Co.RENDERBUFFER,os)):Co.renderbufferStorage(Co.RENDERBUFFER,Co.RGBA4,ss.width,ss.height),Co.bindRenderbuffer(Co.RENDERBUFFER,null)}function es(os,ss){var ls=ss&&ss.isWebGLRenderTargetCube;if(ls)throw new Error('Depth Texture with cube render targets is not supported!');if(Co.bindFramebuffer(Co.FRAMEBUFFER,os),!(ss.depthTexture&&ss.depthTexture.isDepthTexture))throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');No.get(ss.depthTexture).__webglTexture&&ss.depthTexture.image.width===ss.width&&ss.depthTexture.image.height===ss.height||(ss.depthTexture.image.width=ss.width,ss.depthTexture.image.height=ss.height,ss.depthTexture.needsUpdate=!0),jo(ss.depthTexture,0);var ds=No.get(ss.depthTexture).__webglTexture;if(ss.depthTexture.format===Ca)Co.framebufferTexture2D(Co.FRAMEBUFFER,Co.DEPTH_ATTACHMENT,Co.TEXTURE_2D,ds,0);else if(ss.depthTexture.format===Da)Co.framebufferTexture2D(Co.FRAMEBUFFER,Co.DEPTH_STENCIL_ATTACHMENT,Co.TEXTURE_2D,ds,0);else throw new Error('Unknown depthTexture format')}function ts(os){var ss=No.get(os),ls=!0===os.isWebGLRenderTargetCube;if(os.depthTexture){if(ls)throw new Error('target.depthTexture not supported in Cube render targets');es(ss.__webglFramebuffer,os)}else if(ls){ss.__webglDepthbuffer=[];for(var ds=0;6>ds;ds++)Co.bindFramebuffer(Co.FRAMEBUFFER,ss.__webglFramebuffer[ds]),ss.__webglDepthbuffer[ds]=Co.createRenderbuffer(),$o(ss.__webglDepthbuffer[ds],os)}else Co.bindFramebuffer(Co.FRAMEBUFFER,ss.__webglFramebuffer),ss.__webglDepthbuffer=Co.createRenderbuffer(),$o(ss.__webglDepthbuffer,os);Co.bindFramebuffer(Co.FRAMEBUFFER,null)}var is=Fo.memory,ns='undefined'!==typeof WebGL2RenderingContext&&Co instanceof WebGL2RenderingContext;this.setTexture2D=jo,this.setTextureCube=function(os,ss){var ls=No.get(os);if(6===os.image.length)if(0<os.version&&ls.__version!==os.version){ls.__image__webglTextureCube||(os.addEventListener('dispose',ko),ls.__image__webglTextureCube=Co.createTexture(),is.textures++),Uo.activeTexture(Co.TEXTURE0+ss),Uo.bindTexture(Co.TEXTURE_CUBE_MAP,ls.__image__webglTextureCube),Co.pixelStorei(Co.UNPACK_FLIP_Y_WEBGL,os.flipY);for(var ds=os&&os.isCompressedTexture,cs=os.image[0]&&os.image[0].isDataTexture,ps=[],us=0;6>us;us++)ps[us]=ds||cs?cs?os.image[us].image:os.image[us]:Bo(os.image[us],Io.maxCubemapSize);var ms=ps[0],fs=Oo(ms),gs=zo(os.format),hs=zo(os.type);Qo(Co.TEXTURE_CUBE_MAP,os,fs);for(var us=0;6>us;us++)if(!ds)cs?Uo.texImage2D(Co.TEXTURE_CUBE_MAP_POSITIVE_X+us,0,gs,ps[us].width,ps[us].height,0,gs,hs,ps[us].data):Uo.texImage2D(Co.TEXTURE_CUBE_MAP_POSITIVE_X+us,0,gs,gs,hs,ps[us]);else for(var _s=ps[us].mipmaps,vs=0,ys=_s.length,xs;vs<ys;vs++)xs=_s[vs],os.format!==Aa&&os.format!==La?-1<Uo.getCompressedTextureFormats().indexOf(gs)?Uo.compressedTexImage2D(Co.TEXTURE_CUBE_MAP_POSITIVE_X+us,vs,gs,xs.width,xs.height,0,xs.data):console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()'):Uo.texImage2D(Co.TEXTURE_CUBE_MAP_POSITIVE_X+us,vs,gs,xs.width,xs.height,0,gs,hs,xs.data);os.generateMipmaps&&fs&&Co.generateMipmap(Co.TEXTURE_CUBE_MAP),ls.__version=os.version,os.onUpdate&&os.onUpdate(os)}else Uo.activeTexture(Co.TEXTURE0+ss),Uo.bindTexture(Co.TEXTURE_CUBE_MAP,ls.__image__webglTextureCube)},this.setTextureCubeDynamic=function(os,ss){Uo.activeTexture(Co.TEXTURE0+ss),Uo.bindTexture(Co.TEXTURE_CUBE_MAP,No.get(os).__webglTexture)},this.setupRenderTarget=function(os){var ss=No.get(os),ls=No.get(os.texture);os.addEventListener('dispose',Wo),ls.__webglTexture=Co.createTexture(),is.textures++;var ds=!0===os.isWebGLRenderTargetCube,cs=Oo(os);if(ds){ss.__webglFramebuffer=[];for(var ps=0;6>ps;ps++)ss.__webglFramebuffer[ps]=Co.createFramebuffer()}else ss.__webglFramebuffer=Co.createFramebuffer();if(ds){Uo.bindTexture(Co.TEXTURE_CUBE_MAP,ls.__webglTexture),Qo(Co.TEXTURE_CUBE_MAP,os.texture,cs);for(var ps=0;6>ps;ps++)Ko(ss.__webglFramebuffer[ps],os,Co.COLOR_ATTACHMENT0,Co.TEXTURE_CUBE_MAP_POSITIVE_X+ps);os.texture.generateMipmaps&&cs&&Co.generateMipmap(Co.TEXTURE_CUBE_MAP),Uo.bindTexture(Co.TEXTURE_CUBE_MAP,null)}else Uo.bindTexture(Co.TEXTURE_2D,ls.__webglTexture),Qo(Co.TEXTURE_2D,os.texture,cs),Ko(ss.__webglFramebuffer,os,Co.COLOR_ATTACHMENT0,Co.TEXTURE_2D),os.texture.generateMipmaps&&cs&&Co.generateMipmap(Co.TEXTURE_2D),Uo.bindTexture(Co.TEXTURE_2D,null);os.depthBuffer&&ts(os)},this.updateRenderTargetMipmap=function(os){var ss=os.texture;if(ss.generateMipmaps&&Oo(os)&&ss.minFilter!==sa&&ss.minFilter!==ca){var ls=os&&os.isWebGLRenderTargetCube?Co.TEXTURE_CUBE_MAP:Co.TEXTURE_2D,ds=No.get(ss).__webglTexture;Uo.bindTexture(ls,ds),Co.generateMipmap(ls),Uo.bindTexture(ls,null)}}}function Tt(){var Co={};return{get:function(Uo){var No=Uo.uuid,Io=Co[No];return void 0===Io&&(Io={},Co[No]=Io),Io},delete:function(Uo){delete Co[Uo.uuid]},clear:function(){Co={}}}}function Lt(Co,Do,Uo){function Fo(Xs,Ys,js){var qs=new Uint8Array(4),Zs=Co.createTexture();Co.bindTexture(Xs,Zs),Co.texParameteri(Xs,Co.TEXTURE_MIN_FILTER,Co.NEAREST),Co.texParameteri(Xs,Co.TEXTURE_MAG_FILTER,Co.NEAREST);for(var Qs=0;Qs<js;Qs++)Co.texImage2D(Ys+Qs,0,Co.RGBA,1,1,0,Co.RGBA,Co.UNSIGNED_BYTE,qs);return Zs}function ko(Xs){!0!==Es[Xs]&&(Co.enable(Xs),Es[Xs]=!0)}function Wo(Xs){!1!==Es[Xs]&&(Co.disable(Xs),Es[Xs]=!1)}function Yo(Xs,Ys,js,qs,Zs,Qs,Js,Ks){Xs===ur?Wo(Co.BLEND):ko(Co.BLEND),(Xs!==Ss||Ks!==ws)&&(Xs===fr?Ks?(Co.blendEquationSeparate(Co.FUNC_ADD,Co.FUNC_ADD),Co.blendFuncSeparate(Co.ONE,Co.ONE,Co.ONE,Co.ONE)):(Co.blendEquation(Co.FUNC_ADD),Co.blendFunc(Co.SRC_ALPHA,Co.ONE)):Xs===gr?Ks?(Co.blendEquationSeparate(Co.FUNC_ADD,Co.FUNC_ADD),Co.blendFuncSeparate(Co.ZERO,Co.ZERO,Co.ONE_MINUS_SRC_COLOR,Co.ONE_MINUS_SRC_ALPHA)):(Co.blendEquation(Co.FUNC_ADD),Co.blendFunc(Co.ZERO,Co.ONE_MINUS_SRC_COLOR)):Xs===hr?Ks?(Co.blendEquationSeparate(Co.FUNC_ADD,Co.FUNC_ADD),Co.blendFuncSeparate(Co.ZERO,Co.SRC_COLOR,Co.ZERO,Co.SRC_ALPHA)):(Co.blendEquation(Co.FUNC_ADD),Co.blendFunc(Co.ZERO,Co.SRC_COLOR)):Ks?(Co.blendEquationSeparate(Co.FUNC_ADD,Co.FUNC_ADD),Co.blendFuncSeparate(Co.ONE,Co.ONE_MINUS_SRC_ALPHA,Co.ONE,Co.ONE_MINUS_SRC_ALPHA)):(Co.blendEquationSeparate(Co.FUNC_ADD,Co.FUNC_ADD),Co.blendFuncSeparate(Co.SRC_ALPHA,Co.ONE_MINUS_SRC_ALPHA,Co.ONE,Co.ONE_MINUS_SRC_ALPHA)),Ss=Xs,ws=Ks),Xs===xr?(Zs=Zs||Ys,Qs=Qs||js,Js=Js||qs,(Ys!==Ms||Zs!==As)&&(Co.blendEquationSeparate(Uo(Ys),Uo(Zs)),Ms=Ys,As=Zs),(js!==Ts||qs!==Ls||Qs!==Rs||Js!==Ps)&&(Co.blendFuncSeparate(Uo(js),Uo(qs),Uo(Qs),Uo(Js)),Ts=js,Ls=qs,Rs=Qs,Ps=Js)):(Ms=null,Ts=null,Ls=null,As=null,Rs=null,Ps=null)}function Qo(Xs){gs.setFunc(Xs)}function ts(Xs){Cs!==Xs&&(Xs?Co.frontFace(Co.CW):Co.frontFace(Co.CCW),Cs=Xs)}function rs(Xs){Xs===Zt?Wo(Co.CULL_FACE):(ko(Co.CULL_FACE),Xs!==Ds&&(Xs===Qt?Co.cullFace(Co.BACK):Xs===Jt?Co.cullFace(Co.FRONT):Co.cullFace(Co.FRONT_AND_BACK))),Ds=Xs}function ss(Xs){void 0===Xs&&(Xs=Co.TEXTURE0+Fs-1),Gs!==Xs&&(Co.activeTexture(Xs),Gs=Xs)}var fs=new function(){var Xs=!1,Ys=new _e,js=null,qs=new _e;return{setMask:function(Qs){js===Qs||Xs||(Co.colorMask(Qs,Qs,Qs,Qs),js=Qs)},setLocked:function(Qs){Xs=Qs},setClear:function(Qs,Js,Ks,$s,el){!0===el&&(Qs*=$s,Js*=$s,Ks*=$s),Ys.set(Qs,Js,Ks,$s),!1===qs.equals(Ys)&&(Co.clearColor(Qs,Js,Ks,$s),qs.copy(Ys))},reset:function(){Xs=!1,js=null,qs.set(0,0,0,1)}}},gs=new function(){var Xs=!1,Ys=null,js=null,qs=null;return{setTest:function(Qs){Qs?ko(Co.DEPTH_TEST):Wo(Co.DEPTH_TEST)},setMask:function(Qs){Ys===Qs||Xs||(Co.depthMask(Qs),Ys=Qs)},setFunc:function(Qs){js!==Qs&&(Qs?Qs===Nr?Co.depthFunc(Co.NEVER):Qs===Ir?Co.depthFunc(Co.ALWAYS):Qs===zr?Co.depthFunc(Co.LESS):Qs===Fr?Co.depthFunc(Co.LEQUAL):Qs===Br?Co.depthFunc(Co.EQUAL):Qs===Or?Co.depthFunc(Co.GEQUAL):Qs===Gr?Co.depthFunc(Co.GREATER):Qs===Vr?Co.depthFunc(Co.NOTEQUAL):Co.depthFunc(Co.LEQUAL):Co.depthFunc(Co.LEQUAL),js=Qs)},setLocked:function(Qs){Xs=Qs},setClear:function(Qs){qs!==Qs&&(Co.clearDepth(Qs),qs=Qs)},reset:function(){Xs=!1,Ys=null,js=null,qs=null}}},hs=new function(){var Xs=!1,Ys=null,js=null,qs=null,Zs=null,Qs=null,Js=null,Ks=null,$s=null;return{setTest:function(rl){rl?ko(Co.STENCIL_TEST):Wo(Co.STENCIL_TEST)},setMask:function(rl){Ys===rl||Xs||(Co.stencilMask(rl),Ys=rl)},setFunc:function(rl,al,nl){(js!==rl||qs!==al||Zs!==nl)&&(Co.stencilFunc(rl,al,nl),js=rl,qs=al,Zs=nl)},setOp:function(rl,al,nl){(Qs!==rl||Js!==al||Ks!==nl)&&(Co.stencilOp(rl,al,nl),Qs=rl,Js=al,Ks=nl)},setLocked:function(rl){Xs=rl},setClear:function(rl){$s!==rl&&(Co.clearStencil(rl),$s=rl)},reset:function(){Xs=!1,Ys=null,js=null,qs=null,Zs=null,Qs=null,Js=null,Ks=null,$s=null}}},xs=Co.getParameter(Co.MAX_VERTEX_ATTRIBS),_s=new Uint8Array(xs),vs=new Uint8Array(xs),ys=new Uint8Array(xs),Es={},bs=null,Ss=null,Ms=null,Ts=null,Ls=null,As=null,Rs=null,Ps=null,ws=!1,Cs=null,Ds=null,Us=null,Ns=null,Is=null,zs=null,Fs=Co.getParameter(Co.MAX_TEXTURE_IMAGE_UNITS),Bs=parseFloat(/^WebGL\ ([0-9])/.exec(Co.getParameter(Co.VERSION))[1]),Os=1<=parseFloat(Bs),Gs=null,Vs={},Hs=new _e,ks=new _e,Ws={};return Ws[Co.TEXTURE_2D]=Fo(Co.TEXTURE_2D,Co.TEXTURE_2D,1),Ws[Co.TEXTURE_CUBE_MAP]=Fo(Co.TEXTURE_CUBE_MAP,Co.TEXTURE_CUBE_MAP_POSITIVE_X,6),{buffers:{color:fs,depth:gs,stencil:hs},init:function(){fs.setClear(0,0,0,1),gs.setClear(1),hs.setClear(0),ko(Co.DEPTH_TEST),Qo(Fr),ts(!1),rs(Qt),ko(Co.CULL_FACE),ko(Co.BLEND),Yo(mr)},initAttributes:function(){for(var Xs=0,Ys=_s.length;Xs<Ys;Xs++)_s[Xs]=0},enableAttribute:function(Xs){if(_s[Xs]=1,0===vs[Xs]&&(Co.enableVertexAttribArray(Xs),vs[Xs]=1),0!==ys[Xs]){var Ys=Do.get('ANGLE_instanced_arrays');Ys.vertexAttribDivisorANGLE(Xs,0),ys[Xs]=0}},enableAttributeAndDivisor:function(Xs,Ys,js){_s[Xs]=1,0===vs[Xs]&&(Co.enableVertexAttribArray(Xs),vs[Xs]=1),ys[Xs]!==Ys&&(js.vertexAttribDivisorANGLE(Xs,Ys),ys[Xs]=Ys)},disableUnusedAttributes:function(){for(var Xs=0,Ys=vs.length;Xs!==Ys;++Xs)vs[Xs]!==_s[Xs]&&(Co.disableVertexAttribArray(Xs),vs[Xs]=0)},enable:ko,disable:Wo,getCompressedTextureFormats:function(){if(null===bs&&(bs=[],Do.get('WEBGL_compressed_texture_pvrtc')||Do.get('WEBGL_compressed_texture_s3tc')||Do.get('WEBGL_compressed_texture_etc1')))for(var Xs=Co.getParameter(Co.COMPRESSED_TEXTURE_FORMATS),Ys=0;Ys<Xs.length;Ys++)bs.push(Xs[Ys]);return bs},setBlending:Yo,setColorWrite:function(Xs){fs.setMask(Xs)},setDepthTest:function(Xs){gs.setTest(Xs)},setDepthWrite:function(Xs){gs.setMask(Xs)},setDepthFunc:Qo,setStencilTest:function(Xs){hs.setTest(Xs)},setStencilWrite:function(Xs){hs.setMask(Xs)},setStencilFunc:function(Xs,Ys,js){hs.setFunc(Xs,Ys,js)},setStencilOp:function(Xs,Ys,js){hs.setOp(Xs,Ys,js)},setFlipSided:ts,setCullFace:rs,setLineWidth:function(Xs){Xs!==Us&&(Os&&Co.lineWidth(Xs),Us=Xs)},setPolygonOffset:function(Xs,Ys,js){Xs?(ko(Co.POLYGON_OFFSET_FILL),(Ns!==Ys||Is!==js)&&(Co.polygonOffset(Ys,js),Ns=Ys,Is=js)):Wo(Co.POLYGON_OFFSET_FILL)},getScissorTest:function(){return zs},setScissorTest:function(Xs){zs=Xs,Xs?ko(Co.SCISSOR_TEST):Wo(Co.SCISSOR_TEST)},activeTexture:ss,bindTexture:function(Xs,Ys){null===Gs&&ss();var js=Vs[Gs];void 0===js&&(js={type:void 0,texture:void 0},Vs[Gs]=js),(js.type!==Xs||js.texture!==Ys)&&(Co.bindTexture(Xs,Ys||Ws[Xs]),js.type=Xs,js.texture=Ys)},compressedTexImage2D:function(){try{Co.compressedTexImage2D.apply(Co,arguments)}catch(Xs){console.error(Xs)}},texImage2D:function(){try{Co.texImage2D.apply(Co,arguments)}catch(Xs){console.error(Xs)}},scissor:function(Xs){!1===Hs.equals(Xs)&&(Co.scissor(Xs.x,Xs.y,Xs.z,Xs.w),Hs.copy(Xs))},viewport:function(Xs){!1===ks.equals(Xs)&&(Co.viewport(Xs.x,Xs.y,Xs.z,Xs.w),ks.copy(Xs))},reset:function(){for(var Xs=0;Xs<vs.length;Xs++)1===vs[Xs]&&(Co.disableVertexAttribArray(Xs),vs[Xs]=0);Es={},bs=null,Gs=null,Vs={},Ss=null,Cs=null,Ds=null,fs.reset(),gs.reset(),hs.reset()}}}function At(Co,Do,Uo){function Io(Jo){if('highp'===Jo){if(0<Co.getShaderPrecisionFormat(Co.VERTEX_SHADER,Co.HIGH_FLOAT).precision&&0<Co.getShaderPrecisionFormat(Co.FRAGMENT_SHADER,Co.HIGH_FLOAT).precision)return'highp';Jo='mediump'}return'mediump'===Jo&&0<Co.getShaderPrecisionFormat(Co.VERTEX_SHADER,Co.MEDIUM_FLOAT).precision&&0<Co.getShaderPrecisionFormat(Co.FRAGMENT_SHADER,Co.MEDIUM_FLOAT).precision?'mediump':'lowp'}var zo,Fo=Uo.precision===void 0?'highp':Uo.precision,Bo=Io(Fo);Bo!==Fo&&(console.warn('THREE.WebGLRenderer:',Fo,'not supported, using',Bo,'instead.'),Fo=Bo);var Oo=!0===Uo.logarithmicDepthBuffer&&!!Do.get('EXT_frag_depth'),Go=Co.getParameter(Co.MAX_TEXTURE_IMAGE_UNITS),Vo=Co.getParameter(Co.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Ho=Co.getParameter(Co.MAX_TEXTURE_SIZE),ko=Co.getParameter(Co.MAX_CUBE_MAP_TEXTURE_SIZE),Wo=Co.getParameter(Co.MAX_VERTEX_ATTRIBS),Xo=Co.getParameter(Co.MAX_VERTEX_UNIFORM_VECTORS),Yo=Co.getParameter(Co.MAX_VARYING_VECTORS),jo=Co.getParameter(Co.MAX_FRAGMENT_UNIFORM_VECTORS),qo=0<Vo,Zo=!!Do.get('OES_texture_float');return{getMaxAnisotropy:function(){if(void 0!==zo)return zo;var Jo=Do.get('EXT_texture_filter_anisotropic');return zo=null===Jo?0:Co.getParameter(Jo.MAX_TEXTURE_MAX_ANISOTROPY_EXT),zo},getMaxPrecision:Io,precision:Fo,logarithmicDepthBuffer:Oo,maxTextures:Go,maxVertexTextures:Vo,maxTextureSize:Ho,maxCubemapSize:ko,maxAttributes:Wo,maxVertexUniforms:Xo,maxVaryings:Yo,maxFragmentUniforms:jo,vertexTextures:qo,floatFragmentTextures:Zo,floatVertexTextures:qo&&Zo}}function Rt(Co){var Do={};return{get:function(No){if(void 0!==Do[No])return Do[No];var Io;return Io='WEBGL_depth_texture'===No?Co.getExtension('WEBGL_depth_texture')||Co.getExtension('MOZ_WEBGL_depth_texture')||Co.getExtension('WEBKIT_WEBGL_depth_texture'):'EXT_texture_filter_anisotropic'===No?Co.getExtension('EXT_texture_filter_anisotropic')||Co.getExtension('MOZ_EXT_texture_filter_anisotropic')||Co.getExtension('WEBKIT_EXT_texture_filter_anisotropic'):'WEBGL_compressed_texture_s3tc'===No?Co.getExtension('WEBGL_compressed_texture_s3tc')||Co.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||Co.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'):'WEBGL_compressed_texture_pvrtc'===No?Co.getExtension('WEBGL_compressed_texture_pvrtc')||Co.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'):'WEBGL_compressed_texture_etc1'===No?Co.getExtension('WEBGL_compressed_texture_etc1'):Co.getExtension(No),null===Io&&console.warn('THREE.WebGLRenderer: '+No+' extension not supported.'),Do[No]=Io,Io}}}function Pt(){function Co(){Go.value!==No&&(Go.value=No,Go.needsUpdate=0<Io),Uo.numPlanes=Io,Uo.numIntersection=0}function Do(Vo,Ho,ko,Wo){var Xo=null===Vo?0:Vo.length,Yo=null;if(0!==Xo){if(Yo=Go.value,!0!==Wo||null===Yo){var jo=ko+4*Xo,qo=Ho.matrixWorldInverse;Oo.getNormalMatrix(qo),(null===Yo||Yo.length<jo)&&(Yo=new Float32Array(jo));for(var Zo=0,Qo=ko;Zo!==Xo;++Zo,Qo+=4)Bo.copy(Vo[Zo]).applyMatrix4(qo,Oo),Bo.normal.toArray(Yo,Qo),Yo[Qo+3]=Bo.constant}Go.value=Yo,Go.needsUpdate=!0}return Uo.numPlanes=Xo,Yo}var Uo=this,No=null,Io=0,zo=!1,Fo=!1,Bo=new Ce,Oo=new we,Go={value:null,needsUpdate:!1};this.uniform=Go,this.numPlanes=0,this.numIntersection=0,this.init=function(Vo,Ho,ko){var Wo=0!==Vo.length||Ho||0!==Io||zo;return zo=Ho,No=Do(Vo,ko,0),Io=Vo.length,Wo},this.beginShadows=function(){Fo=!0,Do(null)},this.endShadows=function(){Fo=!1,Co()},this.setState=function(Vo,Ho,ko,Wo,Xo,Yo){if(!zo||null===Vo||0===Vo.length||Fo&&!ko)Fo?Do(null):Co();else{var jo=Fo?0:Io,qo=4*jo,Zo=Xo.clippingState||null;Go.value=Zo,Zo=Do(Vo,Wo,qo,Yo);for(var Qo=0;Qo!==qo;++Qo)Zo[Qo]=No[Qo];Xo.clippingState=Zo,this.numIntersection=Ho?this.numPlanes:0,this.numPlanes+=jo}}}function Ct(){Fe.call(this),this.type='Scene',this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function Dt(Co,Do,Uo,No,Io,zo,Fo,Bo,Oo){function Go(){requestAnimationFrame(Go),Co.readyState>=Co.HAVE_CURRENT_DATA&&(Vo.needsUpdate=!0)}L.call(this,Co,Do,Uo,No,Io,zo,Fo,Bo,Oo),this.generateMipmaps=!1;var Vo=this;Go()}function Nt(Co){this.manager=Co===void 0?wo:Co}function It(Co){this.manager=Co===void 0?wo:Co}function zt(Co,Do,Uo,No){this.ray=new Ne(Co,Do),this.near=Uo||0,this.far=No||Infinity,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.'),this.Points}}})}function Ft(Co,Do){return Co.distance-Do.distance}function Bt(Co,Do,Uo,No){if(!1!==Co.visible&&(Co.raycast(Do,Uo),!0===No))for(var Io=Co.children,zo=0,Fo=Io.length;zo<Fo;zo++)Bt(Io[zo],Do,Uo,!0)}function Ot(Co,Do,Uo,No,Io){Ze.call(this),this.type='TorusGeometry',this.parameters={radius:Co,tube:Do,radialSegments:Uo,tubularSegments:No,arc:Io},this.fromBufferGeometry(new Gt(Co,Do,Uo,No,Io))}function Gt(Co,Do,Uo,No,Io){Qe.call(this),this.type='TorusBufferGeometry',this.parameters={radius:Co,tube:Do,radialSegments:Uo,tubularSegments:No,arc:Io},Co=Co||100,Do=Do||40,Uo=Math.floor(Uo)||8,No=Math.floor(No)||6,Io=Io||2*Math.PI;var zo=[],Fo=[],Bo=[],Oo=[],Go=new E,Vo=new E,Ho=new E,ko,Wo;for(ko=0;ko<=Uo;ko++)for(Wo=0;Wo<=No;Wo++){var Xo=Wo/No*Io,Yo=2*(ko/Uo*Math.PI);Vo.x=(Co+Do*Math.cos(Yo))*Math.cos(Xo),Vo.y=(Co+Do*Math.cos(Yo))*Math.sin(Xo),Vo.z=Do*Math.sin(Yo),Fo.push(Vo.x,Vo.y,Vo.z),Go.x=Co*Math.cos(Xo),Go.y=Co*Math.sin(Xo),Ho.subVectors(Vo,Go).normalize(),Bo.push(Ho.x,Ho.y,Ho.z),Oo.push(Wo/No),Oo.push(ko/Uo)}for(ko=1;ko<=Uo;ko++)for(Wo=1;Wo<=No;Wo++){var jo=(No+1)*ko+Wo-1,qo=(No+1)*(ko-1)+Wo-1,Zo=(No+1)*(ko-1)+Wo,Qo=(No+1)*ko+Wo;zo.push(jo,qo,Qo),zo.push(qo,Zo,Qo)}this.setIndex(zo),this.addAttribute('position',new Xe(Fo,3)),this.addAttribute('normal',new Xe(Bo,3)),this.addAttribute('uv',new Xe(Oo,2))}function Vt(Co,Do,Uo,No,Io,zo,Fo){Ze.call(this),this.type='SphereGeometry',this.parameters={radius:Co,widthSegments:Do,heightSegments:Uo,phiStart:No,phiLength:Io,thetaStart:zo,thetaLength:Fo},this.fromBufferGeometry(new Ht(Co,Do,Uo,No,Io,zo,Fo))}function Ht(Co,Do,Uo,No,Io,zo,Fo){Qe.call(this),this.type='SphereBufferGeometry',this.parameters={radius:Co,widthSegments:Do,heightSegments:Uo,phiStart:No,phiLength:Io,thetaStart:zo,thetaLength:Fo},Co=Co||50,Do=Math.max(3,Math.floor(Do)||8),Uo=Math.max(2,Math.floor(Uo)||6),No=No===void 0?0:No,Io=Io===void 0?2*Math.PI:Io,zo=zo===void 0?0:zo,Fo=Fo===void 0?Math.PI:Fo;var Bo=zo+Fo,Oo,Go,Vo=0,Ho=[],ko=new E,Wo=new E,Xo=[],Yo=[],jo=[],qo=[];for(Go=0;Go<=Uo;Go++){var Zo=[],Qo=Go/Uo;for(Oo=0;Oo<=Do;Oo++){var Jo=Oo/Do;ko.x=-Co*Math.cos(No+Jo*Io)*Math.sin(zo+Qo*Fo),ko.y=Co*Math.cos(zo+Qo*Fo),ko.z=Co*Math.sin(No+Jo*Io)*Math.sin(zo+Qo*Fo),Yo.push(ko.x,ko.y,ko.z),Wo.set(ko.x,ko.y,ko.z).normalize(),jo.push(Wo.x,Wo.y,Wo.z),qo.push(Jo,1-Qo),Zo.push(Vo++)}Ho.push(Zo)}for(Go=0;Go<Uo;Go++)for(Oo=0;Oo<Do;Oo++){var Ko=Ho[Go][Oo+1],$o=Ho[Go][Oo],es=Ho[Go+1][Oo],ts=Ho[Go+1][Oo+1];(0!==Go||0<zo)&&Xo.push(Ko,$o,ts),(Go!==Uo-1||Bo<Math.PI)&&Xo.push($o,es,ts)}this.setIndex(Xo),this.addAttribute('position',new Xe(Yo,3)),this.addAttribute('normal',new Xe(jo,3)),this.addAttribute('uv',new Xe(qo,2))}function kt(Co,Do,Uo,No){Ze.call(this),this.type='CircleGeometry',this.parameters={radius:Co,segments:Do,thetaStart:Uo,thetaLength:No},this.fromBufferGeometry(new Wt(Co,Do,Uo,No))}function Wt(Co,Do,Uo,No){Qe.call(this),this.type='CircleBufferGeometry',this.parameters={radius:Co,segments:Do,thetaStart:Uo,thetaLength:No},Co=Co||50,Do=Do===void 0?8:Math.max(3,Do),Uo=Uo===void 0?0:Uo,No=No===void 0?2*Math.PI:No;var Io=[],zo=[],Fo=[],Bo=[],Oo,Go,Vo=new E,Ho=new T;for(zo.push(0,0,0),Fo.push(0,0,1),Bo.push(0.5,0.5),(Go=0,Oo=3);Go<=Do;Go++,Oo+=3){var ko=Uo+Go/Do*No;Vo.x=Co*Math.cos(ko),Vo.y=Co*Math.sin(ko),zo.push(Vo.x,Vo.y,Vo.z),Fo.push(0,0,1),Ho.x=(zo[Oo]/Co+1)/2,Ho.y=(zo[Oo+1]/Co+1)/2,Bo.push(Ho.x,Ho.y)}for(Oo=1;Oo<=Do;Oo++)Io.push(Oo,Oo+1,0);this.setIndex(Io),this.addAttribute('position',new Xe(zo,3)),this.addAttribute('normal',new Xe(Fo,3)),this.addAttribute('uv',new Xe(Bo,2))}function Xt(Co,Do,Uo,No,Io,zo){Ze.call(this),this.type='RingGeometry',this.parameters={innerRadius:Co,outerRadius:Do,thetaSegments:Uo,phiSegments:No,thetaStart:Io,thetaLength:zo},this.fromBufferGeometry(new Yt(Co,Do,Uo,No,Io,zo))}function Yt(Co,Do,Uo,No,Io,zo){Qe.call(this),this.type='RingBufferGeometry',this.parameters={innerRadius:Co,outerRadius:Do,thetaSegments:Uo,phiSegments:No,thetaStart:Io,thetaLength:zo},Co=Co||20,Do=Do||50,Io=Io===void 0?0:Io,zo=zo===void 0?2*Math.PI:zo,Uo=Uo===void 0?8:Math.max(3,Uo),No=No===void 0?1:Math.max(1,No);var Fo=[],Bo=[],Oo=[],Go=[],Vo,Ho=Co,ko=(Do-Co)/No,Wo=new E,Xo=new T,Yo,jo;for(Yo=0;Yo<=No;Yo++){for(jo=0;jo<=Uo;jo++)Vo=Io+jo/Uo*zo,Wo.x=Ho*Math.cos(Vo),Wo.y=Ho*Math.sin(Vo),Bo.push(Wo.x,Wo.y,Wo.z),Oo.push(0,0,1),Xo.x=(Wo.x/Do+1)/2,Xo.y=(Wo.y/Do+1)/2,Go.push(Xo.x,Xo.y);Ho+=ko}for(Yo=0;Yo<No;Yo++){var qo=Yo*(Uo+1);for(jo=0;jo<Uo;jo++){Vo=jo+qo;var Zo=Vo,Qo=Vo+Uo+1,Jo=Vo+Uo+2,Ko=Vo+1;Fo.push(Zo,Qo,Ko),Fo.push(Qo,Jo,Ko)}}this.setIndex(Fo),this.addAttribute('position',new Xe(Bo,3)),this.addAttribute('normal',new Xe(Oo,3)),this.addAttribute('uv',new Xe(Go,2))}Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52)),Math.sign===void 0&&(Math.sign=function(Co){return 0>Co?-1:0<Co?1:+Co}),Function.prototype.name===void 0&&Object.defineProperty(Function.prototype,'name',{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&function(){Object.assign=function(Co){if(Co===void 0||null===Co)throw new TypeError('Cannot convert undefined or null to object');for(var Do=Object(Co),Uo=1,No;Uo<arguments.length;Uo++)if(No=arguments[Uo],void 0!==No&&null!==No)for(var Io in No)Object.prototype.hasOwnProperty.call(No,Io)&&(Do[Io]=No[Io]);return Do}}();var jt='84',Zt=0,Qt=1,Jt=2,$t=0,rr=1,ar=2,ir=0,nr=1,or=2,sr=1,lr=2,dr=0,ur=0,mr=1,fr=2,gr=3,hr=4,xr=5,_r=100,vr=101,yr=102,Er=103,br=104,Sr=200,Mr=201,Tr=202,Lr=203,Ar=204,Rr=205,Pr=206,wr=207,Cr=208,Dr=209,Ur=210,Nr=0,Ir=1,zr=2,Fr=3,Br=4,Or=5,Gr=6,Vr=7,Hr=0,kr=1,Wr=2,Xr=0,Yr=1,jr=2,qr=3,Zr=4,Qr=300,Jr=301,Kr=302,$r=303,ea=304,ta=305,ra=306,aa=307,ia=1e3,na=1001,oa=1002,sa=1003,la=1004,da=1005,ca=1006,pa=1007,ua=1008,ma=1009,fa=1010,ga=1011,ha=1012,xa=1013,_a=1014,va=1015,ya=1016,Ea=1017,ba=1018,Sa=1019,Ma=1020,Ta=1021,La=1022,Aa=1023,Ra=1024,Pa=1025,Ca=1026,Da=1027,Ua=2001,Na=2002,Ia=2003,za=2004,Fa=2100,Ba=2101,Oa=2102,Ga=2103,Va=2151,Ka=0,$a=1,ei=2,ti=3e3,ri=3001,ai=3007,ii=3002,oi=3004,si=3005,li=3006,di=3200,ci=3201,pi={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var Co='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''),Do=Array(36),Uo=0,No;return function(){for(var zo=0;36>zo;zo++)8===zo||13===zo||18===zo||23===zo?Do[zo]='-':14===zo?Do[zo]='4':(2>=Uo&&(Uo=0|33554432+16777216*Math.random()),No=15&Uo,Uo>>=4,Do[zo]=Co[19===zo?8|3&No:No]);return Do.join('')}}(),clamp:function(Do,Uo,No){return Math.max(Uo,Math.min(No,Do))},euclideanModulo:function(Do,Uo){return(Do%Uo+Uo)%Uo},mapLinear:function(Do,Uo,No,Io,zo){return Io+(Do-Uo)*(zo-Io)/(No-Uo)},lerp:function(Do,Uo,No){return(1-No)*Do+No*Uo},smoothstep:function(Do,Uo,No){return Do<=Uo?0:Do>=No?1:(Do=(Do-Uo)/(No-Uo),Do*Do*(3-2*Do))},smootherstep:function(Do,Uo,No){return Do<=Uo?0:Do>=No?1:(Do=(Do-Uo)/(No-Uo),Do*Do*Do*(Do*(6*Do-15)+10))},randInt:function(Do,Uo){return Do+Math.floor(Math.random()*(Uo-Do+1))},randFloat:function(Do,Uo){return Do+Math.random()*(Uo-Do)},randFloatSpread:function(Do){return Do*(0.5-Math.random())},degToRad:function(Do){return Do*pi.DEG2RAD},radToDeg:function(Do){return Do*pi.RAD2DEG},isPowerOfTwo:function(Do){return 0===(Do&Do-1)&&0!==Do},nearestPowerOfTwo:function(Do){return Math.pow(2,Math.round(Math.log(Do)/Math.LN2))},nextPowerOfTwo:function(Do){return Do--,Do|=Do>>1,Do|=Do>>2,Do|=Do>>4,Do|=Do>>8,Do|=Do>>16,Do++,Do}};_.prototype={constructor:_,get x(){return this._x},set x(Co){this._x=Co,this.onChangeCallback()},get y(){return this._y},set y(Co){this._y=Co,this.onChangeCallback()},get z(){return this._z},set z(Co){this._z=Co,this.onChangeCallback()},get w(){return this._w},set w(Co){this._w=Co,this.onChangeCallback()},set:function(Do,Uo,No,Io){return this._x=Do,this._y=Uo,this._z=No,this._w=Io,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(Do){return this._x=Do.x,this._y=Do.y,this._z=Do.z,this._w=Do.w,this.onChangeCallback(),this},setFromEuler:function(Do,Uo){if(!1===(Do&&Do.isEuler))throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');var No=Math.cos(Do._x/2),Io=Math.cos(Do._y/2),zo=Math.cos(Do._z/2),Fo=Math.sin(Do._x/2),Bo=Math.sin(Do._y/2),Oo=Math.sin(Do._z/2),Go=Do.order;return'XYZ'===Go?(this._x=Fo*Io*zo+No*Bo*Oo,this._y=No*Bo*zo-Fo*Io*Oo,this._z=No*Io*Oo+Fo*Bo*zo,this._w=No*Io*zo-Fo*Bo*Oo):'YXZ'===Go?(this._x=Fo*Io*zo+No*Bo*Oo,this._y=No*Bo*zo-Fo*Io*Oo,this._z=No*Io*Oo-Fo*Bo*zo,this._w=No*Io*zo+Fo*Bo*Oo):'ZXY'===Go?(this._x=Fo*Io*zo-No*Bo*Oo,this._y=No*Bo*zo+Fo*Io*Oo,this._z=No*Io*Oo+Fo*Bo*zo,this._w=No*Io*zo-Fo*Bo*Oo):'ZYX'===Go?(this._x=Fo*Io*zo-No*Bo*Oo,this._y=No*Bo*zo+Fo*Io*Oo,this._z=No*Io*Oo-Fo*Bo*zo,this._w=No*Io*zo+Fo*Bo*Oo):'YZX'===Go?(this._x=Fo*Io*zo+No*Bo*Oo,this._y=No*Bo*zo+Fo*Io*Oo,this._z=No*Io*Oo-Fo*Bo*zo,this._w=No*Io*zo-Fo*Bo*Oo):'XZY'===Go&&(this._x=Fo*Io*zo-No*Bo*Oo,this._y=No*Bo*zo-Fo*Io*Oo,this._z=No*Io*Oo+Fo*Bo*zo,this._w=No*Io*zo+Fo*Bo*Oo),!1!==Uo&&this.onChangeCallback(),this},setFromAxisAngle:function(Do,Uo){var No=Uo/2,Io=Math.sin(No);return this._x=Do.x*Io,this._y=Do.y*Io,this._z=Do.z*Io,this._w=Math.cos(No),this.onChangeCallback(),this},setFromRotationMatrix:function(Do){var Uo=Do.elements,No=Uo[0],Io=Uo[4],zo=Uo[8],Fo=Uo[1],Bo=Uo[5],Oo=Uo[9],Go=Uo[2],Vo=Uo[6],Ho=Uo[10],ko=No+Bo+Ho,Wo;return 0<ko?(Wo=0.5/Math.sqrt(ko+1),this._w=0.25/Wo,this._x=(Vo-Oo)*Wo,this._y=(zo-Go)*Wo,this._z=(Fo-Io)*Wo):No>Bo&&No>Ho?(Wo=2*Math.sqrt(1+No-Bo-Ho),this._w=(Vo-Oo)/Wo,this._x=0.25*Wo,this._y=(Io+Fo)/Wo,this._z=(zo+Go)/Wo):Bo>Ho?(Wo=2*Math.sqrt(1+Bo-No-Ho),this._w=(zo-Go)/Wo,this._x=(Io+Fo)/Wo,this._y=0.25*Wo,this._z=(Oo+Vo)/Wo):(Wo=2*Math.sqrt(1+Ho-No-Bo),this._w=(Fo-Io)/Wo,this._x=(zo+Go)/Wo,this._y=(Oo+Vo)/Wo,this._z=0.25*Wo),this.onChangeCallback(),this},setFromUnitVectors:function(){var Co,Do;return function(Io,zo){return void 0===Co&&(Co=new E),Do=Io.dot(zo)+1,Do<1e-6?(Do=0,Math.abs(Io.x)>Math.abs(Io.z)?Co.set(-Io.y,Io.x,0):Co.set(0,-Io.z,Io.y)):Co.crossVectors(Io,zo),this._x=Co.x,this._y=Co.y,this._z=Co.z,this._w=Do,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(Do){return this._x*Do._x+this._y*Do._y+this._z*Do._z+this._w*Do._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var Do=this.length();return 0===Do?(this._x=0,this._y=0,this._z=0,this._w=1):(Do=1/Do,this._x*=Do,this._y*=Do,this._z*=Do,this._w*=Do),this.onChangeCallback(),this},multiply:function(Do,Uo){return void 0===Uo?this.multiplyQuaternions(this,Do):(console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'),this.multiplyQuaternions(Do,Uo))},premultiply:function(Do){return this.multiplyQuaternions(Do,this)},multiplyQuaternions:function(Do,Uo){var No=Do._x,Io=Do._y,zo=Do._z,Fo=Do._w,Bo=Uo._x,Oo=Uo._y,Go=Uo._z,Vo=Uo._w;return this._x=No*Vo+Fo*Bo+Io*Go-zo*Oo,this._y=Io*Vo+Fo*Oo+zo*Bo-No*Go,this._z=zo*Vo+Fo*Go+No*Oo-Io*Bo,this._w=Fo*Vo-No*Bo-Io*Oo-zo*Go,this.onChangeCallback(),this},slerp:function(Do,Uo){if(0===Uo)return this;if(1===Uo)return this.copy(Do);var No=this._x,Io=this._y,zo=this._z,Fo=this._w,Bo=Fo*Do._w+No*Do._x+Io*Do._y+zo*Do._z;if(0>Bo?(this._w=-Do._w,this._x=-Do._x,this._y=-Do._y,this._z=-Do._z,Bo=-Bo):this.copy(Do),1<=Bo)return this._w=Fo,this._x=No,this._y=Io,this._z=zo,this;var Oo=Math.sqrt(1-Bo*Bo);if(1e-3>Math.abs(Oo))return this._w=0.5*(Fo+this._w),this._x=0.5*(No+this._x),this._y=0.5*(Io+this._y),this._z=0.5*(zo+this._z),this;var Go=Math.atan2(Oo,Bo),Vo=Math.sin((1-Uo)*Go)/Oo,Ho=Math.sin(Uo*Go)/Oo;return this._w=Fo*Vo+this._w*Ho,this._x=No*Vo+this._x*Ho,this._y=Io*Vo+this._y*Ho,this._z=zo*Vo+this._z*Ho,this.onChangeCallback(),this},equals:function(Do){return Do._x===this._x&&Do._y===this._y&&Do._z===this._z&&Do._w===this._w},fromArray:function(Do,Uo){return void 0===Uo&&(Uo=0),this._x=Do[Uo],this._y=Do[Uo+1],this._z=Do[Uo+2],this._w=Do[Uo+3],this.onChangeCallback(),this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this._x,Do[Uo+1]=this._y,Do[Uo+2]=this._z,Do[Uo+3]=this._w,Do},onChange:function(Do){return this.onChangeCallback=Do,this},onChangeCallback:function(){}},Object.assign(_,{slerp:function(Do,Uo,No,Io){return No.copy(Do).slerp(Uo,Io)},slerpFlat:function(Do,Uo,No,Io,zo,Fo,Bo){var Oo=No[Io+0],Go=No[Io+1],Vo=No[Io+2],Ho=No[Io+3],ko=zo[Fo+0],Wo=zo[Fo+1],Xo=zo[Fo+2],Yo=zo[Fo+3];if(Ho!==Yo||Oo!==ko||Go!==Wo||Vo!==Xo){var jo=1-Bo,qo=Oo*ko+Go*Wo+Vo*Xo+Ho*Yo,Zo=0<=qo?1:-1,Qo=1-qo*qo;if(Qo>Number.EPSILON){var Jo=Math.sqrt(Qo),Ko=Math.atan2(Jo,qo*Zo);jo=Math.sin(jo*Ko)/Jo,Bo=Math.sin(Bo*Ko)/Jo}var $o=Bo*Zo;if(Oo=Oo*jo+ko*$o,Go=Go*jo+Wo*$o,Vo=Vo*jo+Xo*$o,Ho=Ho*jo+Yo*$o,jo===1-Bo){var es=1/Math.sqrt(Oo*Oo+Go*Go+Vo*Vo+Ho*Ho);Oo*=es,Go*=es,Vo*=es,Ho*=es}}Do[Uo]=Oo,Do[Uo+1]=Go,Do[Uo+2]=Vo,Do[Uo+3]=Ho}}),E.prototype={constructor:E,isVector3:!0,set:function(Do,Uo,No){return this.x=Do,this.y=Uo,this.z=No,this},setScalar:function(Do){return this.x=Do,this.y=Do,this.z=Do,this},setX:function(Do){return this.x=Do,this},setY:function(Do){return this.y=Do,this},setZ:function(Do){return this.z=Do,this},setComponent:function(Do,Uo){switch(Do){case 0:this.x=Uo;break;case 1:this.y=Uo;break;case 2:this.z=Uo;break;default:throw new Error('index is out of range: '+Do);}return this},getComponent:function(Do){switch(Do){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+Do);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(Do){return this.x=Do.x,this.y=Do.y,this.z=Do.z,this},add:function(Do,Uo){return void 0===Uo?(this.x+=Do.x,this.y+=Do.y,this.z+=Do.z,this):(console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(Do,Uo))},addScalar:function(Do){return this.x+=Do,this.y+=Do,this.z+=Do,this},addVectors:function(Do,Uo){return this.x=Do.x+Uo.x,this.y=Do.y+Uo.y,this.z=Do.z+Uo.z,this},addScaledVector:function(Do,Uo){return this.x+=Do.x*Uo,this.y+=Do.y*Uo,this.z+=Do.z*Uo,this},sub:function(Do,Uo){return void 0===Uo?(this.x-=Do.x,this.y-=Do.y,this.z-=Do.z,this):(console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(Do,Uo))},subScalar:function(Do){return this.x-=Do,this.y-=Do,this.z-=Do,this},subVectors:function(Do,Uo){return this.x=Do.x-Uo.x,this.y=Do.y-Uo.y,this.z=Do.z-Uo.z,this},multiply:function(Do,Uo){return void 0===Uo?(this.x*=Do.x,this.y*=Do.y,this.z*=Do.z,this):(console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'),this.multiplyVectors(Do,Uo))},multiplyScalar:function(Do){return isFinite(Do)?(this.x*=Do,this.y*=Do,this.z*=Do):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(Do,Uo){return this.x=Do.x*Uo.x,this.y=Do.y*Uo.y,this.z=Do.z*Uo.z,this},applyEuler:function(){var Co;return function(Uo){return!1===(Uo&&Uo.isEuler)&&console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.'),void 0===Co&&(Co=new _),this.applyQuaternion(Co.setFromEuler(Uo))}}(),applyAxisAngle:function(){var Co;return function(Uo,No){return void 0===Co&&(Co=new _),this.applyQuaternion(Co.setFromAxisAngle(Uo,No))}}(),applyMatrix3:function(Do){var Uo=this.x,No=this.y,Io=this.z,zo=Do.elements;return this.x=zo[0]*Uo+zo[3]*No+zo[6]*Io,this.y=zo[1]*Uo+zo[4]*No+zo[7]*Io,this.z=zo[2]*Uo+zo[5]*No+zo[8]*Io,this},applyMatrix4:function(Do){var Uo=this.x,No=this.y,Io=this.z,zo=Do.elements;this.x=zo[0]*Uo+zo[4]*No+zo[8]*Io+zo[12],this.y=zo[1]*Uo+zo[5]*No+zo[9]*Io+zo[13],this.z=zo[2]*Uo+zo[6]*No+zo[10]*Io+zo[14];var Fo=zo[3]*Uo+zo[7]*No+zo[11]*Io+zo[15];return this.divideScalar(Fo)},applyQuaternion:function(Do){var Uo=this.x,No=this.y,Io=this.z,zo=Do.x,Fo=Do.y,Bo=Do.z,Oo=Do.w,Go=Oo*Uo+Fo*Io-Bo*No,Vo=Oo*No+Bo*Uo-zo*Io,Ho=Oo*Io+zo*No-Fo*Uo,ko=-zo*Uo-Fo*No-Bo*Io;return this.x=Go*Oo+ko*-zo+Vo*-Bo-Ho*-Fo,this.y=Vo*Oo+ko*-Fo+Ho*-zo-Go*-Bo,this.z=Ho*Oo+ko*-Bo+Go*-Fo-Vo*-zo,this},project:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.multiplyMatrices(Uo.projectionMatrix,Co.getInverse(Uo.matrixWorld)),this.applyMatrix4(Co)}}(),unproject:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.multiplyMatrices(Uo.matrixWorld,Co.getInverse(Uo.projectionMatrix)),this.applyMatrix4(Co)}}(),transformDirection:function(Do){var Uo=this.x,No=this.y,Io=this.z,zo=Do.elements;return this.x=zo[0]*Uo+zo[4]*No+zo[8]*Io,this.y=zo[1]*Uo+zo[5]*No+zo[9]*Io,this.z=zo[2]*Uo+zo[6]*No+zo[10]*Io,this.normalize()},divide:function(Do){return this.x/=Do.x,this.y/=Do.y,this.z/=Do.z,this},divideScalar:function(Do){return this.multiplyScalar(1/Do)},min:function(Do){return this.x=Math.min(this.x,Do.x),this.y=Math.min(this.y,Do.y),this.z=Math.min(this.z,Do.z),this},max:function(Do){return this.x=Math.max(this.x,Do.x),this.y=Math.max(this.y,Do.y),this.z=Math.max(this.z,Do.z),this},clamp:function(Do,Uo){return this.x=Math.max(Do.x,Math.min(Uo.x,this.x)),this.y=Math.max(Do.y,Math.min(Uo.y,this.y)),this.z=Math.max(Do.z,Math.min(Uo.z,this.z)),this},clampScalar:function(){var Co,Do;return function(No,Io){return void 0===Co&&(Co=new E,Do=new E),Co.set(No,No,No),Do.set(Io,Io,Io),this.clamp(Co,Do)}}(),clampLength:function(Do,Uo){var No=this.length();return this.multiplyScalar(Math.max(Do,Math.min(Uo,No))/No)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(Do){return this.x*Do.x+this.y*Do.y+this.z*Do.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(Do){return this.multiplyScalar(Do/this.length())},lerp:function(Do,Uo){return this.x+=(Do.x-this.x)*Uo,this.y+=(Do.y-this.y)*Uo,this.z+=(Do.z-this.z)*Uo,this},lerpVectors:function(Do,Uo,No){return this.subVectors(Uo,Do).multiplyScalar(No).add(Do)},cross:function(Do,Uo){if(void 0!==Uo)return console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'),this.crossVectors(Do,Uo);var No=this.x,Io=this.y,zo=this.z;return this.x=Io*Do.z-zo*Do.y,this.y=zo*Do.x-No*Do.z,this.z=No*Do.y-Io*Do.x,this},crossVectors:function(Do,Uo){var No=Do.x,Io=Do.y,zo=Do.z,Fo=Uo.x,Bo=Uo.y,Oo=Uo.z;return this.x=Io*Oo-zo*Bo,this.y=zo*Fo-No*Oo,this.z=No*Bo-Io*Fo,this},projectOnVector:function(Do){var Uo=Do.dot(this)/Do.lengthSq();return this.copy(Do).multiplyScalar(Uo)},projectOnPlane:function(){var Co;return function(Uo){return void 0===Co&&(Co=new E),Co.copy(this).projectOnVector(Uo),this.sub(Co)}}(),reflect:function(){var Co;return function(Uo){return void 0===Co&&(Co=new E),this.sub(Co.copy(Uo).multiplyScalar(2*this.dot(Uo)))}}(),angleTo:function(Do){var Uo=this.dot(Do)/Math.sqrt(this.lengthSq()*Do.lengthSq());return Math.acos(pi.clamp(Uo,-1,1))},distanceTo:function(Do){return Math.sqrt(this.distanceToSquared(Do))},distanceToSquared:function(Do){var Uo=this.x-Do.x,No=this.y-Do.y,Io=this.z-Do.z;return Uo*Uo+No*No+Io*Io},distanceToManhattan:function(Do){return Math.abs(this.x-Do.x)+Math.abs(this.y-Do.y)+Math.abs(this.z-Do.z)},setFromSpherical:function(Do){var Uo=Math.sin(Do.phi)*Do.radius;return this.x=Uo*Math.sin(Do.theta),this.y=Math.cos(Do.phi)*Do.radius,this.z=Uo*Math.cos(Do.theta),this},setFromCylindrical:function(Do){return this.x=Do.radius*Math.sin(Do.theta),this.y=Do.y,this.z=Do.radius*Math.cos(Do.theta),this},setFromMatrixPosition:function(Do){return this.setFromMatrixColumn(Do,3)},setFromMatrixScale:function(Do){var Uo=this.setFromMatrixColumn(Do,0).length(),No=this.setFromMatrixColumn(Do,1).length(),Io=this.setFromMatrixColumn(Do,2).length();return this.x=Uo,this.y=No,this.z=Io,this},setFromMatrixColumn:function(Do,Uo){if('number'===typeof Do){console.warn('THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).');var No=Do;Do=Uo,Uo=No}return this.fromArray(Do.elements,4*Uo)},equals:function(Do){return Do.x===this.x&&Do.y===this.y&&Do.z===this.z},fromArray:function(Do,Uo){return void 0===Uo&&(Uo=0),this.x=Do[Uo],this.y=Do[Uo+1],this.z=Do[Uo+2],this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this.x,Do[Uo+1]=this.y,Do[Uo+2]=this.z,Do},fromBufferAttribute:function(Do,Uo,No){return void 0!==No&&console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().'),this.x=Do.getX(Uo),this.y=Do.getY(Uo),this.z=Do.getZ(Uo),this}},S.prototype={constructor:S,isMatrix4:!0,set:function(Do,Uo,No,Io,zo,Fo,Bo,Oo,Go,Vo,Ho,ko,Wo,Xo,Yo,jo){var qo=this.elements;return qo[0]=Do,qo[4]=Uo,qo[8]=No,qo[12]=Io,qo[1]=zo,qo[5]=Fo,qo[9]=Bo,qo[13]=Oo,qo[2]=Go,qo[6]=Vo,qo[10]=Ho,qo[14]=ko,qo[3]=Wo,qo[7]=Xo,qo[11]=Yo,qo[15]=jo,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new S().fromArray(this.elements)},copy:function(Do){return this.elements.set(Do.elements),this},copyPosition:function(Do){var Uo=this.elements,No=Do.elements;return Uo[12]=No[12],Uo[13]=No[13],Uo[14]=No[14],this},extractBasis:function(Do,Uo,No){return Do.setFromMatrixColumn(this,0),Uo.setFromMatrixColumn(this,1),No.setFromMatrixColumn(this,2),this},makeBasis:function(Do,Uo,No){return this.set(Do.x,Uo.x,No.x,0,Do.y,Uo.y,No.y,0,Do.z,Uo.z,No.z,0,0,0,0,1),this},extractRotation:function(){var Co;return function(Uo){void 0===Co&&(Co=new E);var No=this.elements,Io=Uo.elements,zo=1/Co.setFromMatrixColumn(Uo,0).length(),Fo=1/Co.setFromMatrixColumn(Uo,1).length(),Bo=1/Co.setFromMatrixColumn(Uo,2).length();return No[0]=Io[0]*zo,No[1]=Io[1]*zo,No[2]=Io[2]*zo,No[4]=Io[4]*Fo,No[5]=Io[5]*Fo,No[6]=Io[6]*Fo,No[8]=Io[8]*Bo,No[9]=Io[9]*Bo,No[10]=Io[10]*Bo,this}}(),makeRotationFromEuler:function(Do){!1===(Do&&Do.isEuler)&&console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');var Uo=this.elements,No=Do.x,Io=Do.y,zo=Do.z,Fo=Math.cos(No),Bo=Math.sin(No),Oo=Math.cos(Io),Go=Math.sin(Io),Vo=Math.cos(zo),Ho=Math.sin(zo);if('XYZ'===Do.order){var ko=Fo*Vo,Wo=Fo*Ho,Xo=Bo*Vo,Yo=Bo*Ho;Uo[0]=Oo*Vo,Uo[4]=-Oo*Ho,Uo[8]=Go,Uo[1]=Wo+Xo*Go,Uo[5]=ko-Yo*Go,Uo[9]=-Bo*Oo,Uo[2]=Yo-ko*Go,Uo[6]=Xo+Wo*Go,Uo[10]=Fo*Oo}else if('YXZ'===Do.order){var jo=Oo*Vo,qo=Oo*Ho,Zo=Go*Vo,Qo=Go*Ho;Uo[0]=jo+Qo*Bo,Uo[4]=Zo*Bo-qo,Uo[8]=Fo*Go,Uo[1]=Fo*Ho,Uo[5]=Fo*Vo,Uo[9]=-Bo,Uo[2]=qo*Bo-Zo,Uo[6]=Qo+jo*Bo,Uo[10]=Fo*Oo}else if('ZXY'===Do.order){var jo=Oo*Vo,qo=Oo*Ho,Zo=Go*Vo,Qo=Go*Ho;Uo[0]=jo-Qo*Bo,Uo[4]=-Fo*Ho,Uo[8]=Zo+qo*Bo,Uo[1]=qo+Zo*Bo,Uo[5]=Fo*Vo,Uo[9]=Qo-jo*Bo,Uo[2]=-Fo*Go,Uo[6]=Bo,Uo[10]=Fo*Oo}else if('ZYX'===Do.order){var ko=Fo*Vo,Wo=Fo*Ho,Xo=Bo*Vo,Yo=Bo*Ho;Uo[0]=Oo*Vo,Uo[4]=Xo*Go-Wo,Uo[8]=ko*Go+Yo,Uo[1]=Oo*Ho,Uo[5]=Yo*Go+ko,Uo[9]=Wo*Go-Xo,Uo[2]=-Go,Uo[6]=Bo*Oo,Uo[10]=Fo*Oo}else if('YZX'===Do.order){var Jo=Fo*Oo,Ko=Fo*Go,$o=Bo*Oo,es=Bo*Go;Uo[0]=Oo*Vo,Uo[4]=es-Jo*Ho,Uo[8]=$o*Ho+Ko,Uo[1]=Ho,Uo[5]=Fo*Vo,Uo[9]=-Bo*Vo,Uo[2]=-Go*Vo,Uo[6]=Ko*Ho+$o,Uo[10]=Jo-es*Ho}else if('XZY'===Do.order){var Jo=Fo*Oo,Ko=Fo*Go,$o=Bo*Oo,es=Bo*Go;Uo[0]=Oo*Vo,Uo[4]=-Ho,Uo[8]=Go*Vo,Uo[1]=Jo*Ho+es,Uo[5]=Fo*Vo,Uo[9]=Ko*Ho-$o,Uo[2]=$o*Ho-Ko,Uo[6]=Bo*Vo,Uo[10]=es*Ho+Jo}return Uo[3]=0,Uo[7]=0,Uo[11]=0,Uo[12]=0,Uo[13]=0,Uo[14]=0,Uo[15]=1,this},makeRotationFromQuaternion:function(Do){var Uo=this.elements,No=Do.x,Io=Do.y,zo=Do.z,Fo=Do.w,Bo=No+No,Oo=Io+Io,Go=zo+zo,Vo=No*Bo,Ho=No*Oo,ko=No*Go,Wo=Io*Oo,Xo=Io*Go,Yo=zo*Go,jo=Fo*Bo,qo=Fo*Oo,Zo=Fo*Go;return Uo[0]=1-(Wo+Yo),Uo[4]=Ho-Zo,Uo[8]=ko+qo,Uo[1]=Ho+Zo,Uo[5]=1-(Vo+Yo),Uo[9]=Xo-jo,Uo[2]=ko-qo,Uo[6]=Xo+jo,Uo[10]=1-(Vo+Wo),Uo[3]=0,Uo[7]=0,Uo[11]=0,Uo[12]=0,Uo[13]=0,Uo[14]=0,Uo[15]=1,this},lookAt:function(){var Co,Do,Uo;return function(Io,zo,Fo){void 0===Co&&(Co=new E,Do=new E,Uo=new E);var Bo=this.elements;return Uo.subVectors(Io,zo).normalize(),0===Uo.lengthSq()&&(Uo.z=1),Co.crossVectors(Fo,Uo).normalize(),0===Co.lengthSq()&&(Uo.z+=1e-4,Co.crossVectors(Fo,Uo).normalize()),Do.crossVectors(Uo,Co),Bo[0]=Co.x,Bo[4]=Do.x,Bo[8]=Uo.x,Bo[1]=Co.y,Bo[5]=Do.y,Bo[9]=Uo.y,Bo[2]=Co.z,Bo[6]=Do.z,Bo[10]=Uo.z,this}}(),multiply:function(Do,Uo){return void 0===Uo?this.multiplyMatrices(this,Do):(console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.'),this.multiplyMatrices(Do,Uo))},premultiply:function(Do){return this.multiplyMatrices(Do,this)},multiplyMatrices:function(Do,Uo){var No=Do.elements,Io=Uo.elements,zo=this.elements,Fo=No[0],Bo=No[4],Oo=No[8],Go=No[12],Vo=No[1],Ho=No[5],ko=No[9],Wo=No[13],Xo=No[2],Yo=No[6],jo=No[10],qo=No[14],Zo=No[3],Qo=No[7],Jo=No[11],Ko=No[15],$o=Io[0],es=Io[4],ts=Io[8],rs=Io[12],as=Io[1],is=Io[5],ns=Io[9],os=Io[13],ss=Io[2],ls=Io[6],ds=Io[10],cs=Io[14],ps=Io[3],us=Io[7],ms=Io[11],fs=Io[15];return zo[0]=Fo*$o+Bo*as+Oo*ss+Go*ps,zo[4]=Fo*es+Bo*is+Oo*ls+Go*us,zo[8]=Fo*ts+Bo*ns+Oo*ds+Go*ms,zo[12]=Fo*rs+Bo*os+Oo*cs+Go*fs,zo[1]=Vo*$o+Ho*as+ko*ss+Wo*ps,zo[5]=Vo*es+Ho*is+ko*ls+Wo*us,zo[9]=Vo*ts+Ho*ns+ko*ds+Wo*ms,zo[13]=Vo*rs+Ho*os+ko*cs+Wo*fs,zo[2]=Xo*$o+Yo*as+jo*ss+qo*ps,zo[6]=Xo*es+Yo*is+jo*ls+qo*us,zo[10]=Xo*ts+Yo*ns+jo*ds+qo*ms,zo[14]=Xo*rs+Yo*os+jo*cs+qo*fs,zo[3]=Zo*$o+Qo*as+Jo*ss+Ko*ps,zo[7]=Zo*es+Qo*is+Jo*ls+Ko*us,zo[11]=Zo*ts+Qo*ns+Jo*ds+Ko*ms,zo[15]=Zo*rs+Qo*os+Jo*cs+Ko*fs,this},multiplyToArray:function(Do,Uo,No){var Io=this.elements;return this.multiplyMatrices(Do,Uo),No[0]=Io[0],No[1]=Io[1],No[2]=Io[2],No[3]=Io[3],No[4]=Io[4],No[5]=Io[5],No[6]=Io[6],No[7]=Io[7],No[8]=Io[8],No[9]=Io[9],No[10]=Io[10],No[11]=Io[11],No[12]=Io[12],No[13]=Io[13],No[14]=Io[14],No[15]=Io[15],this},multiplyScalar:function(Do){var Uo=this.elements;return Uo[0]*=Do,Uo[4]*=Do,Uo[8]*=Do,Uo[12]*=Do,Uo[1]*=Do,Uo[5]*=Do,Uo[9]*=Do,Uo[13]*=Do,Uo[2]*=Do,Uo[6]*=Do,Uo[10]*=Do,Uo[14]*=Do,Uo[3]*=Do,Uo[7]*=Do,Uo[11]*=Do,Uo[15]*=Do,this},applyToBufferAttribute:function(){var Co;return function(Uo){Co===void 0&&(Co=new E);for(var No=0,Io=Uo.count;No<Io;No++)Co.x=Uo.getX(No),Co.y=Uo.getY(No),Co.z=Uo.getZ(No),Co.applyMatrix4(this),Uo.setXYZ(No,Co.x,Co.y,Co.z);return Uo}}(),determinant:function(){var Do=this.elements,Uo=Do[0],No=Do[4],Io=Do[8],zo=Do[12],Fo=Do[1],Bo=Do[5],Oo=Do[9],Go=Do[13],Vo=Do[2],Ho=Do[6],ko=Do[10],Wo=Do[14],Xo=Do[3],Yo=Do[7],jo=Do[11],qo=Do[15];return Xo*(+zo*Oo*Ho-Io*Go*Ho-zo*Bo*ko+No*Go*ko+Io*Bo*Wo-No*Oo*Wo)+Yo*(+Uo*Oo*Wo-Uo*Go*ko+zo*Fo*ko-Io*Fo*Wo+Io*Go*Vo-zo*Oo*Vo)+jo*(+Uo*Go*Ho-Uo*Bo*Wo-zo*Fo*Ho+No*Fo*Wo+zo*Bo*Vo-No*Go*Vo)+qo*(-Io*Bo*Vo-Uo*Oo*Ho+Uo*Bo*ko+Io*Fo*Ho-No*Fo*ko+No*Oo*Vo)},transpose:function(){var Do=this.elements,Uo;return Uo=Do[1],Do[1]=Do[4],Do[4]=Uo,Uo=Do[2],Do[2]=Do[8],Do[8]=Uo,Uo=Do[6],Do[6]=Do[9],Do[9]=Uo,Uo=Do[3],Do[3]=Do[12],Do[12]=Uo,Uo=Do[7],Do[7]=Do[13],Do[13]=Uo,Uo=Do[11],Do[11]=Do[14],Do[14]=Uo,this},setPosition:function(Do){var Uo=this.elements;return Uo[12]=Do.x,Uo[13]=Do.y,Uo[14]=Do.z,this},getInverse:function(Do,Uo){var No=this.elements,Io=Do.elements,zo=Io[0],Fo=Io[1],Bo=Io[2],Oo=Io[3],Go=Io[4],Vo=Io[5],Ho=Io[6],ko=Io[7],Wo=Io[8],Xo=Io[9],Yo=Io[10],jo=Io[11],qo=Io[12],Zo=Io[13],Qo=Io[14],Jo=Io[15],Ko=Xo*Qo*ko-Zo*Yo*ko+Zo*Ho*jo-Vo*Qo*jo-Xo*Ho*Jo+Vo*Yo*Jo,$o=qo*Yo*ko-Wo*Qo*ko-qo*Ho*jo+Go*Qo*jo+Wo*Ho*Jo-Go*Yo*Jo,es=Wo*Zo*ko-qo*Xo*ko+qo*Vo*jo-Go*Zo*jo-Wo*Vo*Jo+Go*Xo*Jo,ts=qo*Xo*Ho-Wo*Zo*Ho-qo*Vo*Yo+Go*Zo*Yo+Wo*Vo*Qo-Go*Xo*Qo,rs=zo*Ko+Fo*$o+Bo*es+Oo*ts;if(0===rs){var as='THREE.Matrix4.getInverse(): can\'t invert matrix, determinant is 0';if(!0===Uo)throw new Error(as);else console.warn(as);return this.identity()}var is=1/rs;return No[0]=Ko*is,No[1]=(Zo*Yo*Oo-Xo*Qo*Oo-Zo*Bo*jo+Fo*Qo*jo+Xo*Bo*Jo-Fo*Yo*Jo)*is,No[2]=(Vo*Qo*Oo-Zo*Ho*Oo+Zo*Bo*ko-Fo*Qo*ko-Vo*Bo*Jo+Fo*Ho*Jo)*is,No[3]=(Xo*Ho*Oo-Vo*Yo*Oo-Xo*Bo*ko+Fo*Yo*ko+Vo*Bo*jo-Fo*Ho*jo)*is,No[4]=$o*is,No[5]=(Wo*Qo*Oo-qo*Yo*Oo+qo*Bo*jo-zo*Qo*jo-Wo*Bo*Jo+zo*Yo*Jo)*is,No[6]=(qo*Ho*Oo-Go*Qo*Oo-qo*Bo*ko+zo*Qo*ko+Go*Bo*Jo-zo*Ho*Jo)*is,No[7]=(Go*Yo*Oo-Wo*Ho*Oo+Wo*Bo*ko-zo*Yo*ko-Go*Bo*jo+zo*Ho*jo)*is,No[8]=es*is,No[9]=(qo*Xo*Oo-Wo*Zo*Oo-qo*Fo*jo+zo*Zo*jo+Wo*Fo*Jo-zo*Xo*Jo)*is,No[10]=(Go*Zo*Oo-qo*Vo*Oo+qo*Fo*ko-zo*Zo*ko-Go*Fo*Jo+zo*Vo*Jo)*is,No[11]=(Wo*Vo*Oo-Go*Xo*Oo-Wo*Fo*ko+zo*Xo*ko+Go*Fo*jo-zo*Vo*jo)*is,No[12]=ts*is,No[13]=(Wo*Zo*Bo-qo*Xo*Bo+qo*Fo*Yo-zo*Zo*Yo-Wo*Fo*Qo+zo*Xo*Qo)*is,No[14]=(qo*Vo*Bo-Go*Zo*Bo-qo*Fo*Ho+zo*Zo*Ho+Go*Fo*Qo-zo*Vo*Qo)*is,No[15]=(Go*Xo*Bo-Wo*Vo*Bo+Wo*Fo*Ho-zo*Xo*Ho-Go*Fo*Yo+zo*Vo*Yo)*is,this},scale:function(Do){var Uo=this.elements,No=Do.x,Io=Do.y,zo=Do.z;return Uo[0]*=No,Uo[4]*=Io,Uo[8]*=zo,Uo[1]*=No,Uo[5]*=Io,Uo[9]*=zo,Uo[2]*=No,Uo[6]*=Io,Uo[10]*=zo,Uo[3]*=No,Uo[7]*=Io,Uo[11]*=zo,this},getMaxScaleOnAxis:function(){var Do=this.elements,Uo=Do[0]*Do[0]+Do[1]*Do[1]+Do[2]*Do[2],No=Do[4]*Do[4]+Do[5]*Do[5]+Do[6]*Do[6],Io=Do[8]*Do[8]+Do[9]*Do[9]+Do[10]*Do[10];return Math.sqrt(Math.max(Uo,No,Io))},makeTranslation:function(Do,Uo,No){return this.set(1,0,0,Do,0,1,0,Uo,0,0,1,No,0,0,0,1),this},makeRotationX:function(Do){var Uo=Math.cos(Do),No=Math.sin(Do);return this.set(1,0,0,0,0,Uo,-No,0,0,No,Uo,0,0,0,0,1),this},makeRotationY:function(Do){var Uo=Math.cos(Do),No=Math.sin(Do);return this.set(Uo,0,No,0,0,1,0,0,-No,0,Uo,0,0,0,0,1),this},makeRotationZ:function(Do){var Uo=Math.cos(Do),No=Math.sin(Do);return this.set(Uo,-No,0,0,No,Uo,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(Do,Uo){var No=Math.cos(Uo),Io=Math.sin(Uo),zo=1-No,Fo=Do.x,Bo=Do.y,Oo=Do.z,Go=zo*Fo,Vo=zo*Bo;return this.set(Go*Fo+No,Go*Bo-Io*Oo,Go*Oo+Io*Bo,0,Go*Bo+Io*Oo,Vo*Bo+No,Vo*Oo-Io*Fo,0,Go*Oo-Io*Bo,Vo*Oo+Io*Fo,zo*Oo*Oo+No,0,0,0,0,1),this},makeScale:function(Do,Uo,No){return this.set(Do,0,0,0,0,Uo,0,0,0,0,No,0,0,0,0,1),this},makeShear:function(Do,Uo,No){return this.set(1,Uo,No,0,Do,1,No,0,Do,Uo,1,0,0,0,0,1),this},compose:function(Do,Uo,No){return this.makeRotationFromQuaternion(Uo),this.scale(No),this.setPosition(Do),this},decompose:function(){var Co,Do;return function(No,Io,zo){void 0===Co&&(Co=new E,Do=new S);var Fo=this.elements,Bo=Co.set(Fo[0],Fo[1],Fo[2]).length(),Oo=Co.set(Fo[4],Fo[5],Fo[6]).length(),Go=Co.set(Fo[8],Fo[9],Fo[10]).length(),Vo=this.determinant();0>Vo&&(Bo=-Bo),No.x=Fo[12],No.y=Fo[13],No.z=Fo[14],Do.elements.set(this.elements);var Ho=1/Bo,ko=1/Oo,Wo=1/Go;return Do.elements[0]*=Ho,Do.elements[1]*=Ho,Do.elements[2]*=Ho,Do.elements[4]*=ko,Do.elements[5]*=ko,Do.elements[6]*=ko,Do.elements[8]*=Wo,Do.elements[9]*=Wo,Do.elements[10]*=Wo,Io.setFromRotationMatrix(Do),zo.x=Bo,zo.y=Oo,zo.z=Go,this}}(),makePerspective:function(Do,Uo,No,Io,zo,Fo){void 0===Fo&&console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');var Bo=this.elements;return Bo[0]=2*zo/(Uo-Do),Bo[4]=0,Bo[8]=(Uo+Do)/(Uo-Do),Bo[12]=0,Bo[1]=0,Bo[5]=2*zo/(No-Io),Bo[9]=(No+Io)/(No-Io),Bo[13]=0,Bo[2]=0,Bo[6]=0,Bo[10]=-(Fo+zo)/(Fo-zo),Bo[14]=-2*Fo*zo/(Fo-zo),Bo[3]=0,Bo[7]=0,Bo[11]=-1,Bo[15]=0,this},makeOrthographic:function(Do,Uo,No,Io,zo,Fo){var Bo=this.elements,Oo=1/(Uo-Do),Go=1/(No-Io),Vo=1/(Fo-zo);return Bo[0]=2*Oo,Bo[4]=0,Bo[8]=0,Bo[12]=-((Uo+Do)*Oo),Bo[1]=0,Bo[5]=2*Go,Bo[9]=0,Bo[13]=-((No+Io)*Go),Bo[2]=0,Bo[6]=0,Bo[10]=-2*Vo,Bo[14]=-((Fo+zo)*Vo),Bo[3]=0,Bo[7]=0,Bo[11]=0,Bo[15]=1,this},equals:function(Do){for(var Uo=this.elements,No=Do.elements,Io=0;16>Io;Io++)if(Uo[Io]!==No[Io])return!1;return!0},fromArray:function(Do,Uo){Uo===void 0&&(Uo=0);for(var No=0;16>No;No++)this.elements[No]=Do[No+Uo];return this},toArray:function(Do,Uo){void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0);var No=this.elements;return Do[Uo]=No[0],Do[Uo+1]=No[1],Do[Uo+2]=No[2],Do[Uo+3]=No[3],Do[Uo+4]=No[4],Do[Uo+5]=No[5],Do[Uo+6]=No[6],Do[Uo+7]=No[7],Do[Uo+8]=No[8],Do[Uo+9]=No[9],Do[Uo+10]=No[10],Do[Uo+11]=No[11],Do[Uo+12]=No[12],Do[Uo+13]=No[13],Do[Uo+14]=No[14],Do[Uo+15]=No[15],Do}},M.prototype={addEventListener:function(Do,Uo){this._listeners===void 0&&(this._listeners={});var No=this._listeners;No[Do]===void 0&&(No[Do]=[]),-1===No[Do].indexOf(Uo)&&No[Do].push(Uo)},hasEventListener:function(Do,Uo){if(this._listeners===void 0)return!1;var No=this._listeners;return No[Do]!==void 0&&-1!==No[Do].indexOf(Uo)},removeEventListener:function(Do,Uo){if(void 0!==this._listeners){var No=this._listeners,Io=No[Do];if(void 0!==Io){var zo=Io.indexOf(Uo);-1!==zo&&Io.splice(zo,1)}}},dispatchEvent:function(Do){if(void 0!==this._listeners){var Uo=this._listeners,No=Uo[Do.type];if(void 0!==No){Do.target=this;var Io=[],zo=0,Fo=No.length;for(zo=0;zo<Fo;zo++)Io[zo]=No[zo];for(zo=0;zo<Fo;zo++)Io[zo].call(this,Do)}}}},T.prototype={constructor:T,isVector2:!0,get width(){return this.x},set width(Co){this.x=Co},get height(){return this.y},set height(Co){this.y=Co},set:function(Do,Uo){return this.x=Do,this.y=Uo,this},setScalar:function(Do){return this.x=Do,this.y=Do,this},setX:function(Do){return this.x=Do,this},setY:function(Do){return this.y=Do,this},setComponent:function(Do,Uo){switch(Do){case 0:this.x=Uo;break;case 1:this.y=Uo;break;default:throw new Error('index is out of range: '+Do);}return this},getComponent:function(Do){switch(Do){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+Do);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(Do){return this.x=Do.x,this.y=Do.y,this},add:function(Do,Uo){return void 0===Uo?(this.x+=Do.x,this.y+=Do.y,this):(console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(Do,Uo))},addScalar:function(Do){return this.x+=Do,this.y+=Do,this},addVectors:function(Do,Uo){return this.x=Do.x+Uo.x,this.y=Do.y+Uo.y,this},addScaledVector:function(Do,Uo){return this.x+=Do.x*Uo,this.y+=Do.y*Uo,this},sub:function(Do,Uo){return void 0===Uo?(this.x-=Do.x,this.y-=Do.y,this):(console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(Do,Uo))},subScalar:function(Do){return this.x-=Do,this.y-=Do,this},subVectors:function(Do,Uo){return this.x=Do.x-Uo.x,this.y=Do.y-Uo.y,this},multiply:function(Do){return this.x*=Do.x,this.y*=Do.y,this},multiplyScalar:function(Do){return isFinite(Do)?(this.x*=Do,this.y*=Do):(this.x=0,this.y=0),this},divide:function(Do){return this.x/=Do.x,this.y/=Do.y,this},divideScalar:function(Do){return this.multiplyScalar(1/Do)},min:function(Do){return this.x=Math.min(this.x,Do.x),this.y=Math.min(this.y,Do.y),this},max:function(Do){return this.x=Math.max(this.x,Do.x),this.y=Math.max(this.y,Do.y),this},clamp:function(Do,Uo){return this.x=Math.max(Do.x,Math.min(Uo.x,this.x)),this.y=Math.max(Do.y,Math.min(Uo.y,this.y)),this},clampScalar:function(){var Co,Do;return function(No,Io){return void 0===Co&&(Co=new T,Do=new T),Co.set(No,No),Do.set(Io,Io),this.clamp(Co,Do)}}(),clampLength:function(Do,Uo){var No=this.length();return this.multiplyScalar(Math.max(Do,Math.min(Uo,No))/No)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(Do){return this.x*Do.x+this.y*Do.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var Co=Math.atan2(this.y,this.x);return 0>Co&&(Co+=2*Math.PI),Co},distanceTo:function(Do){return Math.sqrt(this.distanceToSquared(Do))},distanceToSquared:function(Do){var Uo=this.x-Do.x,No=this.y-Do.y;return Uo*Uo+No*No},distanceToManhattan:function(Do){return Math.abs(this.x-Do.x)+Math.abs(this.y-Do.y)},setLength:function(Do){return this.multiplyScalar(Do/this.length())},lerp:function(Do,Uo){return this.x+=(Do.x-this.x)*Uo,this.y+=(Do.y-this.y)*Uo,this},lerpVectors:function(Do,Uo,No){return this.subVectors(Uo,Do).multiplyScalar(No).add(Do)},equals:function(Do){return Do.x===this.x&&Do.y===this.y},fromArray:function(Do,Uo){return void 0===Uo&&(Uo=0),this.x=Do[Uo],this.y=Do[Uo+1],this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this.x,Do[Uo+1]=this.y,Do},fromBufferAttribute:function(Do,Uo,No){return void 0!==No&&console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().'),this.x=Do.getX(Uo),this.y=Do.getY(Uo),this},rotateAround:function(Do,Uo){var No=Math.cos(Uo),Io=Math.sin(Uo),zo=this.x-Do.x,Fo=this.y-Do.y;return this.x=zo*No-Fo*Io+Do.x,this.y=zo*Io+Fo*No+Do.y,this}};var ui=0;L.DEFAULT_IMAGE=void 0,L.DEFAULT_MAPPING=Qr,L.prototype={constructor:L,isTexture:!0,set needsUpdate(Co){!0===Co&&this.version++},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.image=Do.image,this.mipmaps=Do.mipmaps.slice(0),this.mapping=Do.mapping,this.wrapS=Do.wrapS,this.wrapT=Do.wrapT,this.magFilter=Do.magFilter,this.minFilter=Do.minFilter,this.anisotropy=Do.anisotropy,this.format=Do.format,this.type=Do.type,this.offset.copy(Do.offset),this.repeat.copy(Do.repeat),this.generateMipmaps=Do.generateMipmaps,this.premultiplyAlpha=Do.premultiplyAlpha,this.flipY=Do.flipY,this.unpackAlignment=Do.unpackAlignment,this.encoding=Do.encoding,this},toJSON:function(Do){function Uo(zo){var Fo;return void 0===zo.toDataURL?(Fo=document.createElementNS('http://www.w3.org/1999/xhtml','canvas'),Fo.width=zo.width,Fo.height=zo.height,Fo.getContext('2d').drawImage(zo,0,0,zo.width,zo.height)):Fo=zo,2048<Fo.width||2048<Fo.height?Fo.toDataURL('image/jpeg',0.6):Fo.toDataURL('image/png')}if(void 0!==Do.textures[this.uuid])return Do.textures[this.uuid];var No={metadata:{version:4.4,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var Io=this.image;void 0===Io.uuid&&(Io.uuid=pi.generateUUID()),void 0===Do.images[Io.uuid]&&(Do.images[Io.uuid]={uuid:Io.uuid,url:Uo(Io)}),No.image=Io.uuid}return Do.textures[this.uuid]=No,No},dispose:function(){this.dispatchEvent({type:'dispose'})},transformUv:function(Do){if(this.mapping===Qr){if(Do.multiply(this.repeat),Do.add(this.offset),0>Do.x||1<Do.x)switch(this.wrapS){case ia:Do.x-=Math.floor(Do.x);break;case na:Do.x=0>Do.x?0:1;break;case oa:1===Math.abs(Math.floor(Do.x)%2)?Do.x=Math.ceil(Do.x)-Do.x:Do.x-=Math.floor(Do.x);}if(0>Do.y||1<Do.y)switch(this.wrapT){case ia:Do.y-=Math.floor(Do.y);break;case na:Do.y=0>Do.y?0:1;break;case oa:1===Math.abs(Math.floor(Do.y)%2)?Do.y=Math.ceil(Do.y)-Do.y:Do.y-=Math.floor(Do.y);}this.flipY&&(Do.y=1-Do.y)}}},Object.assign(L.prototype,M.prototype),A.prototype=Object.create(L.prototype),A.prototype.constructor=A,A.prototype.isCubeTexture=!0,Object.defineProperty(A.prototype,'images',{get:function(){return this.image},set:function(Do){this.image=Do}});var mi=new L,fi=new A,gi=[],hi=[];fe.prototype.setValue=function(Co,Do){for(var Uo=this.seq,No=0,Io=Uo.length,zo;No!==Io;++No)zo=Uo[No],zo.setValue(Co,Do[zo.id])};var xi=/([\w\d_]+)(\])?(\[|\.)?/g;xe.prototype.setValue=function(Co,Do,Uo){var No=this.map[Do];No!==void 0&&No.setValue(Co,Uo,this.renderer)},xe.prototype.set=function(Co,Do,Uo){var No=this.map[Uo];No!==void 0&&No.setValue(Co,Do[Uo],this.renderer)},xe.prototype.setOptional=function(Co,Do,Uo){var No=Do[Uo];No!==void 0&&this.setValue(Co,Uo,No)},xe.upload=function(Co,Do,Uo,No){for(var Io=0,zo=Do.length;Io!==zo;++Io){var Fo=Do[Io],Bo=Uo[Fo.id];!1!==Bo.needsUpdate&&Fo.setValue(Co,Bo.value,No)}},xe.seqWithValue=function(Co,Do){for(var Uo=[],No=0,Io=Co.length,zo;No!==Io;++No)zo=Co[No],zo.id in Do&&Uo.push(zo);return Uo};var _i={merge:function(Do){for(var Uo={},No=0,Io;No<Do.length;No++)for(var zo in Io=this.clone(Do[No]),Io)Uo[zo]=Io[zo];return Uo},clone:function(Do){var Uo={};for(var No in Do)for(var Io in Uo[No]={},Do[No]){var zo=Do[No][Io];Uo[No][Io]=zo&&(zo.isColor||zo.isMatrix3||zo.isMatrix4||zo.isVector2||zo.isVector3||zo.isVector4||zo.isTexture)?zo.clone():Array.isArray(zo)?zo.slice():zo}return Uo}},Eo={alphamap_fragment:'#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n',alphamap_pars_fragment:'#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n',alphatest_fragment:'#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n',aomap_fragment:'#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n',aomap_pars_fragment:'#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',begin_vertex:'\nvec3 transformed = vec3( position );\n',beginnormal_vertex:'\nvec3 objectNormal = vec3( normal );\n',bsdfs:'float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\n\tint config = 0;\n\tif ( L[0].z > 0.0 ) config += 1;\n\tif ( L[1].z > 0.0 ) config += 2;\n\tif ( L[2].z > 0.0 ) config += 4;\n\tif ( L[3].z > 0.0 ) config += 8;\n\tn = 0;\n\tif ( config == 0 ) {\n\t} else if ( config == 1 ) {\n\t\tn = 3;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 2 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 3 ) {\n\t\tn = 4;\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 4 ) {\n\t\tn = 3;\n\t\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t} else if ( config == 5 ) {\n\t\tn = 0;\n\t} else if ( config == 6 ) {\n\t\tn = 4;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 7 ) {\n\t\tn = 5;\n\t\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 8 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] =  L[3];\n\t} else if ( config == 9 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\n\t} else if ( config == 10 ) {\n\t\tn = 0;\n\t} else if ( config == 11 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 12 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t} else if ( config == 13 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = L[2];\n\t\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t} else if ( config == 14 ) {\n\t\tn = 5;\n\t\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t} else if ( config == 15 ) {\n\t\tn = 4;\n\t}\n\tif ( n == 3 )\n\t\tL[3] = L[0];\n\tif ( n == 4 )\n\t\tL[4] = L[0];\n}\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\n\tfloat cosTheta = dot( v1, v2 );\n\tfloat theta = acos( cosTheta );\n\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\n\treturn res;\n}\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\n\trectPoints[0] = pos - halfWidth - halfHeight;\n\trectPoints[1] = pos + halfWidth - halfHeight;\n\trectPoints[2] = pos + halfWidth + halfHeight;\n\trectPoints[3] = pos - halfWidth + halfHeight;\n}\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tvec3 T1, T2;\n\tT1 = normalize(V - N * dot( V, N ));\n\tT2 = - cross( N, T1 );\n\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\n\tvec3 clippedRect[5];\n\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\n\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\n\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\n\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\n\tint n;\n\tclipQuadToHorizon(clippedRect, n);\n\tif ( n == 0 )\n\t\treturn vec3( 0, 0, 0 );\n\tclippedRect[0] = normalize( clippedRect[0] );\n\tclippedRect[1] = normalize( clippedRect[1] );\n\tclippedRect[2] = normalize( clippedRect[2] );\n\tclippedRect[3] = normalize( clippedRect[3] );\n\tclippedRect[4] = normalize( clippedRect[4] );\n\tfloat sum = 0.0;\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\n\tif (n >= 4)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\n\tif (n == 5)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\n\tsum = max( 0.0, sum );\n\tvec3 Lo_i = vec3( sum, sum, sum );\n\treturn Lo_i;\n}\nvec3 Rect_Area_Light_Specular_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\n\t\tconst in float roughness,\n\t\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tvec2 uv = ltcTextureCoords( geometry, roughness );\n\tvec4 brdfLtcApproxParams, t;\n\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\n\tt = texture2D( ltcMat, uv );\n\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\n\tmat3 brdfLtcApproxMat = mat3(\n\t\tvec3(   1,   0, t.y ),\n\t\tvec3(   0, t.z,   0 ),\n\t\tvec3( t.w,   0, t.x )\n\t);\n\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\n\tspecularReflectance *= brdfLtcScalar;\n\treturn specularReflectance;\n}\nvec3 Rect_Area_Light_Diffuse_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tmat3 diffuseBrdfMat = mat3(1);\n\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\n\treturn diffuseReflectance;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',bumpmap_pars_fragment:'#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n',clipping_planes_fragment:'#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n',clipping_planes_pars_fragment:'#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n',clipping_planes_pars_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n',clipping_planes_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n',color_fragment:'#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',color_pars_fragment:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n',color_pars_vertex:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',color_vertex:'#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif',common:'#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n',cube_uv_reflection_fragment:'#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n',defaultnormal_vertex:'#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n',displacementmap_pars_vertex:'#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n',displacementmap_vertex:'#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n',emissivemap_fragment:'#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n',emissivemap_pars_fragment:'#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n',encodings_fragment:'  gl_FragColor = linearToOutputTexel( gl_FragColor );\n',encodings_pars_fragment:'\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n',envmap_fragment:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n',envmap_pars_fragment:'#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n',envmap_pars_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n',envmap_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n',fog_vertex:'\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif',fog_pars_vertex:'#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n',fog_fragment:'#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n',fog_pars_fragment:'#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n',gradientmap_pars_fragment:'#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n',lightmap_fragment:'#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n',lightmap_pars_fragment:'#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',lights_lambert_vertex:'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n',lights_pars:'uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n',lights_phong_fragment:'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n',lights_phong_pars_fragment:'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n',lights_physical_fragment:'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n',lights_physical_pars_fragment:'struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n',lights_template:'\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n',logdepthbuf_fragment:'#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif',logdepthbuf_pars_fragment:'#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n',logdepthbuf_pars_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif',logdepthbuf_vertex:'#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n',map_fragment:'#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n',map_pars_fragment:'#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n',map_particle_fragment:'#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n',map_particle_pars_fragment:'#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n',metalnessmap_fragment:'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n',metalnessmap_pars_fragment:'#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',morphnormal_vertex:'#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n',morphtarget_pars_vertex:'#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',morphtarget_vertex:'#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n',normal_flip:'#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n',normal_fragment:'#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n',normalmap_pars_fragment:'#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n',packing:'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n',premultiplied_alpha_fragment:'#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n',project_vertex:'#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n',roughnessmap_fragment:'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n',roughnessmap_pars_fragment:'#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',shadowmap_pars_fragment:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n',shadowmap_pars_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n',shadowmap_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n',shadowmask_pars_fragment:'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n',skinbase_vertex:'#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',skinning_pars_vertex:'#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n',skinning_vertex:'#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n',skinnormal_vertex:'#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n',specularmap_fragment:'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',specularmap_pars_fragment:'#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',tonemapping_fragment:'#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n',tonemapping_pars_fragment:'#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n',uv_pars_fragment:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif',uv_pars_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n',uv_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif',uv2_pars_fragment:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',uv2_pars_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif',uv2_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif',worldpos_vertex:'#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n',cube_frag:'uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n',cube_vert:'varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n',depth_frag:'#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n',depth_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n',distanceRGBA_frag:'uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n',distanceRGBA_vert:'varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n',equirect_frag:'uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n',equirect_vert:'varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n',linedashed_frag:'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',linedashed_vert:'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n',meshbasic_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshbasic_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n',meshlambert_frag:'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshlambert_vert:'#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',meshphong_frag:'#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshphong_vert:'#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',meshphysical_frag:'#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshphysical_vert:'#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',normal_frag:'#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n',normal_vert:'#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n',points_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',points_vert:'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',shadow_frag:'uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n',shadow_vert:'#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n'};_e.prototype={constructor:_e,isVector4:!0,set:function(Do,Uo,No,Io){return this.x=Do,this.y=Uo,this.z=No,this.w=Io,this},setScalar:function(Do){return this.x=Do,this.y=Do,this.z=Do,this.w=Do,this},setX:function(Do){return this.x=Do,this},setY:function(Do){return this.y=Do,this},setZ:function(Do){return this.z=Do,this},setW:function(Do){return this.w=Do,this},setComponent:function(Do,Uo){switch(Do){case 0:this.x=Uo;break;case 1:this.y=Uo;break;case 2:this.z=Uo;break;case 3:this.w=Uo;break;default:throw new Error('index is out of range: '+Do);}return this},getComponent:function(Do){switch(Do){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+Do);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(Do){return this.x=Do.x,this.y=Do.y,this.z=Do.z,this.w=void 0===Do.w?1:Do.w,this},add:function(Do,Uo){return void 0===Uo?(this.x+=Do.x,this.y+=Do.y,this.z+=Do.z,this.w+=Do.w,this):(console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(Do,Uo))},addScalar:function(Do){return this.x+=Do,this.y+=Do,this.z+=Do,this.w+=Do,this},addVectors:function(Do,Uo){return this.x=Do.x+Uo.x,this.y=Do.y+Uo.y,this.z=Do.z+Uo.z,this.w=Do.w+Uo.w,this},addScaledVector:function(Do,Uo){return this.x+=Do.x*Uo,this.y+=Do.y*Uo,this.z+=Do.z*Uo,this.w+=Do.w*Uo,this},sub:function(Do,Uo){return void 0===Uo?(this.x-=Do.x,this.y-=Do.y,this.z-=Do.z,this.w-=Do.w,this):(console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(Do,Uo))},subScalar:function(Do){return this.x-=Do,this.y-=Do,this.z-=Do,this.w-=Do,this},subVectors:function(Do,Uo){return this.x=Do.x-Uo.x,this.y=Do.y-Uo.y,this.z=Do.z-Uo.z,this.w=Do.w-Uo.w,this},multiplyScalar:function(Do){return isFinite(Do)?(this.x*=Do,this.y*=Do,this.z*=Do,this.w*=Do):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(Do){var Uo=this.x,No=this.y,Io=this.z,zo=this.w,Fo=Do.elements;return this.x=Fo[0]*Uo+Fo[4]*No+Fo[8]*Io+Fo[12]*zo,this.y=Fo[1]*Uo+Fo[5]*No+Fo[9]*Io+Fo[13]*zo,this.z=Fo[2]*Uo+Fo[6]*No+Fo[10]*Io+Fo[14]*zo,this.w=Fo[3]*Uo+Fo[7]*No+Fo[11]*Io+Fo[15]*zo,this},divideScalar:function(Do){return this.multiplyScalar(1/Do)},setAxisAngleFromQuaternion:function(Do){this.w=2*Math.acos(Do.w);var Uo=Math.sqrt(1-Do.w*Do.w);return 1e-4>Uo?(this.x=1,this.y=0,this.z=0):(this.x=Do.x/Uo,this.y=Do.y/Uo,this.z=Do.z/Uo),this},setAxisAngleFromRotationMatrix:function(Do){var Fo=0.01,Bo=0.1,Oo=Do.elements,Go=Oo[0],Vo=Oo[4],Ho=Oo[8],ko=Oo[1],Wo=Oo[5],Xo=Oo[9],Yo=Oo[2],jo=Oo[6],qo=Oo[10],Uo,No,Io,zo;if(Math.abs(Vo-ko)<Fo&&Math.abs(Ho-Yo)<Fo&&Math.abs(Xo-jo)<Fo){if(Math.abs(Vo+ko)<Bo&&Math.abs(Ho+Yo)<Bo&&Math.abs(Xo+jo)<Bo&&Math.abs(Go+Wo+qo-3)<Bo)return this.set(1,0,0,0),this;Uo=Math.PI;var Zo=(Go+1)/2,Qo=(Wo+1)/2,Jo=(qo+1)/2,Ko=(Vo+ko)/4,$o=(Ho+Yo)/4,es=(Xo+jo)/4;return Zo>Qo&&Zo>Jo?Zo<Fo?(No=0,Io=0.707106781,zo=0.707106781):(No=Math.sqrt(Zo),Io=Ko/No,zo=$o/No):Qo>Jo?Qo<Fo?(No=0.707106781,Io=0,zo=0.707106781):(Io=Math.sqrt(Qo),No=Ko/Io,zo=es/Io):Jo<Fo?(No=0.707106781,Io=0.707106781,zo=0):(zo=Math.sqrt(Jo),No=$o/zo,Io=es/zo),this.set(No,Io,zo,Uo),this}var ts=Math.sqrt((jo-Xo)*(jo-Xo)+(Ho-Yo)*(Ho-Yo)+(ko-Vo)*(ko-Vo));return 1e-3>Math.abs(ts)&&(ts=1),this.x=(jo-Xo)/ts,this.y=(Ho-Yo)/ts,this.z=(ko-Vo)/ts,this.w=Math.acos((Go+Wo+qo-1)/2),this},min:function(Do){return this.x=Math.min(this.x,Do.x),this.y=Math.min(this.y,Do.y),this.z=Math.min(this.z,Do.z),this.w=Math.min(this.w,Do.w),this},max:function(Do){return this.x=Math.max(this.x,Do.x),this.y=Math.max(this.y,Do.y),this.z=Math.max(this.z,Do.z),this.w=Math.max(this.w,Do.w),this},clamp:function(Do,Uo){return this.x=Math.max(Do.x,Math.min(Uo.x,this.x)),this.y=Math.max(Do.y,Math.min(Uo.y,this.y)),this.z=Math.max(Do.z,Math.min(Uo.z,this.z)),this.w=Math.max(Do.w,Math.min(Uo.w,this.w)),this},clampScalar:function(){var Co,Do;return function(No,Io){return void 0===Co&&(Co=new _e,Do=new _e),Co.set(No,No,No,No),Do.set(Io,Io,Io,Io),this.clamp(Co,Do)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(Do){return this.x*Do.x+this.y*Do.y+this.z*Do.z+this.w*Do.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(Do){return this.multiplyScalar(Do/this.length())},lerp:function(Do,Uo){return this.x+=(Do.x-this.x)*Uo,this.y+=(Do.y-this.y)*Uo,this.z+=(Do.z-this.z)*Uo,this.w+=(Do.w-this.w)*Uo,this},lerpVectors:function(Do,Uo,No){return this.subVectors(Uo,Do).multiplyScalar(No).add(Do)},equals:function(Do){return Do.x===this.x&&Do.y===this.y&&Do.z===this.z&&Do.w===this.w},fromArray:function(Do,Uo){return void 0===Uo&&(Uo=0),this.x=Do[Uo],this.y=Do[Uo+1],this.z=Do[Uo+2],this.w=Do[Uo+3],this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this.x,Do[Uo+1]=this.y,Do[Uo+2]=this.z,Do[Uo+3]=this.w,Do},fromBufferAttribute:function(Do,Uo,No){return void 0!==No&&console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().'),this.x=Do.getX(Uo),this.y=Do.getY(Uo),this.z=Do.getZ(Uo),this.w=Do.getW(Uo),this}},ve.prototype={constructor:ve,isColor:!0,r:1,g:1,b:1,set:function(Do){return Do&&Do.isColor?this.copy(Do):'number'===typeof Do?this.setHex(Do):'string'===typeof Do&&this.setStyle(Do),this},setScalar:function(Do){return this.r=Do,this.g=Do,this.b=Do,this},setHex:function(Do){return Do=Math.floor(Do),this.r=(255&Do>>16)/255,this.g=(255&Do>>8)/255,this.b=(255&Do)/255,this},setRGB:function(Do,Uo,No){return this.r=Do,this.g=Uo,this.b=No,this},setHSL:function(){function Co(Do,Uo,No){return 0>No&&(No+=1),1<No&&(No-=1),No<1/6?Do+6*(Uo-Do)*No:No<1/2?Uo:No<2/3?Do+6*(Uo-Do)*(2/3-No):Do}return function(Uo,No,Io){if(Uo=pi.euclideanModulo(Uo,1),No=pi.clamp(No,0,1),Io=pi.clamp(Io,0,1),0===No)this.r=this.g=this.b=Io;else{var zo=0.5>=Io?Io*(1+No):Io+No-Io*No,Fo=2*Io-zo;this.r=Co(Fo,zo,Uo+1/3),this.g=Co(Fo,zo,Uo),this.b=Co(Fo,zo,Uo-1/3)}return this}}(),setStyle:function(Do){function Uo(ko){void 0===ko||1>parseFloat(ko)&&console.warn('THREE.Color: Alpha component of '+Do+' will be ignored.')}var No;if(No=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(Do)){var Io,zo=No[1],Fo=No[2];switch(zo){case'rgb':case'rgba':if(Io=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(Fo))return this.r=Math.min(255,parseInt(Io[1],10))/255,this.g=Math.min(255,parseInt(Io[2],10))/255,this.b=Math.min(255,parseInt(Io[3],10))/255,Uo(Io[5]),this;if(Io=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(Fo))return this.r=Math.min(100,parseInt(Io[1],10))/100,this.g=Math.min(100,parseInt(Io[2],10))/100,this.b=Math.min(100,parseInt(Io[3],10))/100,Uo(Io[5]),this;break;case'hsl':case'hsla':if(Io=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(Fo)){var Bo=parseFloat(Io[1])/360,Oo=parseInt(Io[2],10)/100,Go=parseInt(Io[3],10)/100;return Uo(Io[5]),this.setHSL(Bo,Oo,Go)}}}else if(No=/^\#([A-Fa-f0-9]+)$/.exec(Do)){var Vo=No[1],Ho=Vo.length;if(3===Ho)return this.r=parseInt(Vo.charAt(0)+Vo.charAt(0),16)/255,this.g=parseInt(Vo.charAt(1)+Vo.charAt(1),16)/255,this.b=parseInt(Vo.charAt(2)+Vo.charAt(2),16)/255,this;if(6===Ho)return this.r=parseInt(Vo.charAt(0)+Vo.charAt(1),16)/255,this.g=parseInt(Vo.charAt(2)+Vo.charAt(3),16)/255,this.b=parseInt(Vo.charAt(4)+Vo.charAt(5),16)/255,this}if(Do&&0<Do.length){var Vo=bo[Do];void 0===Vo?console.warn('THREE.Color: Unknown color '+Do):this.setHex(Vo)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(Do){return this.r=Do.r,this.g=Do.g,this.b=Do.b,this},copyGammaToLinear:function(Do,Uo){return void 0===Uo&&(Uo=2),this.r=Math.pow(Do.r,Uo),this.g=Math.pow(Do.g,Uo),this.b=Math.pow(Do.b,Uo),this},copyLinearToGamma:function(Do,Uo){void 0===Uo&&(Uo=2);var No=0<Uo?1/Uo:1;return this.r=Math.pow(Do.r,No),this.g=Math.pow(Do.g,No),this.b=Math.pow(Do.b,No),this},convertGammaToLinear:function(){var Do=this.r,Uo=this.g,No=this.b;return this.r=Do*Do,this.g=Uo*Uo,this.b=No*No,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return('000000'+this.getHex().toString(16)).slice(-6)},getHSL:function(Do){var Uo=Do||{h:0,s:0,l:0},No=this.r,Io=this.g,zo=this.b,Fo=Math.max(No,Io,zo),Bo=Math.min(No,Io,zo),Vo=(Bo+Fo)/2,Oo,Go;if(Bo===Fo)Oo=0,Go=0;else{var Ho=Fo-Bo;Go=0.5>=Vo?Ho/(Fo+Bo):Ho/(2-Fo-Bo),Fo===No?Oo=(Io-zo)/Ho+(Io<zo?6:0):Fo===Io?Oo=(zo-No)/Ho+2:Fo===zo?Oo=(No-Io)/Ho+4:void 0,Oo/=6}return Uo.h=Oo,Uo.s=Go,Uo.l=Vo,Uo},getStyle:function(){return'rgb('+(0|255*this.r)+','+(0|255*this.g)+','+(0|255*this.b)+')'},offsetHSL:function(Do,Uo,No){var Io=this.getHSL();return Io.h+=Do,Io.s+=Uo,Io.l+=No,this.setHSL(Io.h,Io.s,Io.l),this},add:function(Do){return this.r+=Do.r,this.g+=Do.g,this.b+=Do.b,this},addColors:function(Do,Uo){return this.r=Do.r+Uo.r,this.g=Do.g+Uo.g,this.b=Do.b+Uo.b,this},addScalar:function(Do){return this.r+=Do,this.g+=Do,this.b+=Do,this},sub:function(Do){return this.r=Math.max(0,this.r-Do.r),this.g=Math.max(0,this.g-Do.g),this.b=Math.max(0,this.b-Do.b),this},multiply:function(Do){return this.r*=Do.r,this.g*=Do.g,this.b*=Do.b,this},multiplyScalar:function(Do){return this.r*=Do,this.g*=Do,this.b*=Do,this},lerp:function(Do,Uo){return this.r+=(Do.r-this.r)*Uo,this.g+=(Do.g-this.g)*Uo,this.b+=(Do.b-this.b)*Uo,this},equals:function(Do){return Do.r===this.r&&Do.g===this.g&&Do.b===this.b},fromArray:function(Do,Uo){return void 0===Uo&&(Uo=0),this.r=Do[Uo],this.g=Do[Uo+1],this.b=Do[Uo+2],this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this.r,Do[Uo+1]=this.g,Do[Uo+2]=this.b,Do},toJSON:function(){return this.getHex()}};var bo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},So={common:{diffuse:{value:new ve(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new _e(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:0.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new T(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5e-4},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ve(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new ve(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new _e(0,0,1,1)}}},Mo={basic:{uniforms:_i.merge([So.common,So.aomap,So.lightmap,So.fog]),vertexShader:Eo.meshbasic_vert,fragmentShader:Eo.meshbasic_frag},lambert:{uniforms:_i.merge([So.common,So.aomap,So.lightmap,So.emissivemap,So.fog,So.lights,{emissive:{value:new ve(0)}}]),vertexShader:Eo.meshlambert_vert,fragmentShader:Eo.meshlambert_frag},phong:{uniforms:_i.merge([So.common,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.gradientmap,So.fog,So.lights,{emissive:{value:new ve(0)},specular:{value:new ve(1118481)},shininess:{value:30}}]),vertexShader:Eo.meshphong_vert,fragmentShader:Eo.meshphong_frag},standard:{uniforms:_i.merge([So.common,So.aomap,So.lightmap,So.emissivemap,So.bumpmap,So.normalmap,So.displacementmap,So.roughnessmap,So.metalnessmap,So.fog,So.lights,{emissive:{value:new ve(0)},roughness:{value:0.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Eo.meshphysical_vert,fragmentShader:Eo.meshphysical_frag},points:{uniforms:_i.merge([So.points,So.fog]),vertexShader:Eo.points_vert,fragmentShader:Eo.points_frag},dashed:{uniforms:_i.merge([So.common,So.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Eo.linedashed_vert,fragmentShader:Eo.linedashed_frag},depth:{uniforms:_i.merge([So.common,So.displacementmap]),vertexShader:Eo.depth_vert,fragmentShader:Eo.depth_frag},normal:{uniforms:_i.merge([So.common,So.bumpmap,So.normalmap,So.displacementmap,{opacity:{value:1}}]),vertexShader:Eo.normal_vert,fragmentShader:Eo.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Eo.cube_vert,fragmentShader:Eo.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:Eo.equirect_vert,fragmentShader:Eo.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new E}},vertexShader:Eo.distanceRGBA_vert,fragmentShader:Eo.distanceRGBA_frag}};Mo.physical={uniforms:_i.merge([Mo.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Eo.meshphysical_vert,fragmentShader:Eo.meshphysical_frag},ye.prototype={constructor:ye,set:function(Do,Uo){return this.min.copy(Do),this.max.copy(Uo),this},setFromPoints:function(Do){this.makeEmpty();for(var Uo=0,No=Do.length;Uo<No;Uo++)this.expandByPoint(Do[Uo]);return this},setFromCenterAndSize:function(){var Co=new T;return function(Uo,No){var Io=Co.copy(No).multiplyScalar(0.5);return this.min.copy(Uo).sub(Io),this.max.copy(Uo).add(Io),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.min.copy(Do.min),this.max.copy(Do.max),this},makeEmpty:function(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(Do){var Uo=Do||new T;return this.isEmpty()?Uo.set(0,0):Uo.addVectors(this.min,this.max).multiplyScalar(0.5)},getSize:function(Do){var Uo=Do||new T;return this.isEmpty()?Uo.set(0,0):Uo.subVectors(this.max,this.min)},expandByPoint:function(Do){return this.min.min(Do),this.max.max(Do),this},expandByVector:function(Do){return this.min.sub(Do),this.max.add(Do),this},expandByScalar:function(Do){return this.min.addScalar(-Do),this.max.addScalar(Do),this},containsPoint:function(Do){return Do.x<this.min.x||Do.x>this.max.x||Do.y<this.min.y||Do.y>this.max.y?!1:!0},containsBox:function(Do){return this.min.x<=Do.min.x&&Do.max.x<=this.max.x&&this.min.y<=Do.min.y&&Do.max.y<=this.max.y},getParameter:function(Do,Uo){var No=Uo||new T;return No.set((Do.x-this.min.x)/(this.max.x-this.min.x),(Do.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(Do){return Do.max.x<this.min.x||Do.min.x>this.max.x||Do.max.y<this.min.y||Do.min.y>this.max.y?!1:!0},clampPoint:function(Do,Uo){var No=Uo||new T;return No.copy(Do).clamp(this.min,this.max)},distanceToPoint:function(){var Co=new T;return function(Uo){var No=Co.copy(Uo).clamp(this.min,this.max);return No.sub(Uo).length()}}(),intersect:function(Do){return this.min.max(Do.min),this.max.min(Do.max),this},union:function(Do){return this.min.min(Do.min),this.max.max(Do.max),this},translate:function(Do){return this.min.add(Do),this.max.add(Do),this},equals:function(Do){return Do.min.equals(this.min)&&Do.max.equals(this.max)}},Me.prototype={constructor:Me,isWebGLRenderTarget:!0,setSize:function(Do,Uo){(this.width!==Do||this.height!==Uo)&&(this.width=Do,this.height=Uo,this.dispose()),this.viewport.set(0,0,Do,Uo),this.scissor.set(0,0,Do,Uo)},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.width=Do.width,this.height=Do.height,this.viewport.copy(Do.viewport),this.texture=Do.texture.clone(),this.depthBuffer=Do.depthBuffer,this.stencilBuffer=Do.stencilBuffer,this.depthTexture=Do.depthTexture,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(Me.prototype,M.prototype);var To=0;Te.prototype={constructor:Te,isMaterial:!0,get needsUpdate(){return this._needsUpdate},set needsUpdate(Co){!0===Co&&this.update(),this._needsUpdate=Co},setValues:function(Do){if(void 0!==Do)for(var Uo in Do){var No=Do[Uo];if(void 0===No){console.warn('THREE.Material: \''+Uo+'\' parameter is undefined.');continue}var Io=this[Uo];if(void 0===Io){console.warn('THREE.'+this.type+': \''+Uo+'\' is not a property of this material.');continue}Io&&Io.isColor?Io.set(No):Io&&Io.isVector3&&No&&No.isVector3?Io.copy(No):'overdraw'===Uo?this[Uo]=+No:this[Uo]=No}},toJSON:function(Do){function Uo(Bo){var Oo=[];for(var Go in Bo){var Vo=Bo[Go];delete Vo.metadata,Oo.push(Vo)}return Oo}var No=void 0===Do;No&&(Do={textures:{},images:{}});var Io={metadata:{version:4.4,type:'Material',generator:'Material.toJSON'}};if(Io.uuid=this.uuid,Io.type=this.type,''!==this.name&&(Io.name=this.name),this.color&&this.color.isColor&&(Io.color=this.color.getHex()),void 0!==this.roughness&&(Io.roughness=this.roughness),void 0!==this.metalness&&(Io.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(Io.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(Io.specular=this.specular.getHex()),void 0!==this.shininess&&(Io.shininess=this.shininess),void 0!==this.clearCoat&&(Io.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(Io.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(Io.map=this.map.toJSON(Do).uuid),this.alphaMap&&this.alphaMap.isTexture&&(Io.alphaMap=this.alphaMap.toJSON(Do).uuid),this.lightMap&&this.lightMap.isTexture&&(Io.lightMap=this.lightMap.toJSON(Do).uuid),this.bumpMap&&this.bumpMap.isTexture&&(Io.bumpMap=this.bumpMap.toJSON(Do).uuid,Io.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(Io.normalMap=this.normalMap.toJSON(Do).uuid,Io.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(Io.displacementMap=this.displacementMap.toJSON(Do).uuid,Io.displacementScale=this.displacementScale,Io.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(Io.roughnessMap=this.roughnessMap.toJSON(Do).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(Io.metalnessMap=this.metalnessMap.toJSON(Do).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(Io.emissiveMap=this.emissiveMap.toJSON(Do).uuid),this.specularMap&&this.specularMap.isTexture&&(Io.specularMap=this.specularMap.toJSON(Do).uuid),this.envMap&&this.envMap.isTexture&&(Io.envMap=this.envMap.toJSON(Do).uuid,Io.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(Io.gradientMap=this.gradientMap.toJSON(Do).uuid),void 0!==this.size&&(Io.size=this.size),void 0!==this.sizeAttenuation&&(Io.sizeAttenuation=this.sizeAttenuation),this.blending!==mr&&(Io.blending=this.blending),this.shading!==lr&&(Io.shading=this.shading),this.side!==ir&&(Io.side=this.side),this.vertexColors!==dr&&(Io.vertexColors=this.vertexColors),1>this.opacity&&(Io.opacity=this.opacity),!0===this.transparent&&(Io.transparent=this.transparent),Io.depthFunc=this.depthFunc,Io.depthTest=this.depthTest,Io.depthWrite=this.depthWrite,0<this.alphaTest&&(Io.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(Io.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(Io.wireframe=this.wireframe),1<this.wireframeLinewidth&&(Io.wireframeLinewidth=this.wireframeLinewidth),'round'!==this.wireframeLinecap&&(Io.wireframeLinecap=this.wireframeLinecap),'round'!==this.wireframeLinejoin&&(Io.wireframeLinejoin=this.wireframeLinejoin),Io.skinning=this.skinning,Io.morphTargets=this.morphTargets,No){var zo=Uo(Do.textures),Fo=Uo(Do.images);0<zo.length&&(Io.textures=zo),0<Fo.length&&(Io.images=Fo)}return Io},clone:function(){return new this.constructor().copy(this)},copy:function(Do){this.name=Do.name,this.fog=Do.fog,this.lights=Do.lights,this.blending=Do.blending,this.side=Do.side,this.shading=Do.shading,this.vertexColors=Do.vertexColors,this.opacity=Do.opacity,this.transparent=Do.transparent,this.blendSrc=Do.blendSrc,this.blendDst=Do.blendDst,this.blendEquation=Do.blendEquation,this.blendSrcAlpha=Do.blendSrcAlpha,this.blendDstAlpha=Do.blendDstAlpha,this.blendEquationAlpha=Do.blendEquationAlpha,this.depthFunc=Do.depthFunc,this.depthTest=Do.depthTest,this.depthWrite=Do.depthWrite,this.colorWrite=Do.colorWrite,this.precision=Do.precision,this.polygonOffset=Do.polygonOffset,this.polygonOffsetFactor=Do.polygonOffsetFactor,this.polygonOffsetUnits=Do.polygonOffsetUnits,this.alphaTest=Do.alphaTest,this.premultipliedAlpha=Do.premultipliedAlpha,this.overdraw=Do.overdraw,this.visible=Do.visible,this.clipShadows=Do.clipShadows,this.clipIntersection=Do.clipIntersection;var Uo=Do.clippingPlanes,No=null;if(null!==Uo){var Io=Uo.length;No=Array(Io);for(var zo=0;zo!==Io;++zo)No[zo]=Uo[zo].clone()}return this.clippingPlanes=No,this},update:function(){this.dispatchEvent({type:'update'})},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(Te.prototype,M.prototype),Le.prototype=Object.create(Te.prototype),Le.prototype.constructor=Le,Le.prototype.isShaderMaterial=!0,Le.prototype.copy=function(Co){return Te.prototype.copy.call(this,Co),this.fragmentShader=Co.fragmentShader,this.vertexShader=Co.vertexShader,this.uniforms=_i.clone(Co.uniforms),this.defines=Co.defines,this.wireframe=Co.wireframe,this.wireframeLinewidth=Co.wireframeLinewidth,this.lights=Co.lights,this.clipping=Co.clipping,this.skinning=Co.skinning,this.morphTargets=Co.morphTargets,this.morphNormals=Co.morphNormals,this.extensions=Co.extensions,this},Le.prototype.toJSON=function(Co){var Do=Te.prototype.toJSON.call(this,Co);return Do.uniforms=this.uniforms,Do.vertexShader=this.vertexShader,Do.fragmentShader=this.fragmentShader,Do},Ae.prototype=Object.create(Te.prototype),Ae.prototype.constructor=Ae,Ae.prototype.isMeshDepthMaterial=!0,Ae.prototype.copy=function(Co){return Te.prototype.copy.call(this,Co),this.depthPacking=Co.depthPacking,this.skinning=Co.skinning,this.morphTargets=Co.morphTargets,this.map=Co.map,this.alphaMap=Co.alphaMap,this.displacementMap=Co.displacementMap,this.displacementScale=Co.displacementScale,this.displacementBias=Co.displacementBias,this.wireframe=Co.wireframe,this.wireframeLinewidth=Co.wireframeLinewidth,this},Re.prototype={constructor:Re,isBox3:!0,set:function(Do,Uo){return this.min.copy(Do),this.max.copy(Uo),this},setFromArray:function(Do){for(var Uo=+Infinity,No=+Infinity,Io=+Infinity,zo=-Infinity,Fo=-Infinity,Bo=-Infinity,Oo=0,Go=Do.length;Oo<Go;Oo+=3){var Vo=Do[Oo],Ho=Do[Oo+1],ko=Do[Oo+2];Vo<Uo&&(Uo=Vo),Ho<No&&(No=Ho),ko<Io&&(Io=ko),Vo>zo&&(zo=Vo),Ho>Fo&&(Fo=Ho),ko>Bo&&(Bo=ko)}return this.min.set(Uo,No,Io),this.max.set(zo,Fo,Bo),this},setFromBufferAttribute:function(Do){for(var Uo=+Infinity,No=+Infinity,Io=+Infinity,zo=-Infinity,Fo=-Infinity,Bo=-Infinity,Oo=0,Go=Do.count;Oo<Go;Oo++){var Vo=Do.getX(Oo),Ho=Do.getY(Oo),ko=Do.getZ(Oo);Vo<Uo&&(Uo=Vo),Ho<No&&(No=Ho),ko<Io&&(Io=ko),Vo>zo&&(zo=Vo),Ho>Fo&&(Fo=Ho),ko>Bo&&(Bo=ko)}return this.min.set(Uo,No,Io),this.max.set(zo,Fo,Bo),this},setFromPoints:function(Do){this.makeEmpty();for(var Uo=0,No=Do.length;Uo<No;Uo++)this.expandByPoint(Do[Uo]);return this},setFromCenterAndSize:function(){var Co=new E;return function(Uo,No){var Io=Co.copy(No).multiplyScalar(0.5);return this.min.copy(Uo).sub(Io),this.max.copy(Uo).add(Io),this}}(),setFromObject:function(Do){return this.makeEmpty(),this.expandByObject(Do)},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.min.copy(Do.min),this.max.copy(Do.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(Do){var Uo=Do||new E;return this.isEmpty()?Uo.set(0,0,0):Uo.addVectors(this.min,this.max).multiplyScalar(0.5)},getSize:function(Do){var Uo=Do||new E;return this.isEmpty()?Uo.set(0,0,0):Uo.subVectors(this.max,this.min)},expandByPoint:function(Do){return this.min.min(Do),this.max.max(Do),this},expandByVector:function(Do){return this.min.sub(Do),this.max.add(Do),this},expandByScalar:function(Do){return this.min.addScalar(-Do),this.max.addScalar(Do),this},expandByObject:function(){var Co=new E;return function(Uo){var No=this;return Uo.updateMatrixWorld(!0),Uo.traverse(function(Io){var Bo=Io.geometry,zo,Fo;if(void 0!==Bo)if(Bo.isGeometry){var Oo=Bo.vertices;for(zo=0,Fo=Oo.length;zo<Fo;zo++)Co.copy(Oo[zo]),Co.applyMatrix4(Io.matrixWorld),No.expandByPoint(Co)}else if(Bo.isBufferGeometry){var Go=Bo.attributes.position;if(void 0!==Go)for(zo=0,Fo=Go.count;zo<Fo;zo++)Co.fromBufferAttribute(Go,zo).applyMatrix4(Io.matrixWorld),No.expandByPoint(Co)}}),this}}(),containsPoint:function(Do){return Do.x<this.min.x||Do.x>this.max.x||Do.y<this.min.y||Do.y>this.max.y||Do.z<this.min.z||Do.z>this.max.z?!1:!0},containsBox:function(Do){return this.min.x<=Do.min.x&&Do.max.x<=this.max.x&&this.min.y<=Do.min.y&&Do.max.y<=this.max.y&&this.min.z<=Do.min.z&&Do.max.z<=this.max.z},getParameter:function(Do,Uo){var No=Uo||new E;return No.set((Do.x-this.min.x)/(this.max.x-this.min.x),(Do.y-this.min.y)/(this.max.y-this.min.y),(Do.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(Do){return Do.max.x<this.min.x||Do.min.x>this.max.x||Do.max.y<this.min.y||Do.min.y>this.max.y||Do.max.z<this.min.z||Do.min.z>this.max.z?!1:!0},intersectsSphere:function(){var Co;return function(Uo){return void 0===Co&&(Co=new E),this.clampPoint(Uo.center,Co),Co.distanceToSquared(Uo.center)<=Uo.radius*Uo.radius}}(),intersectsPlane:function(Do){var Uo,No;return 0<Do.normal.x?(Uo=Do.normal.x*this.min.x,No=Do.normal.x*this.max.x):(Uo=Do.normal.x*this.max.x,No=Do.normal.x*this.min.x),0<Do.normal.y?(Uo+=Do.normal.y*this.min.y,No+=Do.normal.y*this.max.y):(Uo+=Do.normal.y*this.max.y,No+=Do.normal.y*this.min.y),0<Do.normal.z?(Uo+=Do.normal.z*this.min.z,No+=Do.normal.z*this.max.z):(Uo+=Do.normal.z*this.max.z,No+=Do.normal.z*this.min.z),Uo<=Do.constant&&No>=Do.constant},clampPoint:function(Do,Uo){var No=Uo||new E;return No.copy(Do).clamp(this.min,this.max)},distanceToPoint:function(){var Co=new E;return function(Uo){var No=Co.copy(Uo).clamp(this.min,this.max);return No.sub(Uo).length()}}(),getBoundingSphere:function(){var Co=new E;return function(Uo){var No=Uo||new Pe;return this.getCenter(No.center),No.radius=0.5*this.getSize(Co).length(),No}}(),intersect:function(Do){return this.min.max(Do.min),this.max.min(Do.max),this.isEmpty()&&this.makeEmpty(),this},union:function(Do){return this.min.min(Do.min),this.max.max(Do.max),this},applyMatrix4:function(){var Co=[new E,new E,new E,new E,new E,new E,new E,new E];return function(Uo){return this.isEmpty()?this:(Co[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(Uo),Co[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(Uo),Co[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(Uo),Co[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(Uo),Co[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(Uo),Co[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(Uo),Co[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(Uo),Co[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(Uo),this.setFromPoints(Co),this)}}(),translate:function(Do){return this.min.add(Do),this.max.add(Do),this},equals:function(Do){return Do.min.equals(this.min)&&Do.max.equals(this.max)}},Pe.prototype={constructor:Pe,set:function(Do,Uo){return this.center.copy(Do),this.radius=Uo,this},setFromPoints:function(){var Co;return function(Uo,No){void 0===Co&&(Co=new Re);var Io=this.center;void 0===No?Co.setFromPoints(Uo).getCenter(Io):Io.copy(No);for(var zo=0,Fo=0,Bo=Uo.length;Fo<Bo;Fo++)zo=Math.max(zo,Io.distanceToSquared(Uo[Fo]));return this.radius=Math.sqrt(zo),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.center.copy(Do.center),this.radius=Do.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(Do){return Do.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(Do){return Do.distanceTo(this.center)-this.radius},intersectsSphere:function(Do){var Uo=this.radius+Do.radius;return Do.center.distanceToSquared(this.center)<=Uo*Uo},intersectsBox:function(Do){return Do.intersectsSphere(this)},intersectsPlane:function(Do){return Math.abs(this.center.dot(Do.normal)-Do.constant)<=this.radius},clampPoint:function(Do,Uo){var No=this.center.distanceToSquared(Do),Io=Uo||new E;return Io.copy(Do),No>this.radius*this.radius&&(Io.sub(this.center).normalize(),Io.multiplyScalar(this.radius).add(this.center)),Io},getBoundingBox:function(Do){var Uo=Do||new Re;return Uo.set(this.center,this.center),Uo.expandByScalar(this.radius),Uo},applyMatrix4:function(Do){return this.center.applyMatrix4(Do),this.radius*=Do.getMaxScaleOnAxis(),this},translate:function(Do){return this.center.add(Do),this},equals:function(Do){return Do.center.equals(this.center)&&Do.radius===this.radius}},we.prototype={constructor:we,isMatrix3:!0,set:function(Do,Uo,No,Io,zo,Fo,Bo,Oo,Go){var Vo=this.elements;return Vo[0]=Do,Vo[1]=Io,Vo[2]=Bo,Vo[3]=Uo,Vo[4]=zo,Vo[5]=Oo,Vo[6]=No,Vo[7]=Fo,Vo[8]=Go,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(Do){var Uo=Do.elements;return this.set(Uo[0],Uo[3],Uo[6],Uo[1],Uo[4],Uo[7],Uo[2],Uo[5],Uo[8]),this},setFromMatrix4:function(Do){var Uo=Do.elements;return this.set(Uo[0],Uo[4],Uo[8],Uo[1],Uo[5],Uo[9],Uo[2],Uo[6],Uo[10]),this},applyToBufferAttribute:function(){var Co;return function(Uo){Co===void 0&&(Co=new E);for(var No=0,Io=Uo.count;No<Io;No++)Co.x=Uo.getX(No),Co.y=Uo.getY(No),Co.z=Uo.getZ(No),Co.applyMatrix3(this),Uo.setXYZ(No,Co.x,Co.y,Co.z);return Uo}}(),multiplyScalar:function(Do){var Uo=this.elements;return Uo[0]*=Do,Uo[3]*=Do,Uo[6]*=Do,Uo[1]*=Do,Uo[4]*=Do,Uo[7]*=Do,Uo[2]*=Do,Uo[5]*=Do,Uo[8]*=Do,this},determinant:function(){var Do=this.elements,Uo=Do[0],No=Do[1],Io=Do[2],zo=Do[3],Fo=Do[4],Bo=Do[5],Oo=Do[6],Go=Do[7],Vo=Do[8];return Uo*Fo*Vo-Uo*Bo*Go-No*zo*Vo+No*Bo*Oo+Io*zo*Go-Io*Fo*Oo},getInverse:function(Do,Uo){Do&&Do.isMatrix4&&console.error('THREE.Matrix3.getInverse no longer takes a Matrix4 argument.');var No=Do.elements,Io=this.elements,zo=No[0],Fo=No[1],Bo=No[2],Oo=No[3],Go=No[4],Vo=No[5],Ho=No[6],ko=No[7],Wo=No[8],Xo=Wo*Go-Vo*ko,Yo=Vo*Ho-Wo*Oo,jo=ko*Oo-Go*Ho,qo=zo*Xo+Fo*Yo+Bo*jo;if(0===qo){var Zo='THREE.Matrix3.getInverse(): can\'t invert matrix, determinant is 0';if(!0===Uo)throw new Error(Zo);else console.warn(Zo);return this.identity()}var Qo=1/qo;return Io[0]=Xo*Qo,Io[1]=(Bo*ko-Wo*Fo)*Qo,Io[2]=(Vo*Fo-Bo*Go)*Qo,Io[3]=Yo*Qo,Io[4]=(Wo*zo-Bo*Ho)*Qo,Io[5]=(Bo*Oo-Vo*zo)*Qo,Io[6]=jo*Qo,Io[7]=(Fo*Ho-ko*zo)*Qo,Io[8]=(Go*zo-Fo*Oo)*Qo,this},transpose:function(){var Uo=this.elements,Do;return Do=Uo[1],Uo[1]=Uo[3],Uo[3]=Do,Do=Uo[2],Uo[2]=Uo[6],Uo[6]=Do,Do=Uo[5],Uo[5]=Uo[7],Uo[7]=Do,this},getNormalMatrix:function(Do){return this.setFromMatrix4(Do).getInverse(this).transpose()},transposeIntoArray:function(Do){var Uo=this.elements;return Do[0]=Uo[0],Do[1]=Uo[3],Do[2]=Uo[6],Do[3]=Uo[1],Do[4]=Uo[4],Do[5]=Uo[7],Do[6]=Uo[2],Do[7]=Uo[5],Do[8]=Uo[8],this},fromArray:function(Do,Uo){Uo===void 0&&(Uo=0);for(var No=0;9>No;No++)this.elements[No]=Do[No+Uo];return this},toArray:function(Do,Uo){void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0);var No=this.elements;return Do[Uo]=No[0],Do[Uo+1]=No[1],Do[Uo+2]=No[2],Do[Uo+3]=No[3],Do[Uo+4]=No[4],Do[Uo+5]=No[5],Do[Uo+6]=No[6],Do[Uo+7]=No[7],Do[Uo+8]=No[8],Do}},Ce.prototype={constructor:Ce,set:function(Do,Uo){return this.normal.copy(Do),this.constant=Uo,this},setComponents:function(Do,Uo,No,Io){return this.normal.set(Do,Uo,No),this.constant=Io,this},setFromNormalAndCoplanarPoint:function(Do,Uo){return this.normal.copy(Do),this.constant=-Uo.dot(this.normal),this},setFromCoplanarPoints:function(){var Co=new E,Do=new E;return function(No,Io,zo){var Fo=Co.subVectors(zo,Io).cross(Do.subVectors(No,Io)).normalize();return this.setFromNormalAndCoplanarPoint(Fo,No),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.normal.copy(Do.normal),this.constant=Do.constant,this},normalize:function(){var Do=1/this.normal.length();return this.normal.multiplyScalar(Do),this.constant*=Do,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(Do){return this.normal.dot(Do)+this.constant},distanceToSphere:function(Do){return this.distanceToPoint(Do.center)-Do.radius},projectPoint:function(Do,Uo){return this.orthoPoint(Do,Uo).sub(Do).negate()},orthoPoint:function(Do,Uo){var No=this.distanceToPoint(Do),Io=Uo||new E;return Io.copy(this.normal).multiplyScalar(No)},intersectLine:function(){var Co=new E;return function(Uo,No){var Io=No||new E,zo=Uo.delta(Co),Fo=this.normal.dot(zo);if(0===Fo)return 0===this.distanceToPoint(Uo.start)?Io.copy(Uo.start):void 0;var Bo=-(Uo.start.dot(this.normal)+this.constant)/Fo;return 0>Bo||1<Bo?void 0:Io.copy(zo).multiplyScalar(Bo).add(Uo.start)}}(),intersectsLine:function(Do){var Uo=this.distanceToPoint(Do.start),No=this.distanceToPoint(Do.end);return 0>Uo&&0<No||0>No&&0<Uo},intersectsBox:function(Do){return Do.intersectsPlane(this)},intersectsSphere:function(Do){return Do.intersectsPlane(this)},coplanarPoint:function(Do){var Uo=Do||new E;return Uo.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var Co=new E,Do=new we;return function(No,Io){var zo=this.coplanarPoint(Co).applyMatrix4(No),Fo=Io||Do.getNormalMatrix(No),Bo=this.normal.applyMatrix3(Fo).normalize();return this.constant=-zo.dot(Bo),this}}(),translate:function(Do){return this.constant-=Do.dot(this.normal),this},equals:function(Do){return Do.normal.equals(this.normal)&&Do.constant===this.constant}},De.prototype={constructor:De,set:function(Do,Uo,No,Io,zo,Fo){var Bo=this.planes;return Bo[0].copy(Do),Bo[1].copy(Uo),Bo[2].copy(No),Bo[3].copy(Io),Bo[4].copy(zo),Bo[5].copy(Fo),this},clone:function(){return new this.constructor().copy(this)},copy:function(Do){for(var Uo=this.planes,No=0;6>No;No++)Uo[No].copy(Do.planes[No]);return this},setFromMatrix:function(Do){var Uo=this.planes,No=Do.elements,Io=No[0],zo=No[1],Fo=No[2],Bo=No[3],Oo=No[4],Go=No[5],Vo=No[6],Ho=No[7],ko=No[8],Wo=No[9],Xo=No[10],Yo=No[11],jo=No[12],qo=No[13],Zo=No[14],Qo=No[15];return Uo[0].setComponents(Bo-Io,Ho-Oo,Yo-ko,Qo-jo).normalize(),Uo[1].setComponents(Bo+Io,Ho+Oo,Yo+ko,Qo+jo).normalize(),Uo[2].setComponents(Bo+zo,Ho+Go,Yo+Wo,Qo+qo).normalize(),Uo[3].setComponents(Bo-zo,Ho-Go,Yo-Wo,Qo-qo).normalize(),Uo[4].setComponents(Bo-Fo,Ho-Vo,Yo-Xo,Qo-Zo).normalize(),Uo[5].setComponents(Bo+Fo,Ho+Vo,Yo+Xo,Qo+Zo).normalize(),this},intersectsObject:function(){var Co=new Pe;return function(Uo){var No=Uo.geometry;return null===No.boundingSphere&&No.computeBoundingSphere(),Co.copy(No.boundingSphere).applyMatrix4(Uo.matrixWorld),this.intersectsSphere(Co)}}(),intersectsSprite:function(){var Co=new Pe;return function(Uo){return Co.center.set(0,0,0),Co.radius=0.7071067811865476,Co.applyMatrix4(Uo.matrixWorld),this.intersectsSphere(Co)}}(),intersectsSphere:function(Do){for(var Uo=this.planes,No=Do.center,Io=-Do.radius,zo=0,Fo;6>zo;zo++)if(Fo=Uo[zo].distanceToPoint(No),Fo<Io)return!1;return!0},intersectsBox:function(){var Co=new E,Do=new E;return function(No){for(var Io=this.planes,zo=0,Fo;6>zo;zo++){Fo=Io[zo],Co.x=0<Fo.normal.x?No.min.x:No.max.x,Do.x=0<Fo.normal.x?No.max.x:No.min.x,Co.y=0<Fo.normal.y?No.min.y:No.max.y,Do.y=0<Fo.normal.y?No.max.y:No.min.y,Co.z=0<Fo.normal.z?No.min.z:No.max.z,Do.z=0<Fo.normal.z?No.max.z:No.min.z;var Bo=Fo.distanceToPoint(Co),Oo=Fo.distanceToPoint(Do);if(0>Bo&&0>Oo)return!1}return!0}}(),containsPoint:function(Do){for(var Uo=this.planes,No=0;6>No;No++)if(0>Uo[No].distanceToPoint(Do))return!1;return!0}},Ne.prototype={constructor:Ne,set:function(Do,Uo){return this.origin.copy(Do),this.direction.copy(Uo),this},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.origin.copy(Do.origin),this.direction.copy(Do.direction),this},at:function(Do,Uo){var No=Uo||new E;return No.copy(this.direction).multiplyScalar(Do).add(this.origin)},lookAt:function(Do){return this.direction.copy(Do).sub(this.origin).normalize(),this},recast:function(){var Co=new E;return function(Uo){return this.origin.copy(this.at(Uo,Co)),this}}(),closestPointToPoint:function(Do,Uo){var No=Uo||new E;No.subVectors(Do,this.origin);var Io=No.dot(this.direction);return 0>Io?No.copy(this.origin):No.copy(this.direction).multiplyScalar(Io).add(this.origin)},distanceToPoint:function(Do){return Math.sqrt(this.distanceSqToPoint(Do))},distanceSqToPoint:function(){var Co=new E;return function(Uo){var No=Co.subVectors(Uo,this.origin).dot(this.direction);return 0>No?this.origin.distanceToSquared(Uo):(Co.copy(this.direction).multiplyScalar(No).add(this.origin),Co.distanceToSquared(Uo))}}(),distanceSqToSegment:function(){var Co=new E,Do=new E,Uo=new E;return function(Io,zo,Fo,Bo){Co.copy(Io).add(zo).multiplyScalar(0.5),Do.copy(zo).sub(Io).normalize(),Uo.copy(this.origin).sub(Co);var Oo=0.5*Io.distanceTo(zo),Go=-this.direction.dot(Do),Vo=Uo.dot(this.direction),Ho=-Uo.dot(Do),ko=Uo.lengthSq(),Wo=Math.abs(1-Go*Go),Xo,Yo,jo,qo;if(!(0<Wo))Yo=0<Go?-Oo:Oo,Xo=Math.max(0,-(Go*Yo+Vo)),jo=-Xo*Xo+Yo*(Yo+2*Ho)+ko;else if(Xo=Go*Ho-Vo,Yo=Go*Vo-Ho,qo=Oo*Wo,!(0<=Xo))Yo<=-qo?(Xo=Math.max(0,-(-Go*Oo+Vo)),Yo=0<Xo?-Oo:Math.min(Math.max(-Oo,-Ho),Oo),jo=-Xo*Xo+Yo*(Yo+2*Ho)+ko):Yo<=qo?(Xo=0,Yo=Math.min(Math.max(-Oo,-Ho),Oo),jo=Yo*(Yo+2*Ho)+ko):(Xo=Math.max(0,-(Go*Oo+Vo)),Yo=0<Xo?Oo:Math.min(Math.max(-Oo,-Ho),Oo),jo=-Xo*Xo+Yo*(Yo+2*Ho)+ko);else if(!(Yo>=-qo))Yo=-Oo,Xo=Math.max(0,-(Go*Yo+Vo)),jo=-Xo*Xo+Yo*(Yo+2*Ho)+ko;else if(Yo<=qo){var Zo=1/Wo;Xo*=Zo,Yo*=Zo,jo=Xo*(Xo+Go*Yo+2*Vo)+Yo*(Go*Xo+Yo+2*Ho)+ko}else Yo=Oo,Xo=Math.max(0,-(Go*Yo+Vo)),jo=-Xo*Xo+Yo*(Yo+2*Ho)+ko;return Fo&&Fo.copy(this.direction).multiplyScalar(Xo).add(this.origin),Bo&&Bo.copy(Do).multiplyScalar(Yo).add(Co),jo}}(),intersectSphere:function(){var Co=new E;return function(Uo,No){Co.subVectors(Uo.center,this.origin);var Io=Co.dot(this.direction),zo=Co.dot(Co)-Io*Io,Fo=Uo.radius*Uo.radius;if(zo>Fo)return null;var Bo=Math.sqrt(Fo-zo),Oo=Io-Bo,Go=Io+Bo;return 0>Oo&&0>Go?null:0>Oo?this.at(Go,No):this.at(Oo,No)}}(),intersectsSphere:function(Do){return this.distanceToPoint(Do.center)<=Do.radius},distanceToPlane:function(Do){var Uo=Do.normal.dot(this.direction);if(0===Uo)return 0===Do.distanceToPoint(this.origin)?0:null;var No=-(this.origin.dot(Do.normal)+Do.constant)/Uo;return 0<=No?No:null},intersectPlane:function(Do,Uo){var No=this.distanceToPlane(Do);return null===No?null:this.at(No,Uo)},intersectsPlane:function(Do){var Uo=Do.distanceToPoint(this.origin);if(0===Uo)return!0;var No=Do.normal.dot(this.direction);return!!(0>No*Uo)},intersectBox:function(Do,Uo){var Go=1/this.direction.x,Vo=1/this.direction.y,Ho=1/this.direction.z,ko=this.origin,No,Io,zo,Fo,Bo,Oo;return(0<=Go?(No=(Do.min.x-ko.x)*Go,Io=(Do.max.x-ko.x)*Go):(No=(Do.max.x-ko.x)*Go,Io=(Do.min.x-ko.x)*Go),0<=Vo?(zo=(Do.min.y-ko.y)*Vo,Fo=(Do.max.y-ko.y)*Vo):(zo=(Do.max.y-ko.y)*Vo,Fo=(Do.min.y-ko.y)*Vo),No>Fo||zo>Io)?null:((zo>No||No!==No)&&(No=zo),(Fo<Io||Io!==Io)&&(Io=Fo),0<=Ho?(Bo=(Do.min.z-ko.z)*Ho,Oo=(Do.max.z-ko.z)*Ho):(Bo=(Do.max.z-ko.z)*Ho,Oo=(Do.min.z-ko.z)*Ho),No>Oo||Bo>Io)?null:((Bo>No||No!==No)&&(No=Bo),(Oo<Io||Io!==Io)&&(Io=Oo),0>Io?null:this.at(0<=No?No:Io,Uo))},intersectsBox:function(){var Co=new E;return function(Uo){return null!==this.intersectBox(Uo,Co)}}(),intersectTriangle:function(){var Co=new E,Do=new E,Uo=new E,No=new E;return function(zo,Fo,Bo,Oo,Go){Do.subVectors(Fo,zo),Uo.subVectors(Bo,zo),No.crossVectors(Do,Uo);var Vo=this.direction.dot(No),Ho;if(0<Vo){if(Oo)return null;Ho=1}else if(0>Vo)Ho=-1,Vo=-Vo;else return null;Co.subVectors(this.origin,zo);var ko=Ho*this.direction.dot(Uo.crossVectors(Co,Uo));if(0>ko)return null;var Wo=Ho*this.direction.dot(Do.cross(Co));if(0>Wo)return null;if(ko+Wo>Vo)return null;var Xo=-Ho*Co.dot(No);return 0>Xo?null:this.at(Xo/Vo,Go)}}(),applyMatrix4:function(Do){return this.direction.add(this.origin).applyMatrix4(Do),this.origin.applyMatrix4(Do),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(Do){return Do.origin.equals(this.origin)&&Do.direction.equals(this.direction)}},Ie.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'],Ie.DefaultOrder='XYZ',Ie.prototype={constructor:Ie,isEuler:!0,get x(){return this._x},set x(Co){this._x=Co,this.onChangeCallback()},get y(){return this._y},set y(Co){this._y=Co,this.onChangeCallback()},get z(){return this._z},set z(Co){this._z=Co,this.onChangeCallback()},get order(){return this._order},set order(Co){this._order=Co,this.onChangeCallback()},set:function(Do,Uo,No,Io){return this._x=Do,this._y=Uo,this._z=No,this._order=Io||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(Do){return this._x=Do._x,this._y=Do._y,this._z=Do._z,this._order=Do._order,this.onChangeCallback(),this},setFromRotationMatrix:function(Do,Uo,No){var Io=pi.clamp,zo=Do.elements,Fo=zo[0],Bo=zo[4],Oo=zo[8],Go=zo[1],Vo=zo[5],Ho=zo[9],ko=zo[2],Wo=zo[6],Xo=zo[10];return Uo=Uo||this._order,'XYZ'===Uo?(this._y=Math.asin(Io(Oo,-1,1)),0.99999>Math.abs(Oo)?(this._x=Math.atan2(-Ho,Xo),this._z=Math.atan2(-Bo,Fo)):(this._x=Math.atan2(Wo,Vo),this._z=0)):'YXZ'===Uo?(this._x=Math.asin(-Io(Ho,-1,1)),0.99999>Math.abs(Ho)?(this._y=Math.atan2(Oo,Xo),this._z=Math.atan2(Go,Vo)):(this._y=Math.atan2(-ko,Fo),this._z=0)):'ZXY'===Uo?(this._x=Math.asin(Io(Wo,-1,1)),0.99999>Math.abs(Wo)?(this._y=Math.atan2(-ko,Xo),this._z=Math.atan2(-Bo,Vo)):(this._y=0,this._z=Math.atan2(Go,Fo))):'ZYX'===Uo?(this._y=Math.asin(-Io(ko,-1,1)),0.99999>Math.abs(ko)?(this._x=Math.atan2(Wo,Xo),this._z=Math.atan2(Go,Fo)):(this._x=0,this._z=Math.atan2(-Bo,Vo))):'YZX'===Uo?(this._z=Math.asin(Io(Go,-1,1)),0.99999>Math.abs(Go)?(this._x=Math.atan2(-Ho,Vo),this._y=Math.atan2(-ko,Fo)):(this._x=0,this._y=Math.atan2(Oo,Xo))):'XZY'===Uo?(this._z=Math.asin(-Io(Bo,-1,1)),0.99999>Math.abs(Bo)?(this._x=Math.atan2(Wo,Vo),this._y=Math.atan2(Oo,Fo)):(this._x=Math.atan2(-Ho,Xo),this._y=0)):console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: '+Uo),this._order=Uo,!1!==No&&this.onChangeCallback(),this},setFromQuaternion:function(){var Co;return function(Uo,No,Io){return void 0===Co&&(Co=new S),Co.makeRotationFromQuaternion(Uo),this.setFromRotationMatrix(Co,No,Io)}}(),setFromVector3:function(Do,Uo){return this.set(Do.x,Do.y,Do.z,Uo||this._order)},reorder:function(){var Co=new _;return function(Uo){return Co.setFromEuler(this),this.setFromQuaternion(Co,Uo)}}(),equals:function(Do){return Do._x===this._x&&Do._y===this._y&&Do._z===this._z&&Do._order===this._order},fromArray:function(Do){return this._x=Do[0],this._y=Do[1],this._z=Do[2],void 0!==Do[3]&&(this._order=Do[3]),this.onChangeCallback(),this},toArray:function(Do,Uo){return void 0===Do&&(Do=[]),void 0===Uo&&(Uo=0),Do[Uo]=this._x,Do[Uo+1]=this._y,Do[Uo+2]=this._z,Do[Uo+3]=this._order,Do},toVector3:function(Do){return Do?Do.set(this._x,this._y,this._z):new E(this._x,this._y,this._z)},onChange:function(Do){return this.onChangeCallback=Do,this},onChangeCallback:function(){}},ze.prototype={constructor:ze,set:function(Do){this.mask=1<<Do},enable:function(Do){this.mask|=1<<Do},toggle:function(Do){this.mask^=1<<Do},disable:function(Do){this.mask&=~(1<<Do)},test:function(Do){return 0!==(this.mask&Do.mask)}};var Lo=0;Fe.DefaultUp=new E(0,1,0),Fe.DefaultMatrixAutoUpdate=!0,Fe.prototype={constructor:Fe,isObject3D:!0,applyMatrix:function(Do){this.matrix.multiplyMatrices(Do,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(Do,Uo){this.quaternion.setFromAxisAngle(Do,Uo)},setRotationFromEuler:function(Do){this.quaternion.setFromEuler(Do,!0)},setRotationFromMatrix:function(Do){this.quaternion.setFromRotationMatrix(Do)},setRotationFromQuaternion:function(Do){this.quaternion.copy(Do)},rotateOnAxis:function(){var Co=new _;return function(Uo,No){return Co.setFromAxisAngle(Uo,No),this.quaternion.multiply(Co),this}}(),rotateX:function(){var Co=new E(1,0,0);return function(Uo){return this.rotateOnAxis(Co,Uo)}}(),rotateY:function(){var Co=new E(0,1,0);return function(Uo){return this.rotateOnAxis(Co,Uo)}}(),rotateZ:function(){var Co=new E(0,0,1);return function(Uo){return this.rotateOnAxis(Co,Uo)}}(),translateOnAxis:function(){var Co=new E;return function(Uo,No){return Co.copy(Uo).applyQuaternion(this.quaternion),this.position.add(Co.multiplyScalar(No)),this}}(),translateX:function(){var Co=new E(1,0,0);return function(Uo){return this.translateOnAxis(Co,Uo)}}(),translateY:function(){var Co=new E(0,1,0);return function(Uo){return this.translateOnAxis(Co,Uo)}}(),translateZ:function(){var Co=new E(0,0,1);return function(Uo){return this.translateOnAxis(Co,Uo)}}(),localToWorld:function(Do){return Do.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var Co=new S;return function(Uo){return Uo.applyMatrix4(Co.getInverse(this.matrixWorld))}}(),lookAt:function(){var Co=new S;return function(Uo){Co.lookAt(Uo,this.position,this.up),this.quaternion.setFromRotationMatrix(Co)}}(),add:function(Do){if(1<arguments.length){for(var Uo=0;Uo<arguments.length;Uo++)this.add(arguments[Uo]);return this}return Do===this?(console.error('THREE.Object3D.add: object can\'t be added as a child of itself.',Do),this):(Do&&Do.isObject3D?(null!==Do.parent&&Do.parent.remove(Do),Do.parent=this,Do.dispatchEvent({type:'added'}),this.children.push(Do)):console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',Do),this)},remove:function(Do){if(1<arguments.length)for(var Uo=0;Uo<arguments.length;Uo++)this.remove(arguments[Uo]);var No=this.children.indexOf(Do);-1!==No&&(Do.parent=null,Do.dispatchEvent({type:'removed'}),this.children.splice(No,1))},getObjectById:function(Do){return this.getObjectByProperty('id',Do)},getObjectByName:function(Do){return this.getObjectByProperty('name',Do)},getObjectByProperty:function(Do,Uo){if(this[Do]===Uo)return this;for(var No=0,Io=this.children.length;No<Io;No++){var zo=this.children[No],Fo=zo.getObjectByProperty(Do,Uo);if(Fo!==void 0)return Fo}},getWorldPosition:function(Do){var Uo=Do||new E;return this.updateMatrixWorld(!0),Uo.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var Co=new E,Do=new E;return function(No){var Io=No||new _;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(Co,Io,Do),Io}}(),getWorldRotation:function(){var Co=new _;return function(Uo){var No=Uo||new Ie;return this.getWorldQuaternion(Co),No.setFromQuaternion(Co,this.rotation.order,!1)}}(),getWorldScale:function(){var Co=new E,Do=new _;return function(No){var Io=No||new E;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(Co,Do,Io),Io}}(),getWorldDirection:function(){var Co=new _;return function(Uo){var No=Uo||new E;return this.getWorldQuaternion(Co),No.set(0,0,1).applyQuaternion(Co)}}(),raycast:function(){},traverse:function(Do){Do(this);for(var Uo=this.children,No=0,Io=Uo.length;No<Io;No++)Uo[No].traverse(Do)},traverseVisible:function(Do){if(!1!==this.visible){Do(this);for(var Uo=this.children,No=0,Io=Uo.length;No<Io;No++)Uo[No].traverseVisible(Do)}},traverseAncestors:function(Do){var Uo=this.parent;null!==Uo&&(Do(Uo),Uo.traverseAncestors(Do))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(Do){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===Do)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,Do=!0);for(var Uo=this.children,No=0,Io=Uo.length;No<Io;No++)Uo[No].updateMatrixWorld(Do)},toJSON:function(Do){function Uo(Ho){var ko=[];for(var Wo in Ho){var Xo=Ho[Wo];delete Xo.metadata,ko.push(Xo)}return ko}var No=void 0===Do||''===Do,Io={};No&&(Do={geometries:{},materials:{},textures:{},images:{}},Io.metadata={version:4.4,type:'Object',generator:'Object3D.toJSON'});var zo={};if(zo.uuid=this.uuid,zo.type=this.type,''!==this.name&&(zo.name=this.name),'{}'!==JSON.stringify(this.userData)&&(zo.userData=this.userData),!0===this.castShadow&&(zo.castShadow=!0),!0===this.receiveShadow&&(zo.receiveShadow=!0),!1===this.visible&&(zo.visible=!1),zo.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===Do.geometries[this.geometry.uuid]&&(Do.geometries[this.geometry.uuid]=this.geometry.toJSON(Do)),zo.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===Do.materials[this.material.uuid]&&(Do.materials[this.material.uuid]=this.material.toJSON(Do)),zo.material=this.material.uuid),0<this.children.length){zo.children=[];for(var Fo=0;Fo<this.children.length;Fo++)zo.children.push(this.children[Fo].toJSON(Do).object)}if(No){var Bo=Uo(Do.geometries),Oo=Uo(Do.materials),Go=Uo(Do.textures),Vo=Uo(Do.images);0<Bo.length&&(Io.geometries=Bo),0<Oo.length&&(Io.materials=Oo),0<Go.length&&(Io.textures=Go),0<Vo.length&&(Io.images=Vo)}return Io.object=zo,Io},clone:function(Do){return new this.constructor().copy(this,Do)},copy:function(Do,Uo){if(void 0===Uo&&(Uo=!0),this.name=Do.name,this.up.copy(Do.up),this.position.copy(Do.position),this.quaternion.copy(Do.quaternion),this.scale.copy(Do.scale),this.matrix.copy(Do.matrix),this.matrixWorld.copy(Do.matrixWorld),this.matrixAutoUpdate=Do.matrixAutoUpdate,this.matrixWorldNeedsUpdate=Do.matrixWorldNeedsUpdate,this.layers.mask=Do.layers.mask,this.visible=Do.visible,this.castShadow=Do.castShadow,this.receiveShadow=Do.receiveShadow,this.frustumCulled=Do.frustumCulled,this.renderOrder=Do.renderOrder,this.userData=JSON.parse(JSON.stringify(Do.userData)),!0===Uo)for(var No=0,Io;No<Do.children.length;No++)Io=Do.children[No],this.add(Io.clone());return this}},Object.assign(Fe.prototype,M.prototype),Be.prototype={constructor:Be,set:function(Do,Uo){return this.start.copy(Do),this.end.copy(Uo),this},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.start.copy(Do.start),this.end.copy(Do.end),this},getCenter:function(Do){var Uo=Do||new E;return Uo.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(Do){var Uo=Do||new E;return Uo.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(Do,Uo){var No=Uo||new E;return this.delta(No).multiplyScalar(Do).add(this.start)},closestPointToPointParameter:function(){var Co=new E,Do=new E;return function(No,Io){Co.subVectors(No,this.start),Do.subVectors(this.end,this.start);var zo=Do.dot(Do),Fo=Do.dot(Co),Bo=Fo/zo;return Io&&(Bo=pi.clamp(Bo,0,1)),Bo}}(),closestPointToPoint:function(Do,Uo,No){var Io=this.closestPointToPointParameter(Do,Uo),zo=No||new E;return this.delta(zo).multiplyScalar(Io).add(this.start)},applyMatrix4:function(Do){return this.start.applyMatrix4(Do),this.end.applyMatrix4(Do),this},equals:function(Do){return Do.start.equals(this.start)&&Do.end.equals(this.end)}},Oe.normal=function(){var Co=new E;return function(Uo,No,Io,zo){var Fo=zo||new E;Fo.subVectors(Io,No),Co.subVectors(Uo,No),Fo.cross(Co);var Bo=Fo.lengthSq();return 0<Bo?Fo.multiplyScalar(1/Math.sqrt(Bo)):Fo.set(0,0,0)}}(),Oe.barycoordFromPoint=function(){var Co=new E,Do=new E,Uo=new E;return function(Io,zo,Fo,Bo,Oo){Co.subVectors(Bo,zo),Do.subVectors(Fo,zo),Uo.subVectors(Io,zo);var Go=Co.dot(Co),Vo=Co.dot(Do),Ho=Co.dot(Uo),ko=Do.dot(Do),Wo=Do.dot(Uo),Xo=Go*ko-Vo*Vo,Yo=Oo||new E;if(0===Xo)return Yo.set(-2,-1,-1);var jo=1/Xo,qo=(ko*Ho-Vo*Wo)*jo,Zo=(Go*Wo-Vo*Ho)*jo;return Yo.set(1-qo-Zo,Zo,qo)}}(),Oe.containsPoint=function(){var Co=new E;return function(Uo,No,Io,zo){var Fo=Oe.barycoordFromPoint(Uo,No,Io,zo,Co);return 0<=Fo.x&&0<=Fo.y&&1>=Fo.x+Fo.y}}(),Oe.prototype={constructor:Oe,set:function(Do,Uo,No){return this.a.copy(Do),this.b.copy(Uo),this.c.copy(No),this},setFromPointsAndIndices:function(Do,Uo,No,Io){return this.a.copy(Do[Uo]),this.b.copy(Do[No]),this.c.copy(Do[Io]),this},clone:function(){return new this.constructor().copy(this)},copy:function(Do){return this.a.copy(Do.a),this.b.copy(Do.b),this.c.copy(Do.c),this},area:function(){var Co=new E,Do=new E;return function(){return Co.subVectors(this.c,this.b),Do.subVectors(this.a,this.b),0.5*Co.cross(Do).length()}}(),midpoint:function(Do){var Uo=Do||new E;return Uo.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(Do){return Oe.normal(this.a,this.b,this.c,Do)},plane:function(Do){var Uo=Do||new Ce;return Uo.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(Do,Uo){return Oe.barycoordFromPoint(Do,this.a,this.b,this.c,Uo)},containsPoint:function(Do){return Oe.containsPoint(Do,this.a,this.b,this.c)},closestPointToPoint:function(){var Co,Do,Uo,No;return function(zo,Fo){void 0===Co&&(Co=new Ce,Do=[new Be,new Be,new Be],Uo=new E,No=new E);var Bo=Fo||new E,Oo=Infinity;if(Co.setFromCoplanarPoints(this.a,this.b,this.c),Co.projectPoint(zo,Uo),!0===this.containsPoint(Uo))Bo.copy(Uo);else{Do[0].set(this.a,this.b),Do[1].set(this.b,this.c),Do[2].set(this.c,this.a);for(var Go=0;Go<Do.length;Go++){Do[Go].closestPointToPoint(Uo,!0,No);var Vo=Uo.distanceToSquared(No);Vo<Oo&&(Oo=Vo,Bo.copy(No))}}return Bo}}(),equals:function(Do){return Do.a.equals(this.a)&&Do.b.equals(this.b)&&Do.c.equals(this.c)}},Ge.prototype={constructor:Ge,clone:function(){return new this.constructor().copy(this)},copy:function(Do){this.a=Do.a,this.b=Do.b,this.c=Do.c,this.normal.copy(Do.normal),this.color.copy(Do.color),this.materialIndex=Do.materialIndex;for(var Uo=0,No=Do.vertexNormals.length;Uo<No;Uo++)this.vertexNormals[Uo]=Do.vertexNormals[Uo].clone();for(var Uo=0,No=Do.vertexColors.length;Uo<No;Uo++)this.vertexColors[Uo]=Do.vertexColors[Uo].clone();return this}},Ve.prototype=Object.create(Te.prototype),Ve.prototype.constructor=Ve,Ve.prototype.isMeshBasicMaterial=!0,Ve.prototype.copy=function(Co){return Te.prototype.copy.call(this,Co),this.color.copy(Co.color),this.map=Co.map,this.lightMap=Co.lightMap,this.lightMapIntensity=Co.lightMapIntensity,this.aoMap=Co.aoMap,this.aoMapIntensity=Co.aoMapIntensity,this.specularMap=Co.specularMap,this.alphaMap=Co.alphaMap,this.envMap=Co.envMap,this.combine=Co.combine,this.reflectivity=Co.reflectivity,this.refractionRatio=Co.refractionRatio,this.wireframe=Co.wireframe,this.wireframeLinewidth=Co.wireframeLinewidth,this.wireframeLinecap=Co.wireframeLinecap,this.wireframeLinejoin=Co.wireframeLinejoin,this.skinning=Co.skinning,this.morphTargets=Co.morphTargets,this},He.prototype={constructor:He,isBufferAttribute:!0,set needsUpdate(Co){!0===Co&&this.version++},setArray:function(Do){if(Array.isArray(Do))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.count=Do===void 0?0:Do.length/this.itemSize,this.array=Do},setDynamic:function(Do){return this.dynamic=Do,this},copy:function(Do){return this.array=new Do.array.constructor(Do.array),this.itemSize=Do.itemSize,this.count=Do.count,this.normalized=Do.normalized,this.dynamic=Do.dynamic,this},copyAt:function(Do,Uo,No){Do*=this.itemSize,No*=Uo.itemSize;for(var Io=0,zo=this.itemSize;Io<zo;Io++)this.array[Do+Io]=Uo.array[No+Io];return this},copyArray:function(Do){return this.array.set(Do),this},copyColorsArray:function(Do){for(var Uo=this.array,No=0,Io=0,zo=Do.length,Fo;Io<zo;Io++)Fo=Do[Io],void 0===Fo&&(console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',Io),Fo=new ve),Uo[No++]=Fo.r,Uo[No++]=Fo.g,Uo[No++]=Fo.b;return this},copyIndicesArray:function(Do){for(var Uo=this.array,No=0,Io=0,zo=Do.length,Fo;Io<zo;Io++)Fo=Do[Io],Uo[No++]=Fo.a,Uo[No++]=Fo.b,Uo[No++]=Fo.c;return this},copyVector2sArray:function(Do){for(var Uo=this.array,No=0,Io=0,zo=Do.length,Fo;Io<zo;Io++)Fo=Do[Io],void 0===Fo&&(console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',Io),Fo=new T),Uo[No++]=Fo.x,Uo[No++]=Fo.y;return this},copyVector3sArray:function(Do){for(var Uo=this.array,No=0,Io=0,zo=Do.length,Fo;Io<zo;Io++)Fo=Do[Io],void 0===Fo&&(console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',Io),Fo=new E),Uo[No++]=Fo.x,Uo[No++]=Fo.y,Uo[No++]=Fo.z;return this},copyVector4sArray:function(Do){for(var Uo=this.array,No=0,Io=0,zo=Do.length,Fo;Io<zo;Io++)Fo=Do[Io],void 0===Fo&&(console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',Io),Fo=new _e),Uo[No++]=Fo.x,Uo[No++]=Fo.y,Uo[No++]=Fo.z,Uo[No++]=Fo.w;return this},set:function(Do,Uo){return void 0===Uo&&(Uo=0),this.array.set(Do,Uo),this},getX:function(Do){return this.array[Do*this.itemSize]},setX:function(Do,Uo){return this.array[Do*this.itemSize]=Uo,this},getY:function(Do){return this.array[Do*this.itemSize+1]},setY:function(Do,Uo){return this.array[Do*this.itemSize+1]=Uo,this},getZ:function(Do){return this.array[Do*this.itemSize+2]},setZ:function(Do,Uo){return this.array[Do*this.itemSize+2]=Uo,this},getW:function(Do){return this.array[Do*this.itemSize+3]},setW:function(Do,Uo){return this.array[Do*this.itemSize+3]=Uo,this},setXY:function(Do,Uo,No){return Do*=this.itemSize,this.array[Do+0]=Uo,this.array[Do+1]=No,this},setXYZ:function(Do,Uo,No,Io){return Do*=this.itemSize,this.array[Do+0]=Uo,this.array[Do+1]=No,this.array[Do+2]=Io,this},setXYZW:function(Do,Uo,No,Io,zo){return Do*=this.itemSize,this.array[Do+0]=Uo,this.array[Do+1]=No,this.array[Do+2]=Io,this.array[Do+3]=zo,this},onUpload:function(Do){return this.onUploadCallback=Do,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},ke.prototype=Object.create(He.prototype),ke.prototype.constructor=ke,We.prototype=Object.create(He.prototype),We.prototype.constructor=We,Xe.prototype=Object.create(He.prototype),Xe.prototype.constructor=Xe,Object.assign(Ye.prototype,{computeGroups:function(Do){for(var No=[],Io=void 0,zo=Do.faces,Fo=0,Uo,Bo;Fo<zo.length;Fo++)Bo=zo[Fo],Bo.materialIndex!==Io&&(Io=Bo.materialIndex,void 0!==Uo&&(Uo.count=3*Fo-Uo.start,No.push(Uo)),Uo={start:3*Fo,materialIndex:Io});Uo!==void 0&&(Uo.count=3*Fo-Uo.start,No.push(Uo)),this.groups=No},fromGeometry:function(Do){var Uo=Do.faces,No=Do.vertices,Io=Do.faceVertexUvs,zo=Io[0]&&0<Io[0].length,Fo=Io[1]&&0<Io[1].length,Bo=Do.morphTargets,Oo=Bo.length,Go;if(0<Oo){Go=[];for(var Vo=0;Vo<Oo;Vo++)Go[Vo]=[];this.morphTargets.position=Go}var Ho=Do.morphNormals,ko=Ho.length,Wo;if(0<ko){Wo=[];for(var Vo=0;Vo<ko;Vo++)Wo[Vo]=[];this.morphTargets.normal=Wo}for(var Xo=Do.skinIndices,Yo=Do.skinWeights,jo=Xo.length===No.length,qo=Yo.length===No.length,Vo=0,Zo;Vo<Uo.length;Vo++){Zo=Uo[Vo],this.vertices.push(No[Zo.a],No[Zo.b],No[Zo.c]);var Qo=Zo.vertexNormals;if(3===Qo.length)this.normals.push(Qo[0],Qo[1],Qo[2]);else{var Jo=Zo.normal;this.normals.push(Jo,Jo,Jo)}var Ko=Zo.vertexColors;if(3===Ko.length)this.colors.push(Ko[0],Ko[1],Ko[2]);else{var $o=Zo.color;this.colors.push($o,$o,$o)}if(!0===zo){var es=Io[0][Vo];void 0===es?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',Vo),this.uvs.push(new T,new T,new T)):this.uvs.push(es[0],es[1],es[2])}if(!0===Fo){var es=Io[1][Vo];void 0===es?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',Vo),this.uvs2.push(new T,new T,new T)):this.uvs2.push(es[0],es[1],es[2])}for(var ts=0,rs;ts<Oo;ts++)rs=Bo[ts].vertices,Go[ts].push(rs[Zo.a],rs[Zo.b],rs[Zo.c]);for(var ts=0,as;ts<ko;ts++)as=Ho[ts].vertexNormals[Vo],Wo[ts].push(as.a,as.b,as.c);jo&&this.skinIndices.push(Xo[Zo.a],Xo[Zo.b],Xo[Zo.c]),qo&&this.skinWeights.push(Yo[Zo.a],Yo[Zo.b],Yo[Zo.c])}return this.computeGroups(Do),this.verticesNeedUpdate=Do.verticesNeedUpdate,this.normalsNeedUpdate=Do.normalsNeedUpdate,this.colorsNeedUpdate=Do.colorsNeedUpdate,this.uvsNeedUpdate=Do.uvsNeedUpdate,this.groupsNeedUpdate=Do.groupsNeedUpdate,this}});var Ao=0;Ze.prototype={constructor:Ze,isGeometry:!0,applyMatrix:function(Do){for(var Uo=new we().getNormalMatrix(Do),No=0,Io=this.vertices.length,zo;No<Io;No++)zo=this.vertices[No],zo.applyMatrix4(Do);for(var No=0,Io=this.faces.length,Fo;No<Io;No++){Fo=this.faces[No],Fo.normal.applyMatrix3(Uo).normalize();for(var Bo=0,Oo=Fo.vertexNormals.length;Bo<Oo;Bo++)Fo.vertexNormals[Bo].applyMatrix3(Uo).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationX(Uo),this.applyMatrix(Co),this}}(),rotateY:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationY(Uo),this.applyMatrix(Co),this}}(),rotateZ:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationZ(Uo),this.applyMatrix(Co),this}}(),translate:function(){var Co;return function(Uo,No,Io){return void 0===Co&&(Co=new S),Co.makeTranslation(Uo,No,Io),this.applyMatrix(Co),this}}(),scale:function(){var Co;return function(Uo,No,Io){return void 0===Co&&(Co=new S),Co.makeScale(Uo,No,Io),this.applyMatrix(Co),this}}(),lookAt:function(){var Co;return function(Uo){Co===void 0&&(Co=new Fe),Co.lookAt(Uo),Co.updateMatrix(),this.applyMatrix(Co.matrix)}}(),fromBufferGeometry:function(Do){function Uo(Ko,$o,es,ts){var rs=void 0===Bo?[]:[Ho[Ko].clone(),Ho[$o].clone(),Ho[es].clone()],as=void 0===Oo?[]:[No.colors[Ko].clone(),No.colors[$o].clone(),No.colors[es].clone()],is=new Ge(Ko,$o,es,rs,as,ts);No.faces.push(is),void 0!==Go&&No.faceVertexUvs[0].push([ko[Ko].clone(),ko[$o].clone(),ko[es].clone()]),void 0!==Vo&&No.faceVertexUvs[1].push([Wo[Ko].clone(),Wo[$o].clone(),Wo[es].clone()])}var No=this,Io=null===Do.index?void 0:Do.index.array,zo=Do.attributes,Fo=zo.position.array,Bo=void 0===zo.normal?void 0:zo.normal.array,Oo=void 0===zo.color?void 0:zo.color.array,Go=void 0===zo.uv?void 0:zo.uv.array,Vo=void 0===zo.uv2?void 0:zo.uv2.array;void 0!==Vo&&(this.faceVertexUvs[1]=[]);for(var Ho=[],ko=[],Wo=[],Xo=0,Yo=0;Xo<Fo.length;Xo+=3,Yo+=2)No.vertices.push(new E(Fo[Xo],Fo[Xo+1],Fo[Xo+2])),void 0!==Bo&&Ho.push(new E(Bo[Xo],Bo[Xo+1],Bo[Xo+2])),void 0!==Oo&&No.colors.push(new ve(Oo[Xo],Oo[Xo+1],Oo[Xo+2])),void 0!==Go&&ko.push(new T(Go[Yo],Go[Yo+1])),void 0!==Vo&&Wo.push(new T(Vo[Yo],Vo[Yo+1]));if(void 0!==Io){var jo=Do.groups;if(0<jo.length)for(var Xo=0;Xo<jo.length;Xo++)for(var qo=jo[Xo],Zo=qo.start,Qo=qo.count,Yo=Zo;Yo<Zo+Qo;Yo+=3)Uo(Io[Yo],Io[Yo+1],Io[Yo+2],qo.materialIndex);else for(var Xo=0;Xo<Io.length;Xo+=3)Uo(Io[Xo],Io[Xo+1],Io[Xo+2])}else for(var Xo=0;Xo<Fo.length/3;Xo+=3)Uo(Xo,Xo+1,Xo+2);return this.computeFaceNormals(),null!==Do.boundingBox&&(this.boundingBox=Do.boundingBox.clone()),null!==Do.boundingSphere&&(this.boundingSphere=Do.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var Do=this.boundingBox.getCenter().negate();return this.translate(Do.x,Do.y,Do.z),Do},normalize:function(){this.computeBoundingSphere();var Do=this.boundingSphere.center,Uo=this.boundingSphere.radius,No=0===Uo?1:1/Uo,Io=new S;return Io.set(No,0,0,-No*Do.x,0,No,0,-No*Do.y,0,0,No,-No*Do.z,0,0,0,1),this.applyMatrix(Io),this},computeFaceNormals:function(){for(var Do=new E,Uo=new E,No=0,Io=this.faces.length;No<Io;No++){var zo=this.faces[No],Fo=this.vertices[zo.a],Bo=this.vertices[zo.b],Oo=this.vertices[zo.c];Do.subVectors(Oo,Bo),Uo.subVectors(Fo,Bo),Do.cross(Uo),Do.normalize(),zo.normal.copy(Do)}},computeVertexNormals:function(Do){Do===void 0&&(Do=!0);var Uo,No,Io,zo,Fo,Bo;for(Bo=Array(this.vertices.length),Uo=0,No=this.vertices.length;Uo<No;Uo++)Bo[Uo]=new E;if(Do){var Oo,Go,Vo,Ho=new E,ko=new E;for(Io=0,zo=this.faces.length;Io<zo;Io++)Fo=this.faces[Io],Oo=this.vertices[Fo.a],Go=this.vertices[Fo.b],Vo=this.vertices[Fo.c],Ho.subVectors(Vo,Go),ko.subVectors(Oo,Go),Ho.cross(ko),Bo[Fo.a].add(Ho),Bo[Fo.b].add(Ho),Bo[Fo.c].add(Ho)}else for(this.computeFaceNormals(),Io=0,zo=this.faces.length;Io<zo;Io++)Fo=this.faces[Io],Bo[Fo.a].add(Fo.normal),Bo[Fo.b].add(Fo.normal),Bo[Fo.c].add(Fo.normal);for(Uo=0,No=this.vertices.length;Uo<No;Uo++)Bo[Uo].normalize();for(Io=0,zo=this.faces.length;Io<zo;Io++){Fo=this.faces[Io];var Wo=Fo.vertexNormals;3===Wo.length?(Wo[0].copy(Bo[Fo.a]),Wo[1].copy(Bo[Fo.b]),Wo[2].copy(Bo[Fo.c])):(Wo[0]=Bo[Fo.a].clone(),Wo[1]=Bo[Fo.b].clone(),Wo[2]=Bo[Fo.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var Do,Uo,No;for(this.computeFaceNormals(),Do=0,Uo=this.faces.length;Do<Uo;Do++){No=this.faces[Do];var Io=No.vertexNormals;3===Io.length?(Io[0].copy(No.normal),Io[1].copy(No.normal),Io[2].copy(No.normal)):(Io[0]=No.normal.clone(),Io[1]=No.normal.clone(),Io[2]=No.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var Do,Uo,No,Io,zo;for(No=0,Io=this.faces.length;No<Io;No++)for(zo=this.faces[No],zo.__originalFaceNormal?zo.__originalFaceNormal.copy(zo.normal):zo.__originalFaceNormal=zo.normal.clone(),zo.__originalVertexNormals||(zo.__originalVertexNormals=[]),(Do=0,Uo=zo.vertexNormals.length);Do<Uo;Do++)zo.__originalVertexNormals[Do]?zo.__originalVertexNormals[Do].copy(zo.vertexNormals[Do]):zo.__originalVertexNormals[Do]=zo.vertexNormals[Do].clone();var Fo=new Ze;for(Fo.faces=this.faces,Do=0,Uo=this.morphTargets.length;Do<Uo;Do++){if(!this.morphNormals[Do]){this.morphNormals[Do]={},this.morphNormals[Do].faceNormals=[],this.morphNormals[Do].vertexNormals=[];var Bo=this.morphNormals[Do].faceNormals,Oo=this.morphNormals[Do].vertexNormals,Go,Vo;for(No=0,Io=this.faces.length;No<Io;No++)Go=new E,Vo={a:new E,b:new E,c:new E},Bo.push(Go),Oo.push(Vo)}var Ho=this.morphNormals[Do];Fo.vertices=this.morphTargets[Do].vertices,Fo.computeFaceNormals(),Fo.computeVertexNormals();var Go,Vo;for(No=0,Io=this.faces.length;No<Io;No++)zo=this.faces[No],Go=Ho.faceNormals[No],Vo=Ho.vertexNormals[No],Go.copy(zo.normal),Vo.a.copy(zo.vertexNormals[0]),Vo.b.copy(zo.vertexNormals[1]),Vo.c.copy(zo.vertexNormals[2])}for(No=0,Io=this.faces.length;No<Io;No++)zo=this.faces[No],zo.normal=zo.__originalFaceNormal,zo.vertexNormals=zo.__originalVertexNormals},computeLineDistances:function(){for(var Do=0,Uo=this.vertices,No=0,Io=Uo.length;No<Io;No++)0<No&&(Do+=Uo[No].distanceTo(Uo[No-1])),this.lineDistances[No]=Do},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Re),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Pe),this.boundingSphere.setFromPoints(this.vertices)},merge:function(Do,Uo,No){if(!1===(Do&&Do.isGeometry))return void console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',Do);var zo=this.vertices.length,Fo=this.vertices,Bo=Do.vertices,Oo=this.faces,Go=Do.faces,Vo=this.faceVertexUvs[0],Ho=Do.faceVertexUvs[0],ko=this.colors,Wo=Do.colors,Io;No===void 0&&(No=0),Uo!==void 0&&(Io=new we().getNormalMatrix(Uo));for(var Xo=0,Yo=Bo.length;Xo<Yo;Xo++){var jo=Bo[Xo],qo=jo.clone();Uo!==void 0&&qo.applyMatrix4(Uo),Fo.push(qo)}for(var Xo=0,Yo=Wo.length;Xo<Yo;Xo++)ko.push(Wo[Xo].clone());for(Xo=0,Yo=Go.length;Xo<Yo;Xo++){var Zo=Go[Xo],$o=Zo.vertexNormals,es=Zo.vertexColors,Qo,Jo,Ko;Qo=new Ge(Zo.a+zo,Zo.b+zo,Zo.c+zo),Qo.normal.copy(Zo.normal),Io!==void 0&&Qo.normal.applyMatrix3(Io).normalize();for(var ts=0,rs=$o.length;ts<rs;ts++)Jo=$o[ts].clone(),void 0!==Io&&Jo.applyMatrix3(Io).normalize(),Qo.vertexNormals.push(Jo);Qo.color.copy(Zo.color);for(var ts=0,rs=es.length;ts<rs;ts++)Ko=es[ts],Qo.vertexColors.push(Ko.clone());Qo.materialIndex=Zo.materialIndex+No,Oo.push(Qo)}for(Xo=0,Yo=Ho.length;Xo<Yo;Xo++){var as=Ho[Xo],is=[];if(void 0!==as){for(var ts=0,rs=as.length;ts<rs;ts++)is.push(as[ts].clone());Vo.push(is)}}},mergeMesh:function(Do){return!1===(Do&&Do.isMesh)?void console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',Do):void(Do.matrixAutoUpdate&&Do.updateMatrix(),this.merge(Do.geometry,Do.matrix))},mergeVertices:function(){var Do={},Uo=[],No=[],Bo=Math.pow(10,4),Io,zo,Oo,Go,Vo,Ho,ko,Wo;for(Oo=0,Go=this.vertices.length;Oo<Go;Oo++)Io=this.vertices[Oo],zo=Math.round(Io.x*Bo)+'_'+Math.round(Io.y*Bo)+'_'+Math.round(Io.z*Bo),void 0===Do[zo]?(Do[zo]=Oo,Uo.push(this.vertices[Oo]),No[Oo]=Uo.length-1):No[Oo]=No[Do[zo]];var Xo=[];for(Oo=0,Go=this.faces.length;Oo<Go;Oo++){Vo=this.faces[Oo],Vo.a=No[Vo.a],Vo.b=No[Vo.b],Vo.c=No[Vo.c],Ho=[Vo.a,Vo.b,Vo.c];for(var Yo=0;3>Yo;Yo++)if(Ho[Yo]===Ho[(Yo+1)%3]){Xo.push(Oo);break}}for(Oo=Xo.length-1;0<=Oo;Oo--){var jo=Xo[Oo];for(this.faces.splice(jo,1),ko=0,Wo=this.faceVertexUvs.length;ko<Wo;ko++)this.faceVertexUvs[ko].splice(jo,1)}var qo=this.vertices.length-Uo.length;return this.vertices=Uo,qo},sortFacesByMaterialIndex:function(){for(var Uo=this.faces,No=Uo.length,Io=0;Io<No;Io++)Uo[Io]._id=Io;Uo.sort(function(Vo,Ho){return Vo.materialIndex-Ho.materialIndex});var zo=this.faceVertexUvs[0],Fo=this.faceVertexUvs[1],Bo,Oo;zo&&zo.length===No&&(Bo=[]),Fo&&Fo.length===No&&(Oo=[]);for(var Io=0,Go;Io<No;Io++)Go=Uo[Io]._id,Bo&&Bo.push(zo[Go]),Oo&&Oo.push(Fo[Go]);Bo&&(this.faceVertexUvs[0]=Bo),Oo&&(this.faceVertexUvs[1]=Oo)},toJSON:function(){function Do(ss,ls,ds){return ds?ss|1<<ls:ss&~(1<<ls)}function Uo(ss){var ls=ss.x.toString()+ss.y.toString()+ss.z.toString();return void 0===Wo[ls]?(Wo[ls]=ko.length/3,ko.push(ss.x,ss.y,ss.z),Wo[ls]):Wo[ls]}function No(ss){var ls=ss.r.toString()+ss.g.toString()+ss.b.toString();return void 0===Yo[ls]?(Yo[ls]=Xo.length,Xo.push(ss.getHex()),Yo[ls]):Yo[ls]}function Io(ss){var ls=ss.x.toString()+ss.y.toString();return void 0===qo[ls]?(qo[ls]=jo.length/2,jo.push(ss.x,ss.y),qo[ls]):qo[ls]}var zo={metadata:{version:4.4,type:'Geometry',generator:'Geometry.toJSON'}};if(zo.uuid=this.uuid,zo.type=this.type,''!==this.name&&(zo.name=this.name),void 0!==this.parameters){var Fo=this.parameters;for(var Bo in Fo)void 0!==Fo[Bo]&&(zo[Bo]=Fo[Bo]);return zo}for(var Oo=[],Go=0,Vo;Go<this.vertices.length;Go++)Vo=this.vertices[Go],Oo.push(Vo.x,Vo.y,Vo.z);for(var Ho=[],ko=[],Wo={},Xo=[],Yo={},jo=[],qo={},Go=0;Go<this.faces.length;Go++){var Zo=this.faces[Go],Ko=void 0!==this.faceVertexUvs[0][Go],$o=0<Zo.normal.length(),es=0<Zo.vertexNormals.length,ts=1!==Zo.color.r||1!==Zo.color.g||1!==Zo.color.b,rs=0<Zo.vertexColors.length,as=0;if(as=Do(as,0,0),as=Do(as,1,!0),as=Do(as,2,!1),as=Do(as,3,Ko),as=Do(as,4,$o),as=Do(as,5,es),as=Do(as,6,ts),as=Do(as,7,rs),Ho.push(as),Ho.push(Zo.a,Zo.b,Zo.c),Ho.push(Zo.materialIndex),Ko){var is=this.faceVertexUvs[0][Go];Ho.push(Io(is[0]),Io(is[1]),Io(is[2]))}if($o&&Ho.push(Uo(Zo.normal)),es){var ns=Zo.vertexNormals;Ho.push(Uo(ns[0]),Uo(ns[1]),Uo(ns[2]))}if(ts&&Ho.push(No(Zo.color)),rs){var os=Zo.vertexColors;Ho.push(No(os[0]),No(os[1]),No(os[2]))}}return zo.data={},zo.data.vertices=Oo,zo.data.normals=ko,0<Xo.length&&(zo.data.colors=Xo),0<jo.length&&(zo.data.uvs=[jo]),zo.data.faces=Ho,zo},clone:function(){return new Ze().copy(this)},copy:function(Do){var Uo,No,Io,zo,Fo,Bo;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=Do.name;var Oo=Do.vertices;for(Uo=0,No=Oo.length;Uo<No;Uo++)this.vertices.push(Oo[Uo].clone());var Go=Do.colors;for(Uo=0,No=Go.length;Uo<No;Uo++)this.colors.push(Go[Uo].clone());var Vo=Do.faces;for(Uo=0,No=Vo.length;Uo<No;Uo++)this.faces.push(Vo[Uo].clone());for(Uo=0,No=Do.faceVertexUvs.length;Uo<No;Uo++){var Ho=Do.faceVertexUvs[Uo];for(void 0===this.faceVertexUvs[Uo]&&(this.faceVertexUvs[Uo]=[]),Io=0,zo=Ho.length;Io<zo;Io++){var ko=Ho[Io],Wo=[];for(Fo=0,Bo=ko.length;Fo<Bo;Fo++){var Xo=ko[Fo];Wo.push(Xo.clone())}this.faceVertexUvs[Uo].push(Wo)}}var Yo=Do.morphTargets;for(Uo=0,No=Yo.length;Uo<No;Uo++){var jo={name:Yo[Uo].name};if(void 0!==Yo[Uo].vertices)for(jo.vertices=[],Io=0,zo=Yo[Uo].vertices.length;Io<zo;Io++)jo.vertices.push(Yo[Uo].vertices[Io].clone());if(void 0!==Yo[Uo].normals)for(jo.normals=[],Io=0,zo=Yo[Uo].normals.length;Io<zo;Io++)jo.normals.push(Yo[Uo].normals[Io].clone());this.morphTargets.push(jo)}var qo=Do.morphNormals;for(Uo=0,No=qo.length;Uo<No;Uo++){var Zo={};if(void 0!==qo[Uo].vertexNormals)for(Zo.vertexNormals=[],Io=0,zo=qo[Uo].vertexNormals.length;Io<zo;Io++){var Qo=qo[Uo].vertexNormals[Io],Jo={};Jo.a=Qo.a.clone(),Jo.b=Qo.b.clone(),Jo.c=Qo.c.clone(),Zo.vertexNormals.push(Jo)}if(void 0!==qo[Uo].faceNormals)for(Zo.faceNormals=[],Io=0,zo=qo[Uo].faceNormals.length;Io<zo;Io++)Zo.faceNormals.push(qo[Uo].faceNormals[Io].clone());this.morphNormals.push(Zo)}var Ko=Do.skinWeights;for(Uo=0,No=Ko.length;Uo<No;Uo++)this.skinWeights.push(Ko[Uo].clone());var $o=Do.skinIndices;for(Uo=0,No=$o.length;Uo<No;Uo++)this.skinIndices.push($o[Uo].clone());var es=Do.lineDistances;for(Uo=0,No=es.length;Uo<No;Uo++)this.lineDistances.push(es[Uo]);var ts=Do.boundingBox;null!==ts&&(this.boundingBox=ts.clone());var rs=Do.boundingSphere;return null!==rs&&(this.boundingSphere=rs.clone()),this.elementsNeedUpdate=Do.elementsNeedUpdate,this.verticesNeedUpdate=Do.verticesNeedUpdate,this.uvsNeedUpdate=Do.uvsNeedUpdate,this.normalsNeedUpdate=Do.normalsNeedUpdate,this.colorsNeedUpdate=Do.colorsNeedUpdate,this.lineDistancesNeedUpdate=Do.lineDistancesNeedUpdate,this.groupsNeedUpdate=Do.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(Ze.prototype,M.prototype),Qe.prototype={constructor:Qe,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(Do){this.index=Array.isArray(Do)?new(65535<je(Do)?We:ke)(Do,1):Do},addAttribute:function(Do,Uo){return!1===(Uo&&Uo.isBufferAttribute)&&!1===(Uo&&Uo.isInterleavedBufferAttribute)?(console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).'),void this.addAttribute(Do,new He(arguments[1],arguments[2]))):'index'===Do?(console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.'),void this.setIndex(Uo)):(this.attributes[Do]=Uo,this)},getAttribute:function(Do){return this.attributes[Do]},removeAttribute:function(Do){return delete this.attributes[Do],this},addGroup:function(Do,Uo,No){this.groups.push({start:Do,count:Uo,materialIndex:No===void 0?0:No})},clearGroups:function(){this.groups=[]},setDrawRange:function(Do,Uo){this.drawRange.start=Do,this.drawRange.count=Uo},applyMatrix:function(Do){var Uo=this.attributes.position;void 0!==Uo&&(Do.applyToBufferAttribute(Uo),Uo.needsUpdate=!0);var No=this.attributes.normal;if(void 0!==No){var Io=new we().getNormalMatrix(Do);Io.applyToBufferAttribute(No),No.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationX(Uo),this.applyMatrix(Co),this}}(),rotateY:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationY(Uo),this.applyMatrix(Co),this}}(),rotateZ:function(){var Co;return function(Uo){return void 0===Co&&(Co=new S),Co.makeRotationZ(Uo),this.applyMatrix(Co),this}}(),translate:function(){var Co;return function(Uo,No,Io){return void 0===Co&&(Co=new S),Co.makeTranslation(Uo,No,Io),this.applyMatrix(Co),this}}(),scale:function(){var Co;return function(Uo,No,Io){return void 0===Co&&(Co=new S),Co.makeScale(Uo,No,Io),this.applyMatrix(Co),this}}(),lookAt:function(){var Co;return function(Uo){Co===void 0&&(Co=new Fe),Co.lookAt(Uo),Co.updateMatrix(),this.applyMatrix(Co.matrix)}}(),center:function(){this.computeBoundingBox();var Do=this.boundingBox.getCenter().negate();return this.translate(Do.x,Do.y,Do.z),Do},setFromObject:function(Do){var Uo=Do.geometry;if(Do.isPoints||Do.isLine){var No=new Xe(3*Uo.vertices.length,3),Io=new Xe(3*Uo.colors.length,3);if(this.addAttribute('position',No.copyVector3sArray(Uo.vertices)),this.addAttribute('color',Io.copyColorsArray(Uo.colors)),Uo.lineDistances&&Uo.lineDistances.length===Uo.vertices.length){var zo=new Xe(Uo.lineDistances.length,1);this.addAttribute('lineDistance',zo.copyArray(Uo.lineDistances))}null!==Uo.boundingSphere&&(this.boundingSphere=Uo.boundingSphere.clone()),null!==Uo.boundingBox&&(this.boundingBox=Uo.boundingBox.clone())}else Do.isMesh&&Uo&&Uo.isGeometry&&this.fromGeometry(Uo);return this},updateFromObject:function(Do){var Uo=Do.geometry;if(Do.isMesh){var No=Uo.__directGeometry;if(!0===Uo.elementsNeedUpdate&&(No=void 0,Uo.elementsNeedUpdate=!1),void 0===No)return this.fromGeometry(Uo);No.verticesNeedUpdate=Uo.verticesNeedUpdate,No.normalsNeedUpdate=Uo.normalsNeedUpdate,No.colorsNeedUpdate=Uo.colorsNeedUpdate,No.uvsNeedUpdate=Uo.uvsNeedUpdate,No.groupsNeedUpdate=Uo.groupsNeedUpdate,Uo.verticesNeedUpdate=!1,Uo.normalsNeedUpdate=!1,Uo.colorsNeedUpdate=!1,Uo.uvsNeedUpdate=!1,Uo.groupsNeedUpdate=!1,Uo=No}var Io;return!0===Uo.verticesNeedUpdate&&(Io=this.attributes.position,void 0!==Io&&(Io.copyVector3sArray(Uo.vertices),Io.needsUpdate=!0),Uo.verticesNeedUpdate=!1),!0===Uo.normalsNeedUpdate&&(Io=this.attributes.normal,void 0!==Io&&(Io.copyVector3sArray(Uo.normals),Io.needsUpdate=!0),Uo.normalsNeedUpdate=!1),!0===Uo.colorsNeedUpdate&&(Io=this.attributes.color,void 0!==Io&&(Io.copyColorsArray(Uo.colors),Io.needsUpdate=!0),Uo.colorsNeedUpdate=!1),Uo.uvsNeedUpdate&&(Io=this.attributes.uv,void 0!==Io&&(Io.copyVector2sArray(Uo.uvs),Io.needsUpdate=!0),Uo.uvsNeedUpdate=!1),Uo.lineDistancesNeedUpdate&&(Io=this.attributes.lineDistance,void 0!==Io&&(Io.copyArray(Uo.lineDistances),Io.needsUpdate=!0),Uo.lineDistancesNeedUpdate=!1),Uo.groupsNeedUpdate&&(Uo.computeGroups(Do.geometry),this.groups=Uo.groups,Uo.groupsNeedUpdate=!1),this},fromGeometry:function(Do){return Do.__directGeometry=new Ye().fromGeometry(Do),this.fromDirectGeometry(Do.__directGeometry)},fromDirectGeometry:function(Do){var Uo=new Float32Array(3*Do.vertices.length);if(this.addAttribute('position',new He(Uo,3).copyVector3sArray(Do.vertices)),0<Do.normals.length){var No=new Float32Array(3*Do.normals.length);this.addAttribute('normal',new He(No,3).copyVector3sArray(Do.normals))}if(0<Do.colors.length){var Io=new Float32Array(3*Do.colors.length);this.addAttribute('color',new He(Io,3).copyColorsArray(Do.colors))}if(0<Do.uvs.length){var zo=new Float32Array(2*Do.uvs.length);this.addAttribute('uv',new He(zo,2).copyVector2sArray(Do.uvs))}if(0<Do.uvs2.length){var Fo=new Float32Array(2*Do.uvs2.length);this.addAttribute('uv2',new He(Fo,2).copyVector2sArray(Do.uvs2))}if(0<Do.indices.length){var Bo=65535<je(Do.indices)?Uint32Array:Uint16Array,Oo=new Bo(3*Do.indices.length);this.setIndex(new He(Oo,1).copyIndicesArray(Do.indices))}for(var Go in this.groups=Do.groups,Do.morphTargets){for(var Vo=[],Ho=Do.morphTargets[Go],ko=0,Wo=Ho.length;ko<Wo;ko++){var Xo=Ho[ko],Yo=new Xe(3*Xo.length,3);Vo.push(Yo.copyVector3sArray(Xo))}this.morphAttributes[Go]=Vo}if(0<Do.skinIndices.length){var jo=new Xe(4*Do.skinIndices.length,4);this.addAttribute('skinIndex',jo.copyVector4sArray(Do.skinIndices))}if(0<Do.skinWeights.length){var qo=new Xe(4*Do.skinWeights.length,4);this.addAttribute('skinWeight',qo.copyVector4sArray(Do.skinWeights))}return null!==Do.boundingSphere&&(this.boundingSphere=Do.boundingSphere.clone()),null!==Do.boundingBox&&(this.boundingBox=Do.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Re);var Do=this.attributes.position;Do===void 0?this.boundingBox.makeEmpty():this.boundingBox.setFromBufferAttribute(Do),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var Co=new Re,Do=new E;return function(){null===this.boundingSphere&&(this.boundingSphere=new Pe);var No=this.attributes.position;if(No){var Io=this.boundingSphere.center;Co.setFromBufferAttribute(No),Co.getCenter(Io);for(var zo=0,Fo=0,Bo=No.count;Fo<Bo;Fo++)Do.x=No.getX(Fo),Do.y=No.getY(Fo),Do.z=No.getZ(Fo),zo=Math.max(zo,Io.distanceToSquared(Do));this.boundingSphere.radius=Math.sqrt(zo),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var Do=this.index,Uo=this.attributes,No=this.groups;if(Uo.position){var Io=Uo.position.array;if(Uo.normal===void 0)this.addAttribute('normal',new He(new Float32Array(Io.length),3));else for(var zo=Uo.normal.array,Fo=0,Bo=zo.length;Fo<Bo;Fo++)zo[Fo]=0;var Oo=Uo.normal.array,Go,Vo,Ho,ko=new E,Wo=new E,Xo=new E,Yo=new E,jo=new E;if(Do){var qo=Do.array;0===No.length&&this.addGroup(0,qo.length);for(var Zo=0,Qo=No.length;Zo<Qo;++Zo)for(var Jo=No[Zo],Ko=Jo.start,$o=Jo.count,Fo=Ko,Bo=Ko+$o;Fo<Bo;Fo+=3)Go=3*qo[Fo+0],Vo=3*qo[Fo+1],Ho=3*qo[Fo+2],ko.fromArray(Io,Go),Wo.fromArray(Io,Vo),Xo.fromArray(Io,Ho),Yo.subVectors(Xo,Wo),jo.subVectors(ko,Wo),Yo.cross(jo),Oo[Go]+=Yo.x,Oo[Go+1]+=Yo.y,Oo[Go+2]+=Yo.z,Oo[Vo]+=Yo.x,Oo[Vo+1]+=Yo.y,Oo[Vo+2]+=Yo.z,Oo[Ho]+=Yo.x,Oo[Ho+1]+=Yo.y,Oo[Ho+2]+=Yo.z}else for(var Fo=0,Bo=Io.length;Fo<Bo;Fo+=9)ko.fromArray(Io,Fo),Wo.fromArray(Io,Fo+3),Xo.fromArray(Io,Fo+6),Yo.subVectors(Xo,Wo),jo.subVectors(ko,Wo),Yo.cross(jo),Oo[Fo]=Yo.x,Oo[Fo+1]=Yo.y,Oo[Fo+2]=Yo.z,Oo[Fo+3]=Yo.x,Oo[Fo+4]=Yo.y,Oo[Fo+5]=Yo.z,Oo[Fo+6]=Yo.x,Oo[Fo+7]=Yo.y,Oo[Fo+8]=Yo.z;this.normalizeNormals(),Uo.normal.needsUpdate=!0}},merge:function(Do,Uo){if(!1===(Do&&Do.isBufferGeometry))return void console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',Do);Uo===void 0&&(Uo=0);var No=this.attributes;for(var Io in No)if(Do.attributes[Io]!==void 0)for(var zo=No[Io],Fo=zo.array,Bo=Do.attributes[Io],Oo=Bo.array,Go=Bo.itemSize,Vo=0,Ho=Go*Uo;Vo<Oo.length;Vo++,Ho++)Fo[Ho]=Oo[Vo];return this},normalizeNormals:function(){for(var Do=this.attributes.normal.array,Fo=0,Bo=Do.length,Uo,No,Io,zo;Fo<Bo;Fo+=3)Uo=Do[Fo],No=Do[Fo+1],Io=Do[Fo+2],zo=1/Math.sqrt(Uo*Uo+No*No+Io*Io),Do[Fo]*=zo,Do[Fo+1]*=zo,Do[Fo+2]*=zo},toNonIndexed:function(){if(null===this.index)return console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.'),this;var Do=new Qe,Uo=this.index.array,No=this.attributes;for(var Io in No){for(var zo=No[Io],Fo=zo.array,Bo=zo.itemSize,Oo=new Fo.constructor(Uo.length*Bo),Go=0,Vo=0,Ho=0,ko=Uo.length;Ho<ko;Ho++){Go=Uo[Ho]*Bo;for(var Wo=0;Wo<Bo;Wo++)Oo[Vo++]=Fo[Go++]}Do.addAttribute(Io,new He(Oo,Bo))}return Do},toJSON:function(){var Do={metadata:{version:4.4,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};if(Do.uuid=this.uuid,Do.type=this.type,''!==this.name&&(Do.name=this.name),void 0!==this.parameters){var Uo=this.parameters;for(var No in Uo)void 0!==Uo[No]&&(Do[No]=Uo[No]);return Do}Do.data={attributes:{}};var Io=this.index;if(null!==Io){var zo=Array.prototype.slice.call(Io.array);Do.data.index={type:Io.array.constructor.name,array:zo}}var Fo=this.attributes;for(var No in Fo){var Bo=Fo[No],zo=Array.prototype.slice.call(Bo.array);Do.data.attributes[No]={itemSize:Bo.itemSize,type:Bo.array.constructor.name,array:zo,normalized:Bo.normalized}}var Oo=this.groups;0<Oo.length&&(Do.data.groups=JSON.parse(JSON.stringify(Oo)));var Go=this.boundingSphere;return null!==Go&&(Do.data.boundingSphere={center:Go.center.toArray(),radius:Go.radius}),Do},clone:function(){return new Qe().copy(this)},copy:function(Do){var Uo,No,Io;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=Do.name;var zo=Do.index;null!==zo&&this.setIndex(zo.clone());var Fo=Do.attributes;for(Uo in Fo){var Bo=Fo[Uo];this.addAttribute(Uo,Bo.clone())}var Oo=Do.morphAttributes;for(Uo in Oo){var Go=[],Vo=Oo[Uo];for(No=0,Io=Vo.length;No<Io;No++)Go.push(Vo[No].clone());this.morphAttributes[Uo]=Go}var Ho=Do.groups;for(No=0,Io=Ho.length;No<Io;No++){var ko=Ho[No];this.addGroup(ko.start,ko.count,ko.materialIndex)}var Wo=Do.boundingBox;null!==Wo&&(this.boundingBox=Wo.clone());var Xo=Do.boundingSphere;return null!==Xo&&(this.boundingSphere=Xo.clone()),this.drawRange.start=Do.drawRange.start,this.drawRange.count=Do.drawRange.count,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},Qe.MaxIndex=65535,Object.assign(Qe.prototype,M.prototype),Je.prototype=Object.assign(Object.create(Fe.prototype),{constructor:Je,isMesh:!0,setDrawMode:function(Do){this.drawMode=Do},copy:function(Do){return Fe.prototype.copy.call(this,Do),this.drawMode=Do.drawMode,this},updateMorphTargets:function(){var Do=this.geometry.morphTargets;if(Do!==void 0&&0<Do.length){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var Uo=0,No=Do.length;Uo<No;Uo++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[Do[Uo].name]=Uo}},raycast:function(){function Co(Zo,Qo,Jo,Ko,$o,es,ts){return Oe.barycoordFromPoint(Zo,Qo,Jo,Ko,Yo),$o.multiplyScalar(Yo.x),es.multiplyScalar(Yo.y),ts.multiplyScalar(Yo.z),$o.add(es).add(ts),$o.clone()}function Do(Zo,Qo,Jo,Ko,$o,es,ts){var as=Zo.material,rs;if(rs=as.side===nr?Jo.intersectTriangle(es,$o,Ko,!0,ts):Jo.intersectTriangle(Ko,$o,es,as.side!==or,ts),null===rs)return null;qo.copy(ts),qo.applyMatrix4(Zo.matrixWorld);var is=Qo.ray.origin.distanceTo(qo);return is<Qo.near||is>Qo.far?null:{distance:is,point:qo.clone(),object:Zo}}function Uo(Zo,Qo,Jo,Ko,$o,es,ts,rs){Fo.fromBufferAttribute(Ko,es),Bo.fromBufferAttribute(Ko,ts),Oo.fromBufferAttribute(Ko,rs);var as=Do(Zo,Qo,Jo,Fo,Bo,Oo,jo);return as&&($o&&(ko.fromBufferAttribute($o,es),Wo.fromBufferAttribute($o,ts),Xo.fromBufferAttribute($o,rs),as.uv=Co(jo,Fo,Bo,Oo,ko,Wo,Xo)),as.face=new Ge(es,ts,rs,Oe.normal(Fo,Bo,Oo)),as.faceIndex=es),as}var No=new S,Io=new Ne,zo=new Pe,Fo=new E,Bo=new E,Oo=new E,Go=new E,Vo=new E,Ho=new E,ko=new T,Wo=new T,Xo=new T,Yo=new E,jo=new E,qo=new E;return function(Qo,Jo){var Ko=this.geometry,$o=this.material,es=this.matrixWorld;if(void 0!==$o&&(null===Ko.boundingSphere&&Ko.computeBoundingSphere(),zo.copy(Ko.boundingSphere),zo.applyMatrix4(es),!1!==Qo.ray.intersectsSphere(zo))&&(No.getInverse(es),Io.copy(Qo.ray).applyMatrix4(No),null===Ko.boundingBox||!1!==Io.intersectsBox(Ko.boundingBox))){var ts;if(Ko.isBufferGeometry){var ns=Ko.index,os=Ko.attributes.position,ss=Ko.attributes.uv,rs,as,is,ls,ds;if(null!==ns)for(ls=0,ds=ns.count;ls<ds;ls+=3)rs=ns.getX(ls),as=ns.getX(ls+1),is=ns.getX(ls+2),ts=Uo(this,Qo,Io,os,ss,rs,as,is),ts&&(ts.faceIndex=Math.floor(ls/3),Jo.push(ts));else for(ls=0,ds=os.count;ls<ds;ls+=3)rs=ls,as=ls+1,is=ls+2,ts=Uo(this,Qo,Io,os,ss,rs,as,is),ts&&(ts.index=rs,Jo.push(ts))}else if(Ko.isGeometry){var ms=$o&&$o.isMultiMaterial,fs=!0===ms?$o.materials:null,gs=Ko.vertices,hs=Ko.faces,_s=Ko.faceVertexUvs[0],cs,ps,us,xs;0<_s.length&&(xs=_s);for(var vs=0,ys=hs.length;vs<ys;vs++){var Es=hs[vs],bs=!0===ms?fs[Es.materialIndex]:$o;if(void 0!==bs){if(cs=gs[Es.a],ps=gs[Es.b],us=gs[Es.c],!0===bs.morphTargets){var Ss=Ko.morphTargets,Ms=this.morphTargetInfluences;Fo.set(0,0,0),Bo.set(0,0,0),Oo.set(0,0,0);for(var Ts=0,Ls=Ss.length,As;Ts<Ls;Ts++)if(As=Ms[Ts],0!==As){var Rs=Ss[Ts].vertices;Fo.addScaledVector(Go.subVectors(Rs[Es.a],cs),As),Bo.addScaledVector(Vo.subVectors(Rs[Es.b],ps),As),Oo.addScaledVector(Ho.subVectors(Rs[Es.c],us),As)}Fo.add(cs),Bo.add(ps),Oo.add(us),cs=Fo,ps=Bo,us=Oo}if(ts=Do(this,Qo,Io,cs,ps,us,jo),ts){if(xs){var Ps=xs[vs];ko.copy(Ps[0]),Wo.copy(Ps[1]),Xo.copy(Ps[2]),ts.uv=Co(jo,cs,ps,us,ko,Wo,Xo)}ts.face=Es,ts.faceIndex=vs,Jo.push(ts)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ke.prototype=Object.create(Qe.prototype),Ke.prototype.constructor=Ke,$e.prototype=Object.create(Qe.prototype),$e.prototype.constructor=$e,et.prototype=Object.create(Fe.prototype),et.prototype.constructor=et,et.prototype.isCamera=!0,et.prototype.getWorldDirection=function(){var Co=new _;return function(Uo){var No=Uo||new E;return this.getWorldQuaternion(Co),No.set(0,0,-1).applyQuaternion(Co)}}(),et.prototype.lookAt=function(){var Co=new S;return function(Uo){Co.lookAt(this.position,Uo,this.up),this.quaternion.setFromRotationMatrix(Co)}}(),et.prototype.clone=function(){return new this.constructor().copy(this)},et.prototype.copy=function(Co){return Fe.prototype.copy.call(this,Co),this.matrixWorldInverse.copy(Co.matrixWorldInverse),this.projectionMatrix.copy(Co.projectionMatrix),this},tt.prototype=Object.assign(Object.create(et.prototype),{constructor:tt,isPerspectiveCamera:!0,copy:function(Do){return et.prototype.copy.call(this,Do),this.fov=Do.fov,this.zoom=Do.zoom,this.near=Do.near,this.far=Do.far,this.focus=Do.focus,this.aspect=Do.aspect,this.view=null===Do.view?null:Object.assign({},Do.view),this.filmGauge=Do.filmGauge,this.filmOffset=Do.filmOffset,this},setFocalLength:function(Do){var Uo=0.5*this.getFilmHeight()/Do;this.fov=2*pi.RAD2DEG*Math.atan(Uo),this.updateProjectionMatrix()},getFocalLength:function(){var Do=Math.tan(0.5*pi.DEG2RAD*this.fov);return 0.5*this.getFilmHeight()/Do},getEffectiveFOV:function(){return 2*pi.RAD2DEG*Math.atan(Math.tan(0.5*pi.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(Do,Uo,No,Io,zo,Fo){this.aspect=Do/Uo,this.view={fullWidth:Do,fullHeight:Uo,offsetX:No,offsetY:Io,width:zo,height:Fo},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var Do=this.near,Uo=Do*Math.tan(0.5*pi.DEG2RAD*this.fov)/this.zoom,No=2*Uo,Io=this.aspect*No,zo=-0.5*Io,Fo=this.view;if(null!==Fo){var Bo=Fo.fullWidth,Oo=Fo.fullHeight;zo+=Fo.offsetX*Io/Bo,Uo-=Fo.offsetY*No/Oo,Io*=Fo.width/Bo,No*=Fo.height/Oo}var Go=this.filmOffset;0!==Go&&(zo+=Do*Go/this.getFilmWidth()),this.projectionMatrix.makePerspective(zo,zo+Io,Uo,Uo-No,Do,this.far)},toJSON:function(Do){var Uo=Fe.prototype.toJSON.call(this,Do);return Uo.object.fov=this.fov,Uo.object.zoom=this.zoom,Uo.object.near=this.near,Uo.object.far=this.far,Uo.object.focus=this.focus,Uo.object.aspect=this.aspect,null!==this.view&&(Uo.object.view=Object.assign({},this.view)),Uo.object.filmGauge=this.filmGauge,Uo.object.filmOffset=this.filmOffset,Uo}}),rt.prototype=Object.assign(Object.create(et.prototype),{constructor:rt,isOrthographicCamera:!0,copy:function(Do){return et.prototype.copy.call(this,Do),this.left=Do.left,this.right=Do.right,this.top=Do.top,this.bottom=Do.bottom,this.near=Do.near,this.far=Do.far,this.zoom=Do.zoom,this.view=null===Do.view?null:Object.assign({},Do.view),this},setViewOffset:function(Do,Uo,No,Io,zo,Fo){this.view={fullWidth:Do,fullHeight:Uo,offsetX:No,offsetY:Io,width:zo,height:Fo},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var Do=(this.right-this.left)/(2*this.zoom),Uo=(this.top-this.bottom)/(2*this.zoom),No=(this.right+this.left)/2,Io=(this.top+this.bottom)/2,zo=No-Do,Fo=No+Do,Bo=Io+Uo,Oo=Io-Uo;if(null!==this.view){var Go=this.zoom/(this.view.width/this.view.fullWidth),Vo=this.zoom/(this.view.height/this.view.fullHeight),Ho=(this.right-this.left)/this.view.width,ko=(this.top-this.bottom)/this.view.height;zo+=Ho*(this.view.offsetX/Go),Fo=zo+Ho*(this.view.width/Go),Bo-=ko*(this.view.offsetY/Vo),Oo=Bo-ko*(this.view.height/Vo)}this.projectionMatrix.makeOrthographic(zo,Fo,Bo,Oo,this.near,this.far)},toJSON:function(Do){var Uo=Fe.prototype.toJSON.call(this,Do);return Uo.object.zoom=this.zoom,Uo.object.left=this.left,Uo.object.right=this.right,Uo.object.top=this.top,Uo.object.bottom=this.bottom,Uo.object.near=this.near,Uo.object.far=this.far,null!==this.view&&(Uo.object.view=Object.assign({},this.view)),Uo}});var Ro=0;Ct.prototype=Object.create(Fe.prototype),Ct.prototype.constructor=Ct,Ct.prototype.copy=function(Co,Do){return Fe.prototype.copy.call(this,Co,Do),null!==Co.background&&(this.background=Co.background.clone()),null!==Co.fog&&(this.fog=Co.fog.clone()),null!==Co.overrideMaterial&&(this.overrideMaterial=Co.overrideMaterial.clone()),this.autoUpdate=Co.autoUpdate,this.matrixAutoUpdate=Co.matrixAutoUpdate,this},Ct.prototype.toJSON=function(Co){var Do=Fe.prototype.toJSON.call(this,Co);return null!==this.background&&(Do.object.background=this.background.toJSON(Co)),null!==this.fog&&(Do.object.fog=this.fog.toJSON()),Do},Dt.prototype=Object.create(L.prototype),Dt.prototype.constructor=Dt;var Po={enabled:!1,files:{},add:function(Do,Uo){!1===this.enabled||(this.files[Do]=Uo)},get:function(Do){return!1===this.enabled?void 0:this.files[Do]},remove:function(Do){delete this.files[Do]},clear:function(){this.files={}}},wo=new function(Co,Do,Uo){var No=this,Io=!1,zo=0,Fo=0;this.onStart=void 0,this.onLoad=Co,this.onProgress=Do,this.onError=Uo,this.itemStart=function(Bo){Fo++,!1===Io&&No.onStart!==void 0&&No.onStart(Bo,zo,Fo),Io=!0},this.itemEnd=function(Bo){zo++,No.onProgress!==void 0&&No.onProgress(Bo,zo,Fo),zo===Fo&&(Io=!1,No.onLoad!==void 0&&No.onLoad())},this.itemError=function(Bo){No.onError!==void 0&&No.onError(Bo)}};Object.assign(Nt.prototype,{load:function(Do,Uo,No,Io){void 0===Do&&(Do=''),void 0!==this.path&&(Do=this.path+Do);var zo=this,Fo=Po.get(Do);if(void 0!==Fo)return zo.manager.itemStart(Do),setTimeout(function(){Uo&&Uo(Fo),zo.manager.itemEnd(Do)},0),Fo;var Bo=document.createElementNS('http://www.w3.org/1999/xhtml','img');return Bo.addEventListener('load',function(){Po.add(Do,this),Uo&&Uo(this),zo.manager.itemEnd(Do)},!1),Bo.addEventListener('error',function(Oo){Io&&Io(Oo),zo.manager.itemError(Do)},!1),void 0!==this.crossOrigin&&(Bo.crossOrigin=this.crossOrigin),zo.manager.itemStart(Do),Bo.src=Do,Bo},setCrossOrigin:function(Do){return this.crossOrigin=Do,this},setPath:function(Do){return this.path=Do,this}}),Object.assign(It.prototype,{load:function(Do,Uo,No,Io){var zo=new L,Fo=new Nt(this.manager);return Fo.setCrossOrigin(this.crossOrigin),Fo.setPath(this.path),Fo.load(Do,function(Bo){var Oo=0<Do.search(/\.(jpg|jpeg)$/)||0===Do.search(/^data\:image\/jpeg/);zo.format=Oo?La:Aa,zo.image=Bo,zo.needsUpdate=!0,void 0!==Uo&&Uo(zo)},No,Io),zo},setCrossOrigin:function(Do){return this.crossOrigin=Do,this},setPath:function(Do){return this.path=Do,this}}),zt.prototype={constructor:zt,linePrecision:1,set:function(Do,Uo){this.ray.set(Do,Uo)},setFromCamera:function(Do,Uo){Uo&&Uo.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(Uo.matrixWorld),this.ray.direction.set(Do.x,Do.y,0.5).unproject(Uo).sub(this.ray.origin).normalize()):Uo&&Uo.isOrthographicCamera?(this.ray.origin.set(Do.x,Do.y,(Uo.near+Uo.far)/(Uo.near-Uo.far)).unproject(Uo),this.ray.direction.set(0,0,-1).transformDirection(Uo.matrixWorld)):console.error('THREE.Raycaster: Unsupported camera type.')},intersectObject:function(Do,Uo){var No=[];return Bt(Do,this,No,Uo),No.sort(Ft),No},intersectObjects:function(Do,Uo){var No=[];if(!1===Array.isArray(Do))return console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.'),No;for(var Io=0,zo=Do.length;Io<zo;Io++)Bt(Do[Io],this,No,Uo);return No.sort(Ft),No}},Ot.prototype=Object.create(Ze.prototype),Ot.prototype.constructor=Ot,Gt.prototype=Object.create(Qe.prototype),Gt.prototype.constructor=Gt,Vt.prototype=Object.create(Ze.prototype),Vt.prototype.constructor=Vt,Ht.prototype=Object.create(Qe.prototype),Ht.prototype.constructor=Ht,kt.prototype=Object.create(Ze.prototype),kt.prototype.constructor=kt,Wt.prototype=Object.create(Qe.prototype),Wt.prototype.constructor=Wt,Xt.prototype=Object.create(Ze.prototype),Xt.prototype.constructor=Xt,Yt.prototype=Object.create(Qe.prototype),Yt.prototype.constructor=Yt,THREE.VRControls=function(Co,Do){var No=this,Io,zo,Fo=new THREE.Matrix4,Bo=null;'VRFrameData'in window&&(Bo=new VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(function(Oo){zo=Oo,0<Oo.length?Io=Oo[0]:Do&&Do('VR input not available.')}).catch(function(){console.warn('THREE.VRControls: Unable to get VR Displays')}),this.scale=1,this.standing=!1,this.userHeight=1.6,this.getVRDisplay=function(){return Io},this.setVRDisplay=function(Oo){Io=Oo},this.getVRDisplays=function(){return console.warn('THREE.VRControls: getVRDisplays() is being deprecated.'),zo},this.getStandingMatrix=function(){return Fo},this.update=function(){if(Io){var Oo;Io.getFrameData?(Io.getFrameData(Bo),Oo=Bo.pose):Io.getPose&&(Oo=Io.getPose()),null!==Oo.orientation&&Co.quaternion.fromArray(Oo.orientation),null===Oo.position?Co.position.set(0,0,0):Co.position.fromArray(Oo.position),this.standing&&(Io.stageParameters?(Co.updateMatrix(),Fo.fromArray(Io.stageParameters.sittingToStandingTransform),Co.applyMatrix(Fo)):Co.position.setY(Co.position.y+this.userHeight)),Co.position.multiplyScalar(No.scale)}},this.resetPose=function(){Io&&Io.resetPose()},this.resetSensor=function(){console.warn('THREE.VRControls: .resetSensor() is now .resetPose().'),this.resetPose()},this.zeroSensor=function(){console.warn('THREE.VRControls: .zeroSensor() is now .resetPose().'),this.resetPose()},this.dispose=function(){Io=null}},THREE.VREffect=function(Co,Do){function No(){var es=Xo.isPresenting;if(Xo.isPresenting=void 0!==Bo&&Bo.isPresenting,Xo.isPresenting){var ts=Bo.getEyeParameters('left'),rs=ts.renderWidth,as=ts.renderHeight;es||(qo=Co.getPixelRatio(),Yo=Co.getSize(),Co.setPixelRatio(1),Co.setSize(2*rs,as,!1))}else es&&(Co.setPixelRatio(qo),Co.setSize(Yo.width,Yo.height,jo))}function Io(es){var ts=2/(es.leftTan+es.rightTan),rs=0.5*((es.leftTan-es.rightTan)*ts),as=2/(es.upTan+es.downTan),is=0.5*((es.upTan-es.downTan)*as);return{scale:[ts,as],offset:[rs,is]}}function zo(es,ts,rs,as){ts=void 0===ts||ts,rs=void 0===rs?0.01:rs,as=void 0===as?1e4:as;var is=ts?-1:1,ns=new THREE.Matrix4,os=ns.elements,ss=Io(es);return os[0]=ss.scale[0],os[1]=0,os[2]=ss.offset[0]*is,os[3]=0,os[4]=0,os[5]=ss.scale[1],os[6]=-ss.offset[1]*is,os[7]=0,os[8]=0,os[9]=0,os[10]=as/(rs-as)*-is,os[11]=as*rs/(rs-as),os[12]=0,os[13]=0,os[14]=is,os[15]=0,ns.transpose(),ns}function Fo(es,ts,rs,as){var is=Math.PI/180,ns={upTan:Math.tan(es.upDegrees*is),downTan:Math.tan(es.downDegrees*is),leftTan:Math.tan(es.leftDegrees*is),rightTan:Math.tan(es.rightDegrees*is)};return zo(ns,ts,rs,as)}var Bo,Oo,Go=new THREE.Vector3,Vo=new THREE.Vector3,Ho,ko,Wo=null;'VRFrameData'in window&&(Wo=new window.VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(function(es){Oo=es,0<es.length?Bo=es[0]:Do&&Do('HMD not available')}).catch(function(){console.warn('THREE.VREffect: Unable to get VR Displays')}),this.isPresenting=!1,this.scale=1;var Xo=this,Yo=Co.getSize(),jo=!1,qo=Co.getPixelRatio();this.getVRDisplay=function(){return Bo},this.setVRDisplay=function(es){Bo=es},this.getVRDisplays=function(){return console.warn('THREE.VREffect: getVRDisplays() is being deprecated.'),Oo},this.setSize=function(es,ts,rs){if(Yo={width:es,height:ts},jo=rs,Xo.isPresenting){var as=Bo.getEyeParameters('left');Co.setPixelRatio(1),Co.setSize(2*as.renderWidth,as.renderHeight,!1)}else Co.setPixelRatio(qo),Co.setSize(es,ts,rs)};var Zo=Co.domElement,Qo=[0,0,0.5,1],Jo=[0.5,0,0.5,1];window.addEventListener('vrdisplaypresentchange',No,!1),this.setFullScreen=function(es){return new Promise(function(ts,rs){return void 0===Bo?void rs(new Error('No VR hardware found.')):Xo.isPresenting===es?void ts():void(es?ts(Bo.requestPresent([{source:Zo}])):ts(Bo.exitPresent()))})},this.requestPresent=function(){return this.setFullScreen(!0)},this.exitPresent=function(){return this.setFullScreen(!1)},this.requestAnimationFrame=function(es){return void 0===Bo?window.requestAnimationFrame(es):Bo.requestAnimationFrame(es)},this.cancelAnimationFrame=function(es){Bo===void 0?window.cancelAnimationFrame(es):Bo.cancelAnimationFrame(es)},this.submitFrame=function(){Bo!==void 0&&Xo.isPresenting&&Bo.submitFrame()},this.autoSubmitFrame=!0;var Ko=new THREE.PerspectiveCamera;Ko.layers.enable(1);var $o=new THREE.PerspectiveCamera;$o.layers.enable(2),this.render=function(es,ts,rs,as){if(Bo&&Xo.isPresenting){var is=es.autoUpdate;is&&(es.updateMatrixWorld(),es.autoUpdate=!1);var ns=Bo.getEyeParameters('left'),os=Bo.getEyeParameters('right');Go.fromArray(ns.offset),Vo.fromArray(os.offset),Array.isArray(es)&&(console.warn('THREE.VREffect.render() no longer supports arrays. Use object.layers instead.'),es=es[0]);var ss=Co.getSize(),ls=Bo.getLayers(),ds,cs;if(ls.length){var ps=ls[0];ds=null!==ps.leftBounds&&4===ps.leftBounds.length?ps.leftBounds:Qo,cs=null!==ps.rightBounds&&4===ps.rightBounds.length?ps.rightBounds:Jo}else ds=Qo,cs=Jo;Ho={x:Math.round(ss.width*ds[0]),y:Math.round(ss.height*ds[1]),width:Math.round(ss.width*ds[2]),height:Math.round(ss.height*ds[3])},ko={x:Math.round(ss.width*cs[0]),y:Math.round(ss.height*cs[1]),width:Math.round(ss.width*cs[2]),height:Math.round(ss.height*cs[3])},rs?(Co.setRenderTarget(rs),rs.scissorTest=!0):(Co.setRenderTarget(null),Co.setScissorTest(!0)),(Co.autoClear||as)&&Co.clear(),null===ts.parent&&ts.updateMatrixWorld(),ts.matrixWorld.decompose(Ko.position,Ko.quaternion,Ko.scale),ts.matrixWorld.decompose($o.position,$o.quaternion,$o.scale);var us=this.scale;return Ko.translateOnAxis(Go,us),$o.translateOnAxis(Vo,us),Bo.getFrameData?(Bo.depthNear=ts.near,Bo.depthFar=ts.far,Bo.getFrameData(Wo),Ko.projectionMatrix.elements=Wo.leftProjectionMatrix,$o.projectionMatrix.elements=Wo.rightProjectionMatrix):(Ko.projectionMatrix=Fo(ns.fieldOfView,!0,ts.near,ts.far),$o.projectionMatrix=Fo(os.fieldOfView,!0,ts.near,ts.far)),rs?(rs.viewport.set(Ho.x,Ho.y,Ho.width,Ho.height),rs.scissor.set(Ho.x,Ho.y,Ho.width,Ho.height)):(Co.setViewport(Ho.x,Ho.y,Ho.width,Ho.height),Co.setScissor(Ho.x,Ho.y,Ho.width,Ho.height)),Co.render(es,Ko,rs,as),rs?(rs.viewport.set(ko.x,ko.y,ko.width,ko.height),rs.scissor.set(ko.x,ko.y,ko.width,ko.height)):(Co.setViewport(ko.x,ko.y,ko.width,ko.height),Co.setScissor(ko.x,ko.y,ko.width,ko.height)),Co.render(es,$o,rs,as),rs?(rs.viewport.set(0,0,ss.width,ss.height),rs.scissor.set(0,0,ss.width,ss.height),rs.scissorTest=!1,Co.setRenderTarget(null)):(Co.setViewport(0,0,ss.width,ss.height),Co.setScissorTest(!1)),is&&(es.autoUpdate=!0),void(Xo.autoSubmitFrame&&Xo.submitFrame())}Co.render(es,ts,rs,as)},this.dispose=function(){window.removeEventListener('vrdisplaypresentchange',No,!1)}},o.WebGLRenderer=function(Co){function Do(){return null===Ds?Xs:1}function Uo(){xl.init(),xl.scissor(Fs.copy(Ys).multiplyScalar(Xs)),xl.viewport(Os.copy(qs).multiplyScalar(Xs)),xl.buffers.color.setClear(Vs.r,Vs.g,Vs.b,Hs,ys)}function No(){Cs=null,zs=null,Is='',Ns=-1,xl.reset()}function Io(Ul){Ul.preventDefault(),No(),Uo(),_l.clear()}function zo(Ul){var Nl=Ul.target;Nl.removeEventListener('dispose',zo),Fo(Nl)}function Fo(Ul){Bo(Ul),_l.delete(Ul)}function Bo(Ul){var Nl=_l.get(Ul).program;Ul.program=void 0,Nl!==void 0&&bl.releaseProgram(Nl)}function Oo(Ul,Nl,Il,zl){var Fl;if(Il&&Il.isInstancedBufferGeometry&&(Fl=ul.get('ANGLE_instanced_arrays'),null===Fl))return void console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');zl===void 0&&(zl=0),xl.initAttributes();var Bl=Il.attributes,Ol=Nl.getAttributes(),Gl=Ul.defaultAttributeValues;for(var Vl in Ol){var Hl=Ol[Vl];if(0<=Hl){var Wl=Bl[Vl];if(Wl!==void 0){var Xl=Wl.normalized,Yl=Wl.itemSize,ql=El.getAttributeProperties(Wl),Zl=ql.__webglBuffer,Ql=ql.type,Jl=ql.bytesPerElement;if(Wl.isInterleavedBufferAttribute){var Kl=Wl.data,$l=Kl.stride,ed=Wl.offset;Kl&&Kl.isInstancedInterleavedBuffer?(xl.enableAttributeAndDivisor(Hl,Kl.meshPerAttribute,Fl),Il.maxInstancedCount===void 0&&(Il.maxInstancedCount=Kl.meshPerAttribute*Kl.count)):xl.enableAttribute(Hl),dl.bindBuffer(dl.ARRAY_BUFFER,Zl),dl.vertexAttribPointer(Hl,Yl,Ql,Xl,$l*Jl,(zl*$l+ed)*Jl)}else Wl.isInstancedBufferAttribute?(xl.enableAttributeAndDivisor(Hl,Wl.meshPerAttribute,Fl),void 0===Il.maxInstancedCount&&(Il.maxInstancedCount=Wl.meshPerAttribute*Wl.count)):xl.enableAttribute(Hl),dl.bindBuffer(dl.ARRAY_BUFFER,Zl),dl.vertexAttribPointer(Hl,Yl,Ql,Xl,0,zl*Yl*Jl)}else if(Gl!==void 0){var td=Gl[Vl];if(td!==void 0)switch(td.length){case 2:dl.vertexAttrib2fv(Hl,td);break;case 3:dl.vertexAttrib3fv(Hl,td);break;case 4:dl.vertexAttrib4fv(Hl,td);break;default:dl.vertexAttrib1fv(Hl,td);}}}}xl.disableUnusedAttributes()}function Go(Ul,Nl){return Math.abs(Nl[0])-Math.abs(Ul[0])}function Vo(Ul,Nl){return Ul.object.renderOrder===Nl.object.renderOrder?Ul.material.program&&Nl.material.program&&Ul.material.program!==Nl.material.program?Ul.material.program.id-Nl.material.program.id:Ul.material.id===Nl.material.id?Ul.z===Nl.z?Ul.id-Nl.id:Ul.z-Nl.z:Ul.material.id-Nl.material.id:Ul.object.renderOrder-Nl.object.renderOrder}function Ho(Ul,Nl){return Ul.object.renderOrder===Nl.object.renderOrder?Ul.z===Nl.z?Ul.id-Nl.id:Nl.z-Ul.z:Ul.object.renderOrder-Nl.object.renderOrder}function ko(Ul,Nl,Il,zl,Fl){var Bl,Ol;Il.transparent?(Bl=Ts,Ol=++Ls):(Bl=Ss,Ol=++Ms);var Gl=Bl[Ol];Gl===void 0?(Gl={id:Ul.id,object:Ul,geometry:Nl,material:Il,z:rl.z,group:Fl},Bl.push(Gl)):(Gl.id=Ul.id,Gl.object=Ul,Gl.geometry=Nl,Gl.material=Il,Gl.z=rl.z,Gl.group=Fl)}function Wo(Ul){var Nl=Ul.geometry;return null===Nl.boundingSphere&&Nl.computeBoundingSphere(),$s.copy(Nl.boundingSphere).applyMatrix4(Ul.matrixWorld),Yo($s)}function Xo(Ul){return $s.center.set(0,0,0),$s.radius=0.7071067811865476,$s.applyMatrix4(Ul.matrixWorld),Yo($s)}function Yo(Ul){if(!Zs.intersectsSphere(Ul))return!1;var Nl=Qs.numPlanes;if(0===Nl)return!0;var Il=ws.clippingPlanes,zl=Ul.center,Fl=-Ul.radius,Bl=0;do if(Il[Bl].distanceToPoint(zl)<Fl)return!1;while(++Bl!==Nl);return!0}function jo(Ul,Nl){if(!1!==Ul.visible){var Il=0!==(Ul.layers.mask&Nl.layers.mask);if(Il)if(Ul.isLight)bs.push(Ul);else if(Ul.isSprite)(!1===Ul.frustumCulled||!0===Xo(Ul))&&Rs.push(Ul);else if(Ul.isLensFlare)Ps.push(Ul);else if(Ul.isImmediateRenderObject)!0===ws.sortObjects&&(rl.setFromMatrixPosition(Ul.matrixWorld),rl.applyMatrix4(el)),ko(Ul,null,Ul.material,rl.z,null);else if((Ul.isMesh||Ul.isLine||Ul.isPoints)&&(Ul.isSkinnedMesh&&Ul.skeleton.update(),!1===Ul.frustumCulled||!0===Wo(Ul))){var zl=Ul.material;if(!0===zl.visible){!0===ws.sortObjects&&(rl.setFromMatrixPosition(Ul.matrixWorld),rl.applyMatrix4(el));var Fl=El.update(Ul);if(zl.isMultiMaterial)for(var Bl=Fl.groups,Ol=zl.materials,Gl=0,Vl=Bl.length;Gl<Vl;Gl++){var Hl=Bl[Gl],Wl=Ol[Hl.materialIndex];!0===Wl.visible&&ko(Ul,Fl,Wl,rl.z,Hl)}else ko(Ul,Fl,zl,rl.z,null)}}for(var Xl=Ul.children,Gl=0,Vl=Xl.length;Gl<Vl;Gl++)jo(Xl[Gl],Nl)}}function qo(Ul,Nl,Il,zl){for(var Fl=0,Bl=Ul.length;Fl<Bl;Fl++){var Ol=Ul[Fl],Gl=Ol.object,Vl=Ol.geometry,Hl=void 0===zl?Ol.material:zl,Wl=Ol.group;if(Gl.modelViewMatrix.multiplyMatrices(Il.matrixWorldInverse,Gl.matrixWorld),Gl.normalMatrix.getNormalMatrix(Gl.modelViewMatrix),Gl.onBeforeRender(ws,Nl,Il,Vl,Hl,Wl),Gl.isImmediateRenderObject){Qo(Hl);var Xl=Jo(Il,Nl.fog,Hl,Gl);Is='',Gl.render(function(Yl){ws.renderBufferImmediate(Yl,Xl,Hl)})}else ws.renderBufferDirect(Il,Nl.fog,Vl,Hl,Gl,Wl);Gl.onAfterRender(ws,Nl,Il,Vl,Hl,Wl)}}function Zo(Ul,Nl,Il){var zl=_l.get(Ul),Fl=bl.getParameters(Ul,ol,Nl,Qs.numPlanes,Qs.numIntersection,Il),Bl=bl.getProgramCode(Ul,Fl),Ol=zl.program,Gl=!0;if(Ol===void 0)Ul.addEventListener('dispose',zo);else if(Ol.code!==Bl)Bo(Ul);else{if(Fl.shaderID!==void 0)return;Gl=!1}if(Gl){if(Fl.shaderID){var Vl=Mo[Fl.shaderID];zl.__webglShader={name:Ul.type,uniforms:_i.clone(Vl.uniforms),vertexShader:Vl.vertexShader,fragmentShader:Vl.fragmentShader}}else zl.__webglShader={name:Ul.type,uniforms:Ul.uniforms,vertexShader:Ul.vertexShader,fragmentShader:Ul.fragmentShader};Ul.__webglShader=zl.__webglShader,Ol=bl.acquireProgram(Ul,Fl,Bl),zl.program=Ol,Ul.program=Ol}var Hl=Ol.getAttributes();if(Ul.morphTargets){Ul.numSupportedMorphTargets=0;for(var Wl=0;Wl<ws.maxMorphTargets;Wl++)0<=Hl['morphTarget'+Wl]&&Ul.numSupportedMorphTargets++}if(Ul.morphNormals){Ul.numSupportedMorphNormals=0;for(var Wl=0;Wl<ws.maxMorphNormals;Wl++)0<=Hl['morphNormal'+Wl]&&Ul.numSupportedMorphNormals++}var Xl=zl.__webglShader.uniforms;(Ul.isShaderMaterial||Ul.isRawShaderMaterial)&&!0!==Ul.clipping||(zl.numClippingPlanes=Qs.numPlanes,zl.numIntersection=Qs.numIntersection,Xl.clippingPlanes=Qs.uniform),zl.fog=Nl,zl.lightsHash=ol.hash,Ul.lights&&(Xl.ambientLightColor.value=ol.ambient,Xl.directionalLights.value=ol.directional,Xl.spotLights.value=ol.spot,Xl.rectAreaLights.value=ol.rectArea,Xl.pointLights.value=ol.point,Xl.hemisphereLights.value=ol.hemi,Xl.directionalShadowMap.value=ol.directionalShadowMap,Xl.directionalShadowMatrix.value=ol.directionalShadowMatrix,Xl.spotShadowMap.value=ol.spotShadowMap,Xl.spotShadowMatrix.value=ol.spotShadowMatrix,Xl.pointShadowMap.value=ol.pointShadowMap,Xl.pointShadowMatrix.value=ol.pointShadowMatrix);var Yl=zl.program.getUniforms(),ql=xe.seqWithValue(Yl.seq,Xl);zl.uniformsList=ql}function Qo(Ul){Ul.side===or?xl.disable(dl.CULL_FACE):xl.enable(dl.CULL_FACE),xl.setFlipSided(Ul.side===nr),!0===Ul.transparent?xl.setBlending(Ul.blending,Ul.blendEquation,Ul.blendSrc,Ul.blendDst,Ul.blendEquationAlpha,Ul.blendSrcAlpha,Ul.blendDstAlpha,Ul.premultipliedAlpha):xl.setBlending(ur),xl.setDepthFunc(Ul.depthFunc),xl.setDepthTest(Ul.depthTest),xl.setDepthWrite(Ul.depthWrite),xl.setColorWrite(Ul.colorWrite),xl.setPolygonOffset(Ul.polygonOffset,Ul.polygonOffsetFactor,Ul.polygonOffsetUnits)}function Jo(Ul,Nl,Il,zl){Gs=0;var Fl=_l.get(Il);if(Js&&(Ks||Ul!==zs)){var Bl=Ul===zs&&Il.id===Ns;Qs.setState(Il.clippingPlanes,Il.clipIntersection,Il.clipShadows,Ul,Fl,Bl)}!1===Il.needsUpdate&&(void 0===Fl.program?Il.needsUpdate=!0:Il.fog&&Fl.fog!==Nl?Il.needsUpdate=!0:Il.lights&&Fl.lightsHash!==ol.hash?Il.needsUpdate=!0:void 0!==Fl.numClippingPlanes&&(Fl.numClippingPlanes!==Qs.numPlanes||Fl.numIntersection!==Qs.numIntersection)&&(Il.needsUpdate=!0)),Il.needsUpdate&&(Zo(Il,Nl,zl),Il.needsUpdate=!1);var Ol=!1,Gl=!1,Vl=!1,Hl=Fl.program,Wl=Hl.getUniforms(),Xl=Fl.__webglShader.uniforms;if(Hl.id!==Cs&&(dl.useProgram(Hl.program),Cs=Hl.id,Ol=!0,Gl=!0,Vl=!0),Il.id!==Ns&&(Ns=Il.id,Gl=!0),Ol||Ul!==zs){if(Wl.set(dl,Ul,'projectionMatrix'),hl.logarithmicDepthBuffer&&Wl.setValue(dl,'logDepthBufFC',2/(Math.log(Ul.far+1)/Math.LN2)),Ul!==zs&&(zs=Ul,Gl=!0,Vl=!0),Il.isShaderMaterial||Il.isMeshPhongMaterial||Il.isMeshStandardMaterial||Il.envMap){var Yl=Wl.map.cameraPosition;void 0!==Yl&&Yl.setValue(dl,rl.setFromMatrixPosition(Ul.matrixWorld))}(Il.isMeshPhongMaterial||Il.isMeshLambertMaterial||Il.isMeshBasicMaterial||Il.isMeshStandardMaterial||Il.isShaderMaterial||Il.skinning)&&Wl.setValue(dl,'viewMatrix',Ul.matrixWorldInverse),Wl.set(dl,ws,'toneMappingExposure'),Wl.set(dl,ws,'toneMappingWhitePoint')}if(Il.skinning){Wl.setOptional(dl,zl,'bindMatrix'),Wl.setOptional(dl,zl,'bindMatrixInverse');var ql=zl.skeleton;ql&&(hl.floatVertexTextures&&ql.useVertexTexture?(Wl.set(dl,ql,'boneTexture'),Wl.set(dl,ql,'boneTextureWidth'),Wl.set(dl,ql,'boneTextureHeight')):Wl.setOptional(dl,ql,'boneMatrices'))}return Gl&&(Il.lights&&ds(Xl,Vl),Nl&&Il.fog&&rs(Xl,Nl),(Il.isMeshBasicMaterial||Il.isMeshLambertMaterial||Il.isMeshPhongMaterial||Il.isMeshStandardMaterial||Il.isMeshNormalMaterial||Il.isMeshDepthMaterial)&&Ko(Xl,Il),Il.isLineBasicMaterial?$o(Xl,Il):Il.isLineDashedMaterial?($o(Xl,Il),es(Xl,Il)):Il.isPointsMaterial?ts(Xl,Il):Il.isMeshLambertMaterial?as(Xl,Il):Il.isMeshToonMaterial?ns(Xl,Il):Il.isMeshPhongMaterial?is(Xl,Il):Il.isMeshPhysicalMaterial?ss(Xl,Il):Il.isMeshStandardMaterial?os(Xl,Il):Il.isMeshDepthMaterial?Il.displacementMap&&(Xl.displacementMap.value=Il.displacementMap,Xl.displacementScale.value=Il.displacementScale,Xl.displacementBias.value=Il.displacementBias):Il.isMeshNormalMaterial&&ls(Xl,Il),void 0!==Xl.ltcMat&&(Xl.ltcMat.value=THREE.UniformsLib.LTC_MAT_TEXTURE),void 0!==Xl.ltcMag&&(Xl.ltcMag.value=THREE.UniformsLib.LTC_MAG_TEXTURE),xe.upload(dl,Fl.uniformsList,Xl,ws)),Wl.set(dl,zl,'modelViewMatrix'),Wl.set(dl,zl,'normalMatrix'),Wl.setValue(dl,'modelMatrix',zl.matrixWorld),Hl}function Ko(Ul,Nl){Ul.opacity.value=Nl.opacity,Ul.diffuse.value=Nl.color,Nl.emissive&&Ul.emissive.value.copy(Nl.emissive).multiplyScalar(Nl.emissiveIntensity),Ul.map.value=Nl.map,Ul.specularMap.value=Nl.specularMap,Ul.alphaMap.value=Nl.alphaMap,Nl.lightMap&&(Ul.lightMap.value=Nl.lightMap,Ul.lightMapIntensity.value=Nl.lightMapIntensity),Nl.aoMap&&(Ul.aoMap.value=Nl.aoMap,Ul.aoMapIntensity.value=Nl.aoMapIntensity);var Il;if(Nl.map?Il=Nl.map:Nl.specularMap?Il=Nl.specularMap:Nl.displacementMap?Il=Nl.displacementMap:Nl.normalMap?Il=Nl.normalMap:Nl.bumpMap?Il=Nl.bumpMap:Nl.roughnessMap?Il=Nl.roughnessMap:Nl.metalnessMap?Il=Nl.metalnessMap:Nl.alphaMap?Il=Nl.alphaMap:Nl.emissiveMap&&(Il=Nl.emissiveMap),void 0!==Il){Il.isWebGLRenderTarget&&(Il=Il.texture);var zl=Il.offset,Fl=Il.repeat;Ul.offsetRepeat.value.set(zl.x,zl.y,Fl.x,Fl.y)}Ul.envMap.value=Nl.envMap,Ul.flipEnvMap.value=Nl.envMap&&Nl.envMap.isCubeTexture?-1:1,Ul.reflectivity.value=Nl.reflectivity,Ul.refractionRatio.value=Nl.refractionRatio}function $o(Ul,Nl){Ul.diffuse.value=Nl.color,Ul.opacity.value=Nl.opacity}function es(Ul,Nl){Ul.dashSize.value=Nl.dashSize,Ul.totalSize.value=Nl.dashSize+Nl.gapSize,Ul.scale.value=Nl.scale}function ts(Ul,Nl){if(Ul.diffuse.value=Nl.color,Ul.opacity.value=Nl.opacity,Ul.size.value=Nl.size*Xs,Ul.scale.value=0.5*Ws,Ul.map.value=Nl.map,null!==Nl.map){var Il=Nl.map.offset,zl=Nl.map.repeat;Ul.offsetRepeat.value.set(Il.x,Il.y,zl.x,zl.y)}}function rs(Ul,Nl){Ul.fogColor.value=Nl.color,Nl.isFog?(Ul.fogNear.value=Nl.near,Ul.fogFar.value=Nl.far):Nl.isFogExp2&&(Ul.fogDensity.value=Nl.density)}function as(Ul,Nl){Nl.emissiveMap&&(Ul.emissiveMap.value=Nl.emissiveMap)}function is(Ul,Nl){Ul.specular.value=Nl.specular,Ul.shininess.value=Math.max(Nl.shininess,1e-4),Nl.emissiveMap&&(Ul.emissiveMap.value=Nl.emissiveMap),Nl.bumpMap&&(Ul.bumpMap.value=Nl.bumpMap,Ul.bumpScale.value=Nl.bumpScale),Nl.normalMap&&(Ul.normalMap.value=Nl.normalMap,Ul.normalScale.value.copy(Nl.normalScale)),Nl.displacementMap&&(Ul.displacementMap.value=Nl.displacementMap,Ul.displacementScale.value=Nl.displacementScale,Ul.displacementBias.value=Nl.displacementBias)}function ns(Ul,Nl){is(Ul,Nl),Nl.gradientMap&&(Ul.gradientMap.value=Nl.gradientMap)}function os(Ul,Nl){Ul.roughness.value=Nl.roughness,Ul.metalness.value=Nl.metalness,Nl.roughnessMap&&(Ul.roughnessMap.value=Nl.roughnessMap),Nl.metalnessMap&&(Ul.metalnessMap.value=Nl.metalnessMap),Nl.emissiveMap&&(Ul.emissiveMap.value=Nl.emissiveMap),Nl.bumpMap&&(Ul.bumpMap.value=Nl.bumpMap,Ul.bumpScale.value=Nl.bumpScale),Nl.normalMap&&(Ul.normalMap.value=Nl.normalMap,Ul.normalScale.value.copy(Nl.normalScale)),Nl.displacementMap&&(Ul.displacementMap.value=Nl.displacementMap,Ul.displacementScale.value=Nl.displacementScale,Ul.displacementBias.value=Nl.displacementBias),Nl.envMap&&(Ul.envMapIntensity.value=Nl.envMapIntensity)}function ss(Ul,Nl){Ul.clearCoat.value=Nl.clearCoat,Ul.clearCoatRoughness.value=Nl.clearCoatRoughness,os(Ul,Nl)}function ls(Ul,Nl){Nl.bumpMap&&(Ul.bumpMap.value=Nl.bumpMap,Ul.bumpScale.value=Nl.bumpScale),Nl.normalMap&&(Ul.normalMap.value=Nl.normalMap,Ul.normalScale.value.copy(Nl.normalScale)),Nl.displacementMap&&(Ul.displacementMap.value=Nl.displacementMap,Ul.displacementScale.value=Nl.displacementScale,Ul.displacementBias.value=Nl.displacementBias)}function ds(Ul,Nl){Ul.ambientLightColor.needsUpdate=Nl,Ul.directionalLights.needsUpdate=Nl,Ul.pointLights.needsUpdate=Nl,Ul.spotLights.needsUpdate=Nl,Ul.rectAreaLights.needsUpdate=Nl,Ul.hemisphereLights.needsUpdate=Nl}function cs(Ul){for(var Nl=0,Il=0,zl=Ul.length,Fl;Il<zl;Il++)Fl=Ul[Il],Fl.castShadow&&(ol.shadows[Nl++]=Fl);ol.shadows.length=Nl}function ps(Ul,Nl){var Bl=0,Ol=0,Gl=0,Yl=Nl.matrixWorldInverse,ql=0,Zl=0,Ql=0,Jl=0,Kl=0,Il,zl,Fl,Vl,Hl,Wl,Xl;for(Il=0,zl=Ul.length;Il<zl;Il++)if(Fl=Ul[Il],Vl=Fl.color,Hl=Fl.intensity,Wl=Fl.distance,Xl=Fl.shadow&&Fl.shadow.map?Fl.shadow.map.texture:null,Fl.isAmbientLight)Bl+=Vl.r*Hl,Ol+=Vl.g*Hl,Gl+=Vl.b*Hl;else if(Fl.isDirectionalLight){var $l=Sl.get(Fl);$l.color.copy(Fl.color).multiplyScalar(Fl.intensity),$l.direction.setFromMatrixPosition(Fl.matrixWorld),rl.setFromMatrixPosition(Fl.target.matrixWorld),$l.direction.sub(rl),$l.direction.transformDirection(Yl),$l.shadow=Fl.castShadow,Fl.castShadow&&($l.shadowBias=Fl.shadow.bias,$l.shadowRadius=Fl.shadow.radius,$l.shadowMapSize=Fl.shadow.mapSize),ol.directionalShadowMap[ql]=Xl,ol.directionalShadowMatrix[ql]=Fl.shadow.matrix,ol.directional[ql++]=$l}else if(Fl.isSpotLight){var $l=Sl.get(Fl);$l.position.setFromMatrixPosition(Fl.matrixWorld),$l.position.applyMatrix4(Yl),$l.color.copy(Vl).multiplyScalar(Hl),$l.distance=Wl,$l.direction.setFromMatrixPosition(Fl.matrixWorld),rl.setFromMatrixPosition(Fl.target.matrixWorld),$l.direction.sub(rl),$l.direction.transformDirection(Yl),$l.coneCos=Math.cos(Fl.angle),$l.penumbraCos=Math.cos(Fl.angle*(1-Fl.penumbra)),$l.decay=0===Fl.distance?0:Fl.decay,$l.shadow=Fl.castShadow,Fl.castShadow&&($l.shadowBias=Fl.shadow.bias,$l.shadowRadius=Fl.shadow.radius,$l.shadowMapSize=Fl.shadow.mapSize),ol.spotShadowMap[Ql]=Xl,ol.spotShadowMatrix[Ql]=Fl.shadow.matrix,ol.spot[Ql++]=$l}else if(Fl.isRectAreaLight){var $l=Sl.get(Fl);$l.color.copy(Vl).multiplyScalar(Hl/(Fl.width*Fl.height)),$l.position.setFromMatrixPosition(Fl.matrixWorld),$l.position.applyMatrix4(Yl),nl.identity(),al.copy(Fl.matrixWorld),al.premultiply(Yl),nl.extractRotation(al),$l.halfWidth.set(0.5*Fl.width,0,0),$l.halfHeight.set(0,0.5*Fl.height,0),$l.halfWidth.applyMatrix4(nl),$l.halfHeight.applyMatrix4(nl),ol.rectArea[Jl++]=$l}else if(Fl.isPointLight){var $l=Sl.get(Fl);$l.position.setFromMatrixPosition(Fl.matrixWorld),$l.position.applyMatrix4(Yl),$l.color.copy(Fl.color).multiplyScalar(Fl.intensity),$l.distance=Fl.distance,$l.decay=0===Fl.distance?0:Fl.decay,$l.shadow=Fl.castShadow,Fl.castShadow&&($l.shadowBias=Fl.shadow.bias,$l.shadowRadius=Fl.shadow.radius,$l.shadowMapSize=Fl.shadow.mapSize),ol.pointShadowMap[Zl]=Xl,void 0===ol.pointShadowMatrix[Zl]&&(ol.pointShadowMatrix[Zl]=new S),rl.setFromMatrixPosition(Fl.matrixWorld).negate(),ol.pointShadowMatrix[Zl].identity().setPosition(rl),ol.point[Zl++]=$l}else if(Fl.isHemisphereLight){var $l=Sl.get(Fl);$l.direction.setFromMatrixPosition(Fl.matrixWorld),$l.direction.transformDirection(Yl),$l.direction.normalize(),$l.skyColor.copy(Fl.color).multiplyScalar(Hl),$l.groundColor.copy(Fl.groundColor).multiplyScalar(Hl),ol.hemi[Kl++]=$l}ol.ambient[0]=Bl,ol.ambient[1]=Ol,ol.ambient[2]=Gl,ol.directional.length=ql,ol.spot.length=Ql,ol.rectArea.length=Jl,ol.point.length=Zl,ol.hemi.length=Kl,ol.hash=ql+','+Zl+','+Ql+','+Jl+','+Kl+','+ol.shadows.length}function ms(Ul){var Nl;if(Ul===ia)return dl.REPEAT;if(Ul===na)return dl.CLAMP_TO_EDGE;if(Ul===oa)return dl.MIRRORED_REPEAT;if(Ul===sa)return dl.NEAREST;if(Ul===la)return dl.NEAREST_MIPMAP_NEAREST;if(Ul===da)return dl.NEAREST_MIPMAP_LINEAR;if(Ul===ca)return dl.LINEAR;if(Ul===pa)return dl.LINEAR_MIPMAP_NEAREST;if(Ul===ua)return dl.LINEAR_MIPMAP_LINEAR;if(Ul===ma)return dl.UNSIGNED_BYTE;if(Ul===Ea)return dl.UNSIGNED_SHORT_4_4_4_4;if(Ul===ba)return dl.UNSIGNED_SHORT_5_5_5_1;if(Ul===Sa)return dl.UNSIGNED_SHORT_5_6_5;if(Ul===fa)return dl.BYTE;if(Ul===ga)return dl.SHORT;if(Ul===ha)return dl.UNSIGNED_SHORT;if(Ul===xa)return dl.INT;if(Ul===_a)return dl.UNSIGNED_INT;if(Ul===va)return dl.FLOAT;if(Ul===ya&&(Nl=ul.get('OES_texture_half_float'),null!==Nl))return Nl.HALF_FLOAT_OES;if(Ul===Ta)return dl.ALPHA;if(Ul===La)return dl.RGB;if(Ul===Aa)return dl.RGBA;if(Ul===Ra)return dl.LUMINANCE;if(Ul===Pa)return dl.LUMINANCE_ALPHA;if(Ul===Ca)return dl.DEPTH_COMPONENT;if(Ul===Da)return dl.DEPTH_STENCIL;if(Ul===_r)return dl.FUNC_ADD;if(Ul===vr)return dl.FUNC_SUBTRACT;if(Ul===yr)return dl.FUNC_REVERSE_SUBTRACT;if(Ul===Sr)return dl.ZERO;if(Ul===Mr)return dl.ONE;if(Ul===Tr)return dl.SRC_COLOR;if(Ul===Lr)return dl.ONE_MINUS_SRC_COLOR;if(Ul===Ar)return dl.SRC_ALPHA;if(Ul===Rr)return dl.ONE_MINUS_SRC_ALPHA;if(Ul===Pr)return dl.DST_ALPHA;if(Ul===wr)return dl.ONE_MINUS_DST_ALPHA;if(Ul===Cr)return dl.DST_COLOR;if(Ul===Dr)return dl.ONE_MINUS_DST_COLOR;if(Ul===Ur)return dl.SRC_ALPHA_SATURATE;if((Ul===Ua||Ul===Na||Ul===Ia||Ul===za)&&(Nl=ul.get('WEBGL_compressed_texture_s3tc'),null!==Nl)){if(Ul===Ua)return Nl.COMPRESSED_RGB_S3TC_DXT1_EXT;if(Ul===Na)return Nl.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(Ul===Ia)return Nl.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(Ul===za)return Nl.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((Ul===Fa||Ul===Ba||Ul===Oa||Ul===Ga)&&(Nl=ul.get('WEBGL_compressed_texture_pvrtc'),null!==Nl)){if(Ul===Fa)return Nl.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(Ul===Ba)return Nl.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(Ul===Oa)return Nl.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(Ul===Ga)return Nl.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(Ul===Va&&(Nl=ul.get('WEBGL_compressed_texture_etc1'),null!==Nl))return Nl.COMPRESSED_RGB_ETC1_WEBGL;if((Ul===Er||Ul===br)&&(Nl=ul.get('EXT_blend_minmax'),null!==Nl)){if(Ul===Er)return Nl.MIN_EXT;if(Ul===br)return Nl.MAX_EXT}return Ul===Ma&&(Nl=ul.get('WEBGL_depth_texture'),null!==Nl)?Nl.UNSIGNED_INT_24_8_WEBGL:0}console.log('THREE.WebGLRenderer',jt),Co=Co||{};var fs=Co.canvas===void 0?document.createElementNS('http://www.w3.org/1999/xhtml','canvas'):Co.canvas,gs=Co.context===void 0?null:Co.context,hs=Co.alpha!==void 0&&Co.alpha,xs=!(Co.depth!==void 0)||Co.depth,_s=!(Co.stencil!==void 0)||Co.stencil,vs=Co.antialias!==void 0&&Co.antialias,ys=!(Co.premultipliedAlpha!==void 0)||Co.premultipliedAlpha,Es=Co.preserveDrawingBuffer!==void 0&&Co.preserveDrawingBuffer,bs=[],Ss=[],Ms=-1,Ts=[],Ls=-1,As=new Float32Array(8),Rs=[],Ps=[];this.domElement=fs,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Yr,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var ws=this,Cs=null,Ds=null,Us=null,Ns=-1,Is='',zs=null,Fs=new _e,Bs=null,Os=new _e,Gs=0,Vs=new ve(0),Hs=0,ks=fs.width,Ws=fs.height,Xs=1,Ys=new _e(0,0,ks,Ws),js=!1,qs=new _e(0,0,ks,Ws),Zs=new De,Qs=new Pt,Js=!1,Ks=!1,$s=new Pe,el=new S,rl=new E,al=new S,nl=new S,ol={hash:'',ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},sl={calls:0,vertices:0,faces:0,points:0};this.info={render:sl,memory:{geometries:0,textures:0},programs:null};var dl;try{var cl={alpha:hs,depth:xs,stencil:_s,antialias:vs,premultipliedAlpha:ys,preserveDrawingBuffer:Es};if(dl=gs||fs.getContext('webgl',cl)||fs.getContext('experimental-webgl',cl),null===dl)if(null!==fs.getContext('webgl'))throw'Error creating WebGL context with your selected attributes.';else throw'Error creating WebGL context.';void 0===dl.getShaderPrecisionFormat&&(dl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),fs.addEventListener('webglcontextlost',Io,!1)}catch(Ul){console.error('THREE.WebGLRenderer: '+Ul)}var ul=new Rt(dl);ul.get('WEBGL_depth_texture'),ul.get('OES_texture_float'),ul.get('OES_texture_float_linear'),ul.get('OES_texture_half_float'),ul.get('OES_texture_half_float_linear'),ul.get('OES_standard_derivatives'),ul.get('ANGLE_instanced_arrays'),ul.get('OES_element_index_uint')&&(Qe.MaxIndex=4294967296);var hl=new At(dl,ul,Co),xl=new Lt(dl,ul,ms),_l=new Tt,yl=new Mt(dl,ul,xl,_l,hl,ms,this.info),El=new St(dl,_l,this.info),bl=new Et(this,hl),Sl=new ot;this.info.programs=bl.programs;var Ml=new nt(dl,ul,sl),Tl=new it(dl,ul,sl),Ll,Al,Rl,Pl;Uo(),this.context=dl,this.capabilities=hl,this.extensions=ul,this.properties=_l,this.state=xl;var wl=new Ue(this,ol,El,hl);this.shadowMap=wl;var Cl=new Se(this,Rs),Dl=new Ee(this,Ps);this.getContext=function(){return dl},this.getContextAttributes=function(){return dl.getContextAttributes()},this.forceContextLoss=function(){ul.get('WEBGL_lose_context').loseContext()},this.getMaxAnisotropy=function(){return hl.getMaxAnisotropy()},this.getPrecision=function(){return hl.precision},this.getPixelRatio=function(){return Xs},this.setPixelRatio=function(Ul){void 0===Ul||(Xs=Ul,this.setSize(qs.z,qs.w,!1))},this.getSize=function(){return{width:ks,height:Ws}},this.setSize=function(Ul,Nl,Il){ks=Ul,Ws=Nl,fs.width=Ul*Xs,fs.height=Nl*Xs,!1!==Il&&(fs.style.width=Ul+'px',fs.style.height=Nl+'px'),this.setViewport(0,0,Ul,Nl)},this.setViewport=function(Ul,Nl,Il,zl){xl.viewport(qs.set(Ul,Nl,Il,zl))},this.setScissor=function(Ul,Nl,Il,zl){xl.scissor(Ys.set(Ul,Nl,Il,zl))},this.setScissorTest=function(Ul){xl.setScissorTest(js=Ul)},this.getClearColor=function(){return Vs},this.setClearColor=function(Ul,Nl){Vs.set(Ul),Hs=Nl===void 0?1:Nl,xl.buffers.color.setClear(Vs.r,Vs.g,Vs.b,Hs,ys)},this.getClearAlpha=function(){return Hs},this.setClearAlpha=function(Ul){Hs=Ul,xl.buffers.color.setClear(Vs.r,Vs.g,Vs.b,Hs,ys)},this.clear=function(Ul,Nl,Il){var zl=0;(Ul===void 0||Ul)&&(zl|=dl.COLOR_BUFFER_BIT),(Nl===void 0||Nl)&&(zl|=dl.DEPTH_BUFFER_BIT),(Il===void 0||Il)&&(zl|=dl.STENCIL_BUFFER_BIT),dl.clear(zl)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(Ul,Nl,Il,zl){this.setRenderTarget(Ul),this.clear(Nl,Il,zl)},this.resetGLState=No,this.dispose=function(){Ts=[],Ls=-1,Ss=[],Ms=-1,fs.removeEventListener('webglcontextlost',Io,!1)},this.renderBufferImmediate=function(Ul,Nl,Il){xl.initAttributes();var zl=_l.get(Ul);Ul.hasPositions&&!zl.position&&(zl.position=dl.createBuffer()),Ul.hasNormals&&!zl.normal&&(zl.normal=dl.createBuffer()),Ul.hasUvs&&!zl.uv&&(zl.uv=dl.createBuffer()),Ul.hasColors&&!zl.color&&(zl.color=dl.createBuffer());var Fl=Nl.getAttributes();if(Ul.hasPositions&&(dl.bindBuffer(dl.ARRAY_BUFFER,zl.position),dl.bufferData(dl.ARRAY_BUFFER,Ul.positionArray,dl.DYNAMIC_DRAW),xl.enableAttribute(Fl.position),dl.vertexAttribPointer(Fl.position,3,dl.FLOAT,!1,0,0)),Ul.hasNormals){if(dl.bindBuffer(dl.ARRAY_BUFFER,zl.normal),!Il.isMeshPhongMaterial&&!Il.isMeshStandardMaterial&&!Il.isMeshNormalMaterial&&Il.shading===sr)for(var Bl=0,Ol=3*Ul.count;Bl<Ol;Bl+=9){var Gl=Ul.normalArray,Vl=(Gl[Bl+0]+Gl[Bl+3]+Gl[Bl+6])/3,Hl=(Gl[Bl+1]+Gl[Bl+4]+Gl[Bl+7])/3,Wl=(Gl[Bl+2]+Gl[Bl+5]+Gl[Bl+8])/3;Gl[Bl+0]=Vl,Gl[Bl+1]=Hl,Gl[Bl+2]=Wl,Gl[Bl+3]=Vl,Gl[Bl+4]=Hl,Gl[Bl+5]=Wl,Gl[Bl+6]=Vl,Gl[Bl+7]=Hl,Gl[Bl+8]=Wl}dl.bufferData(dl.ARRAY_BUFFER,Ul.normalArray,dl.DYNAMIC_DRAW),xl.enableAttribute(Fl.normal),dl.vertexAttribPointer(Fl.normal,3,dl.FLOAT,!1,0,0)}Ul.hasUvs&&Il.map&&(dl.bindBuffer(dl.ARRAY_BUFFER,zl.uv),dl.bufferData(dl.ARRAY_BUFFER,Ul.uvArray,dl.DYNAMIC_DRAW),xl.enableAttribute(Fl.uv),dl.vertexAttribPointer(Fl.uv,2,dl.FLOAT,!1,0,0)),Ul.hasColors&&Il.vertexColors!==dr&&(dl.bindBuffer(dl.ARRAY_BUFFER,zl.color),dl.bufferData(dl.ARRAY_BUFFER,Ul.colorArray,dl.DYNAMIC_DRAW),xl.enableAttribute(Fl.color),dl.vertexAttribPointer(Fl.color,3,dl.FLOAT,!1,0,0)),xl.disableUnusedAttributes(),dl.drawArrays(dl.TRIANGLES,0,Ul.count),Ul.count=0},this.renderBufferDirect=function(Ul,Nl,Il,zl,Fl,Bl){Qo(zl);var Ol=Jo(Ul,Nl,zl,Fl),Gl=!1,Vl=Il.id+'_'+Ol.id+'_'+zl.wireframe;Vl!==Is&&(Is=Vl,Gl=!0);var Hl=Fl.morphTargetInfluences;if(Hl!==void 0){for(var Wl=[],Xl=0,Yl=Hl.length,ql;Xl<Yl;Xl++)ql=Hl[Xl],Wl.push([ql,Xl]);Wl.sort(Go),8<Wl.length&&(Wl.length=8);for(var Zl=Il.morphAttributes,Xl=0,Yl=Wl.length,ql;Xl<Yl;Xl++)if(ql=Wl[Xl],As[Xl]=ql[0],0!==ql[0]){var Ql=ql[1];!0===zl.morphTargets&&Zl.position&&Il.addAttribute('morphTarget'+Xl,Zl.position[Ql]),!0===zl.morphNormals&&Zl.normal&&Il.addAttribute('morphNormal'+Xl,Zl.normal[Ql])}else!0===zl.morphTargets&&Il.removeAttribute('morphTarget'+Xl),!0===zl.morphNormals&&Il.removeAttribute('morphNormal'+Xl);for(var Xl=Wl.length,Jl=As.length;Xl<Jl;Xl++)As[Xl]=0;Ol.getUniforms().setValue(dl,'morphTargetInfluences',As),Gl=!0}var Ql=Il.index,Kl=Il.attributes.position,$l=1;!0===zl.wireframe&&(Ql=El.getWireframeAttribute(Il),$l=2);var ed;null===Ql?ed=Ml:(ed=Tl,ed.setIndex(Ql)),Gl&&(Oo(zl,Ol,Il),null!==Ql&&dl.bindBuffer(dl.ELEMENT_ARRAY_BUFFER,El.getAttributeBuffer(Ql)));var td=0;null===Ql?Kl!==void 0&&(td=Kl.count):td=Ql.count;var rd=Il.drawRange.start*$l,nd=Il.drawRange.count*$l,od=null===Bl?0:Bl.start*$l,sd=null===Bl?Infinity:Bl.count*$l,ld=Math.max(rd,od),dd=Math.min(td,rd+nd,od+sd)-1,cd=Math.max(0,dd-ld+1);if(0!==cd){if(Fl.isMesh){if(!0===zl.wireframe)xl.setLineWidth(zl.wireframeLinewidth*Do()),ed.setMode(dl.LINES);else switch(Fl.drawMode){case Ka:ed.setMode(dl.TRIANGLES);break;case $a:ed.setMode(dl.TRIANGLE_STRIP);break;case ei:ed.setMode(dl.TRIANGLE_FAN);}}else if(Fl.isLine){var pd=zl.linewidth;void 0===pd&&(pd=1),xl.setLineWidth(pd*Do()),Fl.isLineSegments?ed.setMode(dl.LINES):ed.setMode(dl.LINE_STRIP)}else Fl.isPoints&&ed.setMode(dl.POINTS);Il&&Il.isInstancedBufferGeometry?0<Il.maxInstancedCount&&ed.renderInstances(Il,ld,cd):ed.render(ld,cd)}},this.render=function(Ul,Nl,Il,zl){if(void 0!==Nl&&!0!==Nl.isCamera)return void console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');Is='',Ns=-1,zs=null,!0===Ul.autoUpdate&&Ul.updateMatrixWorld(),null===Nl.parent&&Nl.updateMatrixWorld(),Nl.matrixWorldInverse.getInverse(Nl.matrixWorld),el.multiplyMatrices(Nl.projectionMatrix,Nl.matrixWorldInverse),Zs.setFromMatrix(el),bs.length=0,Ms=-1,Ls=-1,Rs.length=0,Ps.length=0,Ks=this.localClippingEnabled,Js=Qs.init(this.clippingPlanes,Ks,Nl),jo(Ul,Nl),Ss.length=Ms+1,Ts.length=Ls+1,!0===ws.sortObjects&&(Ss.sort(Vo),Ts.sort(Ho)),Js&&Qs.beginShadows(),cs(bs),wl.render(Ul,Nl),ps(bs,Nl),Js&&Qs.endShadows(),sl.calls=0,sl.vertices=0,sl.faces=0,sl.points=0,void 0===Il&&(Il=null),this.setRenderTarget(Il);var Fl=Ul.background;if(null===Fl?xl.buffers.color.setClear(Vs.r,Vs.g,Vs.b,Hs,ys):Fl&&Fl.isColor&&(xl.buffers.color.setClear(Fl.r,Fl.g,Fl.b,1,ys),zl=!0),(this.autoClear||zl)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),Fl&&Fl.isCubeTexture?(void 0===Rl&&(Rl=new tt,Pl=new Je(new Ke(5,5,5),new Le({uniforms:Mo.cube.uniforms,vertexShader:Mo.cube.vertexShader,fragmentShader:Mo.cube.fragmentShader,side:nr,depthTest:!1,depthWrite:!1,fog:!1}))),Rl.projectionMatrix.copy(Nl.projectionMatrix),Rl.matrixWorld.extractRotation(Nl.matrixWorld),Rl.matrixWorldInverse.getInverse(Rl.matrixWorld),Pl.material.uniforms.tCube.value=Fl,Pl.modelViewMatrix.multiplyMatrices(Rl.matrixWorldInverse,Pl.matrixWorld),El.update(Pl),ws.renderBufferDirect(Rl,null,Pl.geometry,Pl.material,Pl,null)):Fl&&Fl.isTexture&&(void 0===Ll&&(Ll=new rt(-1,1,1,-1,0,1),Al=new Je(new $e(2,2),new Ve({depthTest:!1,depthWrite:!1,fog:!1}))),Al.material.map=Fl,El.update(Al),ws.renderBufferDirect(Ll,null,Al.geometry,Al.material,Al,null)),Ul.overrideMaterial){var Bl=Ul.overrideMaterial;qo(Ss,Ul,Nl,Bl),qo(Ts,Ul,Nl,Bl)}else xl.setBlending(ur),qo(Ss,Ul,Nl),qo(Ts,Ul,Nl);Cl.render(Ul,Nl),Dl.render(Ul,Nl,Os),Il&&yl.updateRenderTargetMipmap(Il),xl.setDepthTest(!0),xl.setDepthWrite(!0),xl.setColorWrite(!0)},this.setFaceCulling=function(Ul,Nl){xl.setCullFace(Ul),xl.setFlipSided(Nl===$t)},this.allocTextureUnit=function(){var Ul=Gs;return Ul>=hl.maxTextures&&console.warn('WebGLRenderer: trying to use '+Ul+' texture units while this GPU supports only '+hl.maxTextures),Gs+=1,Ul},this.setTexture2D=function(){var Ul=!1;return function(Il,zl){Il&&Il.isWebGLRenderTarget&&(!Ul&&(console.warn('THREE.WebGLRenderer.setTexture2D: don\'t use render targets as textures. Use their .texture property instead.'),Ul=!0),Il=Il.texture),yl.setTexture2D(Il,zl)}}(),this.setTexture=function(){var Ul=!1;return function(Il,zl){Ul||(console.warn('THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.'),Ul=!0),yl.setTexture2D(Il,zl)}}(),this.setTextureCube=function(){var Ul=!1;return function(Il,zl){Il&&Il.isWebGLRenderTargetCube&&(!Ul&&(console.warn('THREE.WebGLRenderer.setTextureCube: don\'t use cube render targets as textures. Use their .texture property instead.'),Ul=!0),Il=Il.texture),Il&&Il.isCubeTexture||Array.isArray(Il.image)&&6===Il.image.length?yl.setTextureCube(Il,zl):yl.setTextureCubeDynamic(Il,zl)}}(),this.getCurrentRenderTarget=function(){return Ds},this.setRenderTarget=function(Ul){Ds=Ul,Ul&&void 0===_l.get(Ul).__webglFramebuffer&&yl.setupRenderTarget(Ul);var Nl=Ul&&Ul.isWebGLRenderTargetCube,Il;if(Ul){var zl=_l.get(Ul);Il=Nl?zl.__webglFramebuffer[Ul.activeCubeFace]:zl.__webglFramebuffer,Fs.copy(Ul.scissor),Bs=Ul.scissorTest,Os.copy(Ul.viewport)}else Il=null,Fs.copy(Ys).multiplyScalar(Xs),Bs=js,Os.copy(qs).multiplyScalar(Xs);if(Us!==Il&&(dl.bindFramebuffer(dl.FRAMEBUFFER,Il),Us=Il),xl.scissor(Fs),xl.setScissorTest(Bs),xl.viewport(Os),Nl){var Fl=_l.get(Ul.texture);dl.framebufferTexture2D(dl.FRAMEBUFFER,dl.COLOR_ATTACHMENT0,dl.TEXTURE_CUBE_MAP_POSITIVE_X+Ul.activeCubeFace,Fl.__webglTexture,Ul.activeMipMapLevel)}},this.readRenderTargetPixels=function(Ul,Nl,Il,zl,Fl,Bl){if(!1===(Ul&&Ul.isWebGLRenderTarget))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');var Ol=_l.get(Ul).__webglFramebuffer;if(Ol){var Gl=!1;Ol!==Us&&(dl.bindFramebuffer(dl.FRAMEBUFFER,Ol),Gl=!0);try{var Vl=Ul.texture,Hl=Vl.format,Wl=Vl.type;if(Hl!==Aa&&ms(Hl)!==dl.getParameter(dl.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');if(Wl!==ma&&ms(Wl)!==dl.getParameter(dl.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Wl===va&&(ul.get('OES_texture_float')||ul.get('WEBGL_color_buffer_float')))&&!(Wl===ya&&ul.get('EXT_color_buffer_half_float')))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');dl.checkFramebufferStatus(dl.FRAMEBUFFER)===dl.FRAMEBUFFER_COMPLETE?0<=Nl&&Nl<=Ul.width-zl&&0<=Il&&Il<=Ul.height-Fl&&dl.readPixels(Nl,Il,zl,Fl,ms(Hl),ms(Wl),Bl):console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.')}finally{Gl&&dl.bindFramebuffer(dl.FRAMEBUFFER,Us)}}}},o.Scene=Ct,o.Mesh=Je,o.VideoTexture=Dt,o.MeshBasicMaterial=Ve,o.ShaderMaterial=Le,o.TextureLoader=It,o.PerspectiveCamera=tt,o.Object3D=Fe,o.Raycaster=zt,o.Math=pi,o.Quaternion=_,o.Euler=Ie,o.Matrix4=S,o.Matrix3=we,o.Vector4=_e,o.Vector3=E,o.Vector2=T,o.Color=ve,o.TorusGeometry=Ot,o.SphereGeometry=Vt,o.CircleGeometry=kt,o.RingGeometry=Xt,o.REVISION=jt,o.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},o.CullFaceNone=Zt,o.CullFaceBack=Qt,o.CullFaceFront=Jt,o.CullFaceFrontBack=3,o.FrontFaceDirectionCW=$t,o.FrontFaceDirectionCCW=1,o.BasicShadowMap=0,o.PCFShadowMap=rr,o.PCFSoftShadowMap=ar,o.FrontSide=ir,o.BackSide=nr,o.DoubleSide=or,o.FlatShading=sr,o.SmoothShading=lr,o.NoColors=dr,o.FaceColors=1,o.VertexColors=2,o.NoBlending=ur,o.NormalBlending=mr,o.AdditiveBlending=fr,o.SubtractiveBlending=gr,o.MultiplyBlending=hr,o.CustomBlending=xr,o.AddEquation=_r,o.SubtractEquation=vr,o.ReverseSubtractEquation=yr,o.MinEquation=Er,o.MaxEquation=br,o.ZeroFactor=Sr,o.OneFactor=Mr,o.SrcColorFactor=Tr,o.OneMinusSrcColorFactor=Lr,o.SrcAlphaFactor=Ar,o.OneMinusSrcAlphaFactor=Rr,o.DstAlphaFactor=Pr,o.OneMinusDstAlphaFactor=wr,o.DstColorFactor=Cr,o.OneMinusDstColorFactor=Dr,o.SrcAlphaSaturateFactor=Ur,o.NeverDepth=Nr,o.AlwaysDepth=Ir,o.LessDepth=zr,o.LessEqualDepth=Fr,o.EqualDepth=Br,o.GreaterEqualDepth=Or,o.GreaterDepth=Gr,o.NotEqualDepth=Vr,o.MultiplyOperation=Hr,o.MixOperation=kr,o.AddOperation=Wr,o.NoToneMapping=Xr,o.LinearToneMapping=Yr,o.ReinhardToneMapping=jr,o.Uncharted2ToneMapping=qr,o.CineonToneMapping=Zr,o.UVMapping=Qr,o.CubeReflectionMapping=Jr,o.CubeRefractionMapping=Kr,o.EquirectangularReflectionMapping=$r,o.EquirectangularRefractionMapping=ea,o.SphericalReflectionMapping=ta,o.CubeUVReflectionMapping=ra,o.CubeUVRefractionMapping=aa,o.RepeatWrapping=ia,o.ClampToEdgeWrapping=na,o.MirroredRepeatWrapping=oa,o.NearestFilter=sa,o.NearestMipMapNearestFilter=la,o.NearestMipMapLinearFilter=da,o.LinearFilter=ca,o.LinearMipMapNearestFilter=pa,o.LinearMipMapLinearFilter=ua,o.UnsignedByteType=ma,o.ByteType=fa,o.ShortType=ga,o.UnsignedShortType=ha,o.IntType=xa,o.UnsignedIntType=_a,o.FloatType=va,o.HalfFloatType=ya,o.UnsignedShort4444Type=Ea,o.UnsignedShort5551Type=ba,o.UnsignedShort565Type=Sa,o.UnsignedInt248Type=Ma,o.AlphaFormat=Ta,o.RGBFormat=La,o.RGBAFormat=Aa,o.LuminanceFormat=Ra,o.LuminanceAlphaFormat=Pa,o.RGBEFormat=Aa,o.DepthFormat=Ca,o.DepthStencilFormat=Da,o.RGB_S3TC_DXT1_Format=Ua,o.RGBA_S3TC_DXT1_Format=Na,o.RGBA_S3TC_DXT3_Format=Ia,o.RGBA_S3TC_DXT5_Format=za,o.RGB_PVRTC_4BPPV1_Format=Fa,o.RGB_PVRTC_2BPPV1_Format=Ba,o.RGBA_PVRTC_4BPPV1_Format=Oa,o.RGBA_PVRTC_2BPPV1_Format=Ga,o.RGB_ETC1_Format=Va,o.LoopOnce=2200,o.LoopRepeat=2201,o.LoopPingPong=2202,o.InterpolateDiscrete=2300,o.InterpolateLinear=2301,o.InterpolateSmooth=2302,o.ZeroCurvatureEnding=2400,o.ZeroSlopeEnding=2401,o.WrapAroundEnding=2402,o.TrianglesDrawMode=Ka,o.TriangleStripDrawMode=$a,o.TriangleFanDrawMode=ei,o.LinearEncoding=ti,o.sRGBEncoding=ri,o.GammaEncoding=ai,o.RGBEEncoding=ii,o.LogLuvEncoding=3003,o.RGBM7Encoding=oi,o.RGBM16Encoding=si,o.RGBDEncoding=li,o.BasicDepthPacking=di,o.RGBADepthPacking=ci,Object.defineProperty(o,'__esModule',{value:!0}),Object.defineProperty(o,'AudioContext',{get:function(){return o.getAudioContext()}})});